// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.search {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class SearchTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_search_Statistic__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.search.Statistic, global::bnet.protocol.search.Statistic.Builder> internal__static_bnet_protocol_search_Statistic__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_search_Filter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.search.Filter, global::bnet.protocol.search.Filter.Builder> internal__static_bnet_protocol_search_Filter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_search_Object__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.search.Object, global::bnet.protocol.search.Object.Builder> internal__static_bnet_protocol_search_Object__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static SearchTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CixzZXJ2aWNlL3NlYXJjaC9kZWZpbml0aW9uL3NlYXJjaF90eXBlcy5wcm90" + 
          "bxIUYm5ldC5wcm90b2NvbC5zZWFyY2giKQoJU3RhdGlzdGljEg0KAmlkGAEg" + 
          "ASgEOgEwEg0KBXZhbHVlGAIgAigFItMCCgZGaWx0ZXISMgoJc3RhdGlzdGlj" + 
          "GAEgAigLMh8uYm5ldC5wcm90b2NvbC5zZWFyY2guU3RhdGlzdGljEjkKCWNv" + 
          "bXBhcmFuZBgCIAIoDjImLmJuZXQucHJvdG9jb2wuc2VhcmNoLkZpbHRlci5D" + 
          "b21wYXJhbmQSRwoOc29ydF9kaXJlY3Rpb24YAyABKA4yKi5ibmV0LnByb3Rv" + 
          "Y29sLnNlYXJjaC5GaWx0ZXIuU29ydERpcmVjdGlvbjoDQVNDIm0KCUNvbXBh" + 
          "cmFuZBIKCgZFUVVBTFMQABINCglMRVNTX1RIQU4QARIXChNMRVNTX1RIQU5f" + 
          "T1JfRVFVQUxTEAISEAoMR1JFQVRFUl9USEFOEAMSGgoWR1JFQVRFUl9USEFO" + 
          "X09SX0VRVUFMUxAEIiIKDVNvcnREaXJlY3Rpb24SBwoDQVNDEAASCAoEREVT" + 
          "QxABIlcKBk9iamVjdBIKCgJpZBgBIAIoDBIMCgRkYXRhGAIgASgMEjMKCnN0" + 
          "YXRpc3RpY3MYAyADKAsyHy5ibmV0LnByb3RvY29sLnNlYXJjaC5TdGF0aXN0" + 
          "aWM=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bnet_protocol_search_Statistic__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bnet_protocol_search_Statistic__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.search.Statistic, global::bnet.protocol.search.Statistic.Builder>(internal__static_bnet_protocol_search_Statistic__Descriptor,
                new string[] { "Id", "Value", });
        internal__static_bnet_protocol_search_Filter__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bnet_protocol_search_Filter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.search.Filter, global::bnet.protocol.search.Filter.Builder>(internal__static_bnet_protocol_search_Filter__Descriptor,
                new string[] { "Statistic", "Comparand", "SortDirection", });
        internal__static_bnet_protocol_search_Object__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bnet_protocol_search_Object__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.search.Object, global::bnet.protocol.search.Object.Builder>(internal__static_bnet_protocol_search_Object__Descriptor,
                new string[] { "Id", "Data", "Statistics", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Statistic : pb::GeneratedMessage<Statistic, Statistic.Builder> {
    private Statistic() { }
    private static readonly Statistic defaultInstance = new Statistic().MakeReadOnly();
    private static readonly string[] _statisticFieldNames = new string[] { "id", "value" };
    private static readonly uint[] _statisticFieldTags = new uint[] { 8, 16 };
    public static Statistic DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Statistic DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Statistic ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.search.SearchTypes.internal__static_bnet_protocol_search_Statistic__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Statistic, Statistic.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.search.SearchTypes.internal__static_bnet_protocol_search_Statistic__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private ulong id_;
    public bool HasId {
      get { return hasId; }
    }
    public ulong Id {
      get { return id_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private int value_;
    public bool HasValue {
      get { return hasValue; }
    }
    public int Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _statisticFieldNames;
      if (hasId) {
        output.WriteUInt64(1, field_names[0], Id);
      }
      if (hasValue) {
        output.WriteInt32(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, Id);
        }
        if (hasValue) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Value);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Statistic ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Statistic ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Statistic ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Statistic ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Statistic ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Statistic ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Statistic ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Statistic ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Statistic ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Statistic ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Statistic MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Statistic prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Statistic, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Statistic cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Statistic result;
      
      private Statistic PrepareBuilder() {
        if (resultIsReadOnly) {
          Statistic original = result;
          result = new Statistic();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Statistic MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.search.Statistic.Descriptor; }
      }
      
      public override Statistic DefaultInstanceForType {
        get { return global::bnet.protocol.search.Statistic.DefaultInstance; }
      }
      
      public override Statistic BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Statistic) {
          return MergeFrom((Statistic) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Statistic other) {
        if (other == global::bnet.protocol.search.Statistic.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_statisticFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _statisticFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadUInt64(ref result.id_);
              break;
            }
            case 16: {
              result.hasValue = input.ReadInt32(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public ulong Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(ulong value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0UL;
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public int Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(int value) {
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = 0;
        return this;
      }
    }
    static Statistic() {
      object.ReferenceEquals(global::bnet.protocol.search.SearchTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Filter : pb::GeneratedMessage<Filter, Filter.Builder> {
    private Filter() { }
    private static readonly Filter defaultInstance = new Filter().MakeReadOnly();
    private static readonly string[] _filterFieldNames = new string[] { "comparand", "sort_direction", "statistic" };
    private static readonly uint[] _filterFieldTags = new uint[] { 16, 24, 10 };
    public static Filter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Filter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Filter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.search.SearchTypes.internal__static_bnet_protocol_search_Filter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Filter, Filter.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.search.SearchTypes.internal__static_bnet_protocol_search_Filter__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static class Types {
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
      public enum Comparand {
        EQUALS = 0,
        LESS_THAN = 1,
        LESS_THAN_OR_EQUALS = 2,
        GREATER_THAN = 3,
        GREATER_THAN_OR_EQUALS = 4,
      }
      
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
      public enum SortDirection {
        ASC = 0,
        DESC = 1,
      }
      
    }
    #endregion
    
    public const int StatisticFieldNumber = 1;
    private bool hasStatistic;
    private global::bnet.protocol.search.Statistic statistic_;
    public bool HasStatistic {
      get { return hasStatistic; }
    }
    public global::bnet.protocol.search.Statistic Statistic {
      get { return statistic_ ?? global::bnet.protocol.search.Statistic.DefaultInstance; }
    }
    
    public const int ComparandFieldNumber = 2;
    private bool hasComparand;
    private global::bnet.protocol.search.Filter.Types.Comparand comparand_ = global::bnet.protocol.search.Filter.Types.Comparand.EQUALS;
    public bool HasComparand {
      get { return hasComparand; }
    }
    public global::bnet.protocol.search.Filter.Types.Comparand Comparand {
      get { return comparand_; }
    }
    
    public const int SortDirectionFieldNumber = 3;
    private bool hasSortDirection;
    private global::bnet.protocol.search.Filter.Types.SortDirection sortDirection_ = global::bnet.protocol.search.Filter.Types.SortDirection.ASC;
    public bool HasSortDirection {
      get { return hasSortDirection; }
    }
    public global::bnet.protocol.search.Filter.Types.SortDirection SortDirection {
      get { return sortDirection_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStatistic) return false;
        if (!hasComparand) return false;
        if (!Statistic.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _filterFieldNames;
      if (hasStatistic) {
        output.WriteMessage(1, field_names[2], Statistic);
      }
      if (hasComparand) {
        output.WriteEnum(2, field_names[0], (int) Comparand, Comparand);
      }
      if (hasSortDirection) {
        output.WriteEnum(3, field_names[1], (int) SortDirection, SortDirection);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStatistic) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Statistic);
        }
        if (hasComparand) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Comparand);
        }
        if (hasSortDirection) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) SortDirection);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Filter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Filter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Filter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Filter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Filter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Filter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Filter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Filter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Filter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Filter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Filter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Filter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Filter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Filter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Filter result;
      
      private Filter PrepareBuilder() {
        if (resultIsReadOnly) {
          Filter original = result;
          result = new Filter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Filter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.search.Filter.Descriptor; }
      }
      
      public override Filter DefaultInstanceForType {
        get { return global::bnet.protocol.search.Filter.DefaultInstance; }
      }
      
      public override Filter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Filter) {
          return MergeFrom((Filter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Filter other) {
        if (other == global::bnet.protocol.search.Filter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStatistic) {
          MergeStatistic(other.Statistic);
        }
        if (other.HasComparand) {
          Comparand = other.Comparand;
        }
        if (other.HasSortDirection) {
          SortDirection = other.SortDirection;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_filterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _filterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.search.Statistic.Builder subBuilder = global::bnet.protocol.search.Statistic.CreateBuilder();
              if (result.hasStatistic) {
                subBuilder.MergeFrom(Statistic);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Statistic = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.comparand_, out unknown)) {
                result.hasComparand = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.sortDirection_, out unknown)) {
                result.hasSortDirection = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStatistic {
       get { return result.hasStatistic; }
      }
      public global::bnet.protocol.search.Statistic Statistic {
        get { return result.Statistic; }
        set { SetStatistic(value); }
      }
      public Builder SetStatistic(global::bnet.protocol.search.Statistic value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStatistic = true;
        result.statistic_ = value;
        return this;
      }
      public Builder SetStatistic(global::bnet.protocol.search.Statistic.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasStatistic = true;
        result.statistic_ = builderForValue.Build();
        return this;
      }
      public Builder MergeStatistic(global::bnet.protocol.search.Statistic value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasStatistic &&
            result.statistic_ != global::bnet.protocol.search.Statistic.DefaultInstance) {
            result.statistic_ = global::bnet.protocol.search.Statistic.CreateBuilder(result.statistic_).MergeFrom(value).BuildPartial();
        } else {
          result.statistic_ = value;
        }
        result.hasStatistic = true;
        return this;
      }
      public Builder ClearStatistic() {
        PrepareBuilder();
        result.hasStatistic = false;
        result.statistic_ = null;
        return this;
      }
      
      public bool HasComparand {
       get { return result.hasComparand; }
      }
      public global::bnet.protocol.search.Filter.Types.Comparand Comparand {
        get { return result.Comparand; }
        set { SetComparand(value); }
      }
      public Builder SetComparand(global::bnet.protocol.search.Filter.Types.Comparand value) {
        PrepareBuilder();
        result.hasComparand = true;
        result.comparand_ = value;
        return this;
      }
      public Builder ClearComparand() {
        PrepareBuilder();
        result.hasComparand = false;
        result.comparand_ = global::bnet.protocol.search.Filter.Types.Comparand.EQUALS;
        return this;
      }
      
      public bool HasSortDirection {
       get { return result.hasSortDirection; }
      }
      public global::bnet.protocol.search.Filter.Types.SortDirection SortDirection {
        get { return result.SortDirection; }
        set { SetSortDirection(value); }
      }
      public Builder SetSortDirection(global::bnet.protocol.search.Filter.Types.SortDirection value) {
        PrepareBuilder();
        result.hasSortDirection = true;
        result.sortDirection_ = value;
        return this;
      }
      public Builder ClearSortDirection() {
        PrepareBuilder();
        result.hasSortDirection = false;
        result.sortDirection_ = global::bnet.protocol.search.Filter.Types.SortDirection.ASC;
        return this;
      }
    }
    static Filter() {
      object.ReferenceEquals(global::bnet.protocol.search.SearchTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Object : pb::GeneratedMessage<Object, Object.Builder> {
    private Object() { }
    private static readonly Object defaultInstance = new Object().MakeReadOnly();
    private static readonly string[] _objectFieldNames = new string[] { "data", "id", "statistics" };
    private static readonly uint[] _objectFieldTags = new uint[] { 18, 10, 26 };
    public static Object DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Object DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Object ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.search.SearchTypes.internal__static_bnet_protocol_search_Object__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Object, Object.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.search.SearchTypes.internal__static_bnet_protocol_search_Object__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private pb::ByteString id_ = pb::ByteString.Empty;
    public bool HasId {
      get { return hasId; }
    }
    public pb::ByteString Id {
      get { return id_; }
    }
    
    public const int DataFieldNumber = 2;
    private bool hasData;
    private pb::ByteString data_ = pb::ByteString.Empty;
    public bool HasData {
      get { return hasData; }
    }
    public pb::ByteString Data {
      get { return data_; }
    }
    
    public const int StatisticsFieldNumber = 3;
    private pbc::PopsicleList<global::bnet.protocol.search.Statistic> statistics_ = new pbc::PopsicleList<global::bnet.protocol.search.Statistic>();
    public scg::IList<global::bnet.protocol.search.Statistic> StatisticsList {
      get { return statistics_; }
    }
    public int StatisticsCount {
      get { return statistics_.Count; }
    }
    public global::bnet.protocol.search.Statistic GetStatistics(int index) {
      return statistics_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        foreach (global::bnet.protocol.search.Statistic element in StatisticsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _objectFieldNames;
      if (hasId) {
        output.WriteBytes(1, field_names[1], Id);
      }
      if (hasData) {
        output.WriteBytes(2, field_names[0], Data);
      }
      if (statistics_.Count > 0) {
        output.WriteMessageArray(3, field_names[2], statistics_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeBytesSize(1, Id);
        }
        if (hasData) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, Data);
        }
        foreach (global::bnet.protocol.search.Statistic element in StatisticsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Object ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Object ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Object ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Object ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Object ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Object ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Object ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Object ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Object ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Object ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Object MakeReadOnly() {
      statistics_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Object prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Object, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Object cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Object result;
      
      private Object PrepareBuilder() {
        if (resultIsReadOnly) {
          Object original = result;
          result = new Object();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Object MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.search.Object.Descriptor; }
      }
      
      public override Object DefaultInstanceForType {
        get { return global::bnet.protocol.search.Object.DefaultInstance; }
      }
      
      public override Object BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Object) {
          return MergeFrom((Object) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Object other) {
        if (other == global::bnet.protocol.search.Object.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasData) {
          Data = other.Data;
        }
        if (other.statistics_.Count != 0) {
          result.statistics_.Add(other.statistics_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_objectFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _objectFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasId = input.ReadBytes(ref result.id_);
              break;
            }
            case 18: {
              result.hasData = input.ReadBytes(ref result.data_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.statistics_, global::bnet.protocol.search.Statistic.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public pb::ByteString Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasData {
        get { return result.hasData; }
      }
      public pb::ByteString Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder ClearData() {
        PrepareBuilder();
        result.hasData = false;
        result.data_ = pb::ByteString.Empty;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.search.Statistic> StatisticsList {
        get { return PrepareBuilder().statistics_; }
      }
      public int StatisticsCount {
        get { return result.StatisticsCount; }
      }
      public global::bnet.protocol.search.Statistic GetStatistics(int index) {
        return result.GetStatistics(index);
      }
      public Builder SetStatistics(int index, global::bnet.protocol.search.Statistic value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.statistics_[index] = value;
        return this;
      }
      public Builder SetStatistics(int index, global::bnet.protocol.search.Statistic.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.statistics_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStatistics(global::bnet.protocol.search.Statistic value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.statistics_.Add(value);
        return this;
      }
      public Builder AddStatistics(global::bnet.protocol.search.Statistic.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.statistics_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStatistics(scg::IEnumerable<global::bnet.protocol.search.Statistic> values) {
        PrepareBuilder();
        result.statistics_.Add(values);
        return this;
      }
      public Builder ClearStatistics() {
        PrepareBuilder();
        result.statistics_.Clear();
        return this;
      }
    }
    static Object() {
      object.ReferenceEquals(global::bnet.protocol.search.SearchTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
