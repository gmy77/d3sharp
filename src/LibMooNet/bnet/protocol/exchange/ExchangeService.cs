// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.exchange {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class ExchangeService {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_CreateOrderBookRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CreateOrderBookRequest, global::bnet.protocol.exchange.CreateOrderBookRequest.Builder> internal__static_bnet_protocol_exchange_CreateOrderBookRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_CreateOrderBookResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CreateOrderBookResponse, global::bnet.protocol.exchange.CreateOrderBookResponse.Builder> internal__static_bnet_protocol_exchange_CreateOrderBookResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest, global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest.Builder> internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse, global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse.Builder> internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest, global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest.Builder> internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse, global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse.Builder> internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest, global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest.Builder> internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse, global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse.Builder> internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest, global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest.Builder> internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse, global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse.Builder> internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryOffersByOrderBookRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOffersByOrderBookRequest, global::bnet.protocol.exchange.QueryOffersByOrderBookRequest.Builder> internal__static_bnet_protocol_exchange_QueryOffersByOrderBookRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryOffersByOrderBookResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOffersByOrderBookResponse, global::bnet.protocol.exchange.QueryOffersByOrderBookResponse.Builder> internal__static_bnet_protocol_exchange_QueryOffersByOrderBookResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryBidsByOrderBookRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryBidsByOrderBookRequest, global::bnet.protocol.exchange.QueryBidsByOrderBookRequest.Builder> internal__static_bnet_protocol_exchange_QueryBidsByOrderBookRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryBidsByOrderBookResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryBidsByOrderBookResponse, global::bnet.protocol.exchange.QueryBidsByOrderBookResponse.Builder> internal__static_bnet_protocol_exchange_QueryBidsByOrderBookResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest, global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest.Builder> internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse, global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse.Builder> internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest, global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest.Builder> internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse, global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse.Builder> internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest, global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest.Builder> internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse, global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse.Builder> internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_SubscribeOrderBookStatusChangeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest, global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest.Builder> internal__static_bnet_protocol_exchange_SubscribeOrderBookStatusChangeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_UnsubscribeOrderBookStatusChangeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest, global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest.Builder> internal__static_bnet_protocol_exchange_UnsubscribeOrderBookStatusChangeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_SubscribeOrderUpdateRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.SubscribeOrderUpdateRequest, global::bnet.protocol.exchange.SubscribeOrderUpdateRequest.Builder> internal__static_bnet_protocol_exchange_SubscribeOrderUpdateRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_UnsubscribeOrderUpdateRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.UnsubscribeOrderUpdateRequest, global::bnet.protocol.exchange.UnsubscribeOrderUpdateRequest.Builder> internal__static_bnet_protocol_exchange_UnsubscribeOrderUpdateRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_SubscribeAdvancedOrderUpdateRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.SubscribeAdvancedOrderUpdateRequest, global::bnet.protocol.exchange.SubscribeAdvancedOrderUpdateRequest.Builder> internal__static_bnet_protocol_exchange_SubscribeAdvancedOrderUpdateRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_UnsubscribeAdvancedOrderUpdateRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.UnsubscribeAdvancedOrderUpdateRequest, global::bnet.protocol.exchange.UnsubscribeAdvancedOrderUpdateRequest.Builder> internal__static_bnet_protocol_exchange_UnsubscribeAdvancedOrderUpdateRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_ClaimRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.ClaimRequest, global::bnet.protocol.exchange.ClaimRequest.Builder> internal__static_bnet_protocol_exchange_ClaimRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_CancelRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CancelRequest, global::bnet.protocol.exchange.CancelRequest.Builder> internal__static_bnet_protocol_exchange_CancelRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_RefundRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.RefundRequest, global::bnet.protocol.exchange.RefundRequest.Builder> internal__static_bnet_protocol_exchange_RefundRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetConfigurationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetConfigurationRequest, global::bnet.protocol.exchange.GetConfigurationRequest.Builder> internal__static_bnet_protocol_exchange_GetConfigurationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetConfigurationResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetConfigurationResponse, global::bnet.protocol.exchange.GetConfigurationResponse.Builder> internal__static_bnet_protocol_exchange_GetConfigurationResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetOfferFeeEstimationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetOfferFeeEstimationRequest, global::bnet.protocol.exchange.GetOfferFeeEstimationRequest.Builder> internal__static_bnet_protocol_exchange_GetOfferFeeEstimationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetBidFeeEstimationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetBidFeeEstimationRequest, global::bnet.protocol.exchange.GetBidFeeEstimationRequest.Builder> internal__static_bnet_protocol_exchange_GetBidFeeEstimationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetFeeEstimationResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetFeeEstimationResponse, global::bnet.protocol.exchange.GetFeeEstimationResponse.Builder> internal__static_bnet_protocol_exchange_GetFeeEstimationResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_OrderBookNotificationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBookNotificationRequest, global::bnet.protocol.exchange.OrderBookNotificationRequest.Builder> internal__static_bnet_protocol_exchange_OrderBookNotificationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_OfferNotificationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OfferNotificationRequest, global::bnet.protocol.exchange.OfferNotificationRequest.Builder> internal__static_bnet_protocol_exchange_OfferNotificationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_BidNotificationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.BidNotificationRequest, global::bnet.protocol.exchange.BidNotificationRequest.Builder> internal__static_bnet_protocol_exchange_BidNotificationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_CustomNotificationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CustomNotificationRequest, global::bnet.protocol.exchange.CustomNotificationRequest.Builder> internal__static_bnet_protocol_exchange_CustomNotificationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryOrdersByAccountForItemRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOrdersByAccountForItemRequest, global::bnet.protocol.exchange.QueryOrdersByAccountForItemRequest.Builder> internal__static_bnet_protocol_exchange_QueryOrdersByAccountForItemRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryOrdersByAccountForItemResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOrdersByAccountForItemResponse, global::bnet.protocol.exchange.QueryOrdersByAccountForItemResponse.Builder> internal__static_bnet_protocol_exchange_QueryOrdersByAccountForItemResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetFeeDetailsRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetFeeDetailsRequest, global::bnet.protocol.exchange.GetFeeDetailsRequest.Builder> internal__static_bnet_protocol_exchange_GetFeeDetailsRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetFeeDetailsResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetFeeDetailsResponse, global::bnet.protocol.exchange.GetFeeDetailsResponse.Builder> internal__static_bnet_protocol_exchange_GetFeeDetailsResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetOrderBookStatisticsRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetOrderBookStatisticsRequest, global::bnet.protocol.exchange.GetOrderBookStatisticsRequest.Builder> internal__static_bnet_protocol_exchange_GetOrderBookStatisticsRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetOrderBookStatisticsResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetOrderBookStatisticsResponse, global::bnet.protocol.exchange.GetOrderBookStatisticsResponse.Builder> internal__static_bnet_protocol_exchange_GetOrderBookStatisticsResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetBidDetailsRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetBidDetailsRequest, global::bnet.protocol.exchange.GetBidDetailsRequest.Builder> internal__static_bnet_protocol_exchange_GetBidDetailsRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetBidDetailsResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetBidDetailsResponse, global::bnet.protocol.exchange.GetBidDetailsResponse.Builder> internal__static_bnet_protocol_exchange_GetBidDetailsResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetOfferDetailsRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetOfferDetailsRequest, global::bnet.protocol.exchange.GetOfferDetailsRequest.Builder> internal__static_bnet_protocol_exchange_GetOfferDetailsRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetOfferDetailsResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetOfferDetailsResponse, global::bnet.protocol.exchange.GetOfferDetailsResponse.Builder> internal__static_bnet_protocol_exchange_GetOfferDetailsResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetSystemTimeResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetSystemTimeResponse, global::bnet.protocol.exchange.GetSystemTimeResponse.Builder> internal__static_bnet_protocol_exchange_GetSystemTimeResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_CreateCSTradeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CreateCSTradeRequest, global::bnet.protocol.exchange.CreateCSTradeRequest.Builder> internal__static_bnet_protocol_exchange_CreateCSTradeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetOrderCountRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetOrderCountRequest, global::bnet.protocol.exchange.GetOrderCountRequest.Builder> internal__static_bnet_protocol_exchange_GetOrderCountRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_GetOrderCountResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetOrderCountResponse, global::bnet.protocol.exchange.GetOrderCountResponse.Builder> internal__static_bnet_protocol_exchange_GetOrderCountResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_HistoriesForCSRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.HistoriesForCSRequest, global::bnet.protocol.exchange.HistoriesForCSRequest.Builder> internal__static_bnet_protocol_exchange_HistoriesForCSRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_HistoriesForCSResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.HistoriesForCSResponse, global::bnet.protocol.exchange.HistoriesForCSResponse.Builder> internal__static_bnet_protocol_exchange_HistoriesForCSResponse__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static ExchangeService() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "ChtibmV0L2V4Y2hhbmdlX3NlcnZpY2UucHJvdG8SFmJuZXQucHJvdG9jb2wu" + 
            "ZXhjaGFuZ2UaDmJuZXQvcnBjLnByb3RvGhNibmV0L2V4Y2hhbmdlLnByb3Rv" + 
            "GilibmV0L2V4Y2hhbmdlX29iamVjdF9wcm92aWRlcl90eXBlcy5wcm90bxoe" + 
            "Ym5ldC9leGNoYW5nZV9yaXNrX3R5cGVzLnByb3RvGhFibmV0L2VudGl0eS5w" + 
            "cm90bxoYYm5ldC9hY2NvdW50X3R5cGVzLnByb3RvGhlibmV0L2V4Y2hhbmdl" + 
            "X3R5cGVzLnByb3RvIooBChZDcmVhdGVPcmRlckJvb2tSZXF1ZXN0EjkKDHBh" + 
            "cnRpdGlvbl9pZBgBIAIoCzIjLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuUGFy" + 
            "dGl0aW9uSWQSNQoKb3JkZXJfYm9vaxgCIAIoCzIhLmJuZXQucHJvdG9jb2wu" + 
            "ZXhjaGFuZ2UuT3JkZXJCb29rIjAKF0NyZWF0ZU9yZGVyQm9va1Jlc3BvbnNl" + 
            "EhUKDW9yZGVyX2Jvb2tfaWQYASABKAQimAEKHFBsYWNlT2ZmZXJPbk9yZGVy" + 
            "Qm9va1JlcXVlc3QSOQoMcGFydGl0aW9uX2lkGAEgAigLMiMuYm5ldC5wcm90" + 
            "b2NvbC5leGNoYW5nZS5QYXJ0aXRpb25JZBI9Cg5vZmZlcl9jcmVhdGlvbhgC" + 
            "IAIoCzIlLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuT2ZmZXJDcmVhdGlvbiJI" + 
            "Ch1QbGFjZU9mZmVyT25PcmRlckJvb2tSZXNwb25zZRIVCg1vcmRlcl9ib29r" + 
            "X2lkGAEgASgEEhAKCG9mZmVyX2lkGAIgASgEItsBCihQbGFjZU9mZmVyQ3Jl" + 
            "YXRlT3JkZXJCb29rSWZOZWVkZWRSZXF1ZXN0EjkKDHBhcnRpdGlvbl9pZBgB" + 
            "IAIoCzIjLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuUGFydGl0aW9uSWQSNQoK" + 
            "b3JkZXJfYm9vaxgCIAIoCzIhLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuT3Jk" + 
            "ZXJCb29rEj0KDm9mZmVyX2NyZWF0aW9uGAMgAigLMiUuYm5ldC5wcm90b2Nv" + 
            "bC5leGNoYW5nZS5PZmZlckNyZWF0aW9uIlQKKVBsYWNlT2ZmZXJDcmVhdGVP" + 
            "cmRlckJvb2tJZk5lZWRlZFJlc3BvbnNlEhUKDW9yZGVyX2Jvb2tfaWQYASAB" + 
            "KAQSEAoIb2ZmZXJfaWQYAiABKAQikgEKGlBsYWNlQmlkT25PcmRlckJvb2tS" + 
            "ZXF1ZXN0EjkKDHBhcnRpdGlvbl9pZBgBIAIoCzIjLmJuZXQucHJvdG9jb2wu" + 
            "ZXhjaGFuZ2UuUGFydGl0aW9uSWQSOQoMYmlkX2NyZWF0aW9uGAIgAigLMiMu" + 
            "Ym5ldC5wcm90b2NvbC5leGNoYW5nZS5CaWRDcmVhdGlvbiJEChtQbGFjZUJp" + 
            "ZE9uT3JkZXJCb29rUmVzcG9uc2USFQoNb3JkZXJfYm9va19pZBgBIAEoBBIO" + 
            "CgZiaWRfaWQYAiABKAQi1QEKJlBsYWNlQmlkQ3JlYXRlT3JkZXJCb29rSWZO" + 
            "ZWVkZWRSZXF1ZXN0EjkKDHBhcnRpdGlvbl9pZBgBIAIoCzIjLmJuZXQucHJv" + 
            "dG9jb2wuZXhjaGFuZ2UuUGFydGl0aW9uSWQSNQoKb3JkZXJfYm9vaxgCIAIo" + 
            "CzIhLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuT3JkZXJCb29rEjkKDGJpZF9j" + 
            "cmVhdGlvbhgDIAIoCzIjLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuQmlkQ3Jl" + 
            "YXRpb24iUAonUGxhY2VCaWRDcmVhdGVPcmRlckJvb2tJZk5lZWRlZFJlc3Bv" + 
            "bnNlEhUKDW9yZGVyX2Jvb2tfaWQYASABKAQSDgoGYmlkX2lkGAIgASgEIqgB" + 
            "Ch1RdWVyeU9mZmVyc0J5T3JkZXJCb29rUmVxdWVzdBI5CgxwYXJ0aXRpb25f" + 
            "aWQYASACKAsyIy5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLlBhcnRpdGlvbklk" + 
            "EjwKBmZpbHRlchgCIAIoCzIsLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuUXVl" + 
            "cnlGaWx0ZXJCeU9yZGVySWQSDgoGc3RhdHVzGAMgAigFImwKHlF1ZXJ5T2Zm" + 
            "ZXJzQnlPcmRlckJvb2tSZXNwb25zZRI1CgZvZmZlcnMYASADKAsyJS5ibmV0" + 
            "LnByb3RvY29sLmV4Y2hhbmdlLk9mZmVyRXh0ZW5kZWQSEwoLdG90YWxfY291" + 
            "bnQYAiACKA0ipgEKG1F1ZXJ5Qmlkc0J5T3JkZXJCb29rUmVxdWVzdBI5Cgxw" + 
            "YXJ0aXRpb25faWQYASACKAsyIy5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLlBh" + 
            "cnRpdGlvbklkEjwKBmZpbHRlchgCIAIoCzIsLmJuZXQucHJvdG9jb2wuZXhj" + 
            "aGFuZ2UuUXVlcnlGaWx0ZXJCeU9yZGVySWQSDgoGc3RhdHVzGAMgAigFImYK" + 
            "HFF1ZXJ5Qmlkc0J5T3JkZXJCb29rUmVzcG9uc2USMQoEYmlkcxgBIAMoCzIj" + 
            "LmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuQmlkRXh0ZW5kZWQSEwoLdG90YWxf" + 
            "Y291bnQYAiACKA0i0QEKIlF1ZXJ5T2ZmZXJzQnlBY2NvdW50Rm9ySXRlbVJl" + 
            "cXVlc3QSOgoQYWNjb3VudF9mb3JfaXRlbRgBIAIoCzIgLmJuZXQucHJvdG9j" + 
            "b2wuZXhjaGFuZ2UuQmxvYkZyb20SQAoGZmlsdGVyGAIgAigLMjAuYm5ldC5w" + 
            "cm90b2NvbC5leGNoYW5nZS5RdWVyeUZpbHRlckJ5Q3JlYXRlZFRpbWUSLQoM" + 
            "Ym5ldF9hY2NvdW50GAMgASgLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJZCJx" + 
            "CiNRdWVyeU9mZmVyc0J5QWNjb3VudEZvckl0ZW1SZXNwb25zZRI1CgZvZmZl" + 
            "cnMYASADKAsyJS5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLk9mZmVyRXh0ZW5k" + 
            "ZWQSEwoLdG90YWxfY291bnQYAiACKA0izwEKIFF1ZXJ5Qmlkc0J5QWNjb3Vu" + 
            "dEZvckl0ZW1SZXF1ZXN0EjoKEGFjY291bnRfZm9yX2l0ZW0YASACKAsyIC5i" + 
            "bmV0LnByb3RvY29sLmV4Y2hhbmdlLkJsb2JGcm9tEkAKBmZpbHRlchgCIAIo" + 
            "CzIwLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuUXVlcnlGaWx0ZXJCeUNyZWF0" + 
            "ZWRUaW1lEi0KDGJuZXRfYWNjb3VudBgDIAEoCzIXLmJuZXQucHJvdG9jb2wu" + 
            "RW50aXR5SWQiawohUXVlcnlCaWRzQnlBY2NvdW50Rm9ySXRlbVJlc3BvbnNl" + 
            "EjEKBGJpZHMYASADKAsyIy5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkJpZEV4" + 
            "dGVuZGVkEhMKC3RvdGFsX2NvdW50GAIgAigNIlkKHVF1ZXJ5T3JkZXJCb29r" + 
            "c1N1bW1hcnlSZXF1ZXN0EjgKB2hhbmRsZXMYASADKAsyJy5ibmV0LnByb3Rv" + 
            "Y29sLmV4Y2hhbmdlLk9yZGVyQm9va0hhbmRsZSJfCh5RdWVyeU9yZGVyQm9v" + 
            "a3NTdW1tYXJ5UmVzcG9uc2USPQoLb3JkZXJfYm9va3MYASADKAsyKC5ibmV0" + 
            "LnByb3RvY29sLmV4Y2hhbmdlLk9yZGVyQm9va1N1bW1hcnkiuQIKJVN1YnNj" + 
            "cmliZU9yZGVyQm9va1N0YXR1c0NoYW5nZVJlcXVlc3QSEQoJb2JqZWN0X2lk" + 
            "GAEgAigEEj0KEG1pbl9wYXJ0aXRpb25faWQYAiACKAsyIy5ibmV0LnByb3Rv" + 
            "Y29sLmV4Y2hhbmdlLlBhcnRpdGlvbklkEj0KEG1heF9wYXJ0aXRpb25faWQY" + 
            "AyACKAsyIy5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLlBhcnRpdGlvbklkEg8K" + 
            "B3Byb2dyYW0YBCACKAcSDgoGc3RhdHVzGAUgAigFEhAKCGN1cnJlbmN5GAYg" + 
            "AigJEhIKCnNwZWNpYWxpc3QYByACKAUSEQoJYm9vdHN0cmFwGAggASgIEiUK" + 
            "HWJvb3RzdHJhcF9vbGRlc3RfY3JlYXRlZF90aW1lGAkgASgEIikKJ1Vuc3Vi" + 
            "c2NyaWJlT3JkZXJCb29rU3RhdHVzQ2hhbmdlUmVxdWVzdCJbChtTdWJzY3Jp" + 
            "YmVPcmRlclVwZGF0ZVJlcXVlc3QSKQoIYWdlbnRfaWQYASACKAsyFy5ibmV0" + 
            "LnByb3RvY29sLkVudGl0eUlkEhEKCW9iamVjdF9pZBgCIAIoBCJdCh1VbnN1" + 
            "YnNjcmliZU9yZGVyVXBkYXRlUmVxdWVzdBIpCghhZ2VudF9pZBgBIAIoCzIX" + 
            "LmJuZXQucHJvdG9jb2wuRW50aXR5SWQSEQoJb2JqZWN0X2lkGAIgAigEIvUB" + 
            "CiNTdWJzY3JpYmVBZHZhbmNlZE9yZGVyVXBkYXRlUmVxdWVzdBIRCglvYmpl" + 
            "Y3RfaWQYASACKAQSPQoQbWluX3BhcnRpdGlvbl9pZBgCIAIoCzIjLmJuZXQu" + 
            "cHJvdG9jb2wuZXhjaGFuZ2UuUGFydGl0aW9uSWQSPQoQbWF4X3BhcnRpdGlv" + 
            "bl9pZBgDIAIoCzIjLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuUGFydGl0aW9u" + 
            "SWQSPQoHZmlsdGVycxgEIAMoCzIsLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2Uu" + 
            "QWR2YW5jZWRTdWJzY3JpcHRpb24iJwolVW5zdWJzY3JpYmVBZHZhbmNlZE9y" + 
            "ZGVyVXBkYXRlUmVxdWVzdCLSAQoMQ2xhaW1SZXF1ZXN0EjkKDHBhcnRpdGlv" + 
            "bl9pZBgBIAEoCzIjLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuUGFydGl0aW9u" + 
            "SWQSEAoIb3JkZXJfaWQYAiABKAQSDwoHcHJvZ3JhbRgDIAEoBxItCgxibmV0" + 
            "X2FjY291bnQYBCABKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkEjUKC2lu" + 
            "Zm9ybWF0aW9uGAUgASgLMiAuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5CbG9i" + 
            "RnJvbSKbAQoNQ2FuY2VsUmVxdWVzdBI5CgxwYXJ0aXRpb25faWQYASACKAsy" + 
            "Iy5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLlBhcnRpdGlvbklkEhAKCG9yZGVy" + 
            "X2lkGAIgAigEEg4KBnJlYXNvbhgDIAEoDRItCgxibmV0X2FjY291bnQYBCAB" + 
            "KAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkIoIBCg1SZWZ1bmRSZXF1ZXN0" + 
            "EjkKDHBhcnRpdGlvbl9pZBgBIAIoCzIjLmJuZXQucHJvdG9jb2wuZXhjaGFu" + 
            "Z2UuUGFydGl0aW9uSWQSEAoIb3JkZXJfaWQYAiACKAQSEAoIY3Nfbm90ZXMY" + 
            "AyACKAkSEgoKY3NfdXNlcl9pZBgEIAIoBCIqChdHZXRDb25maWd1cmF0aW9u" + 
            "UmVxdWVzdBIPCgdwcm9ncmFtGAEgAigHIskBChhHZXRDb25maWd1cmF0aW9u" + 
            "UmVzcG9uc2USOQoHY29uZmlncxgBIAMoCzIoLmJuZXQucHJvdG9jb2wuZXhj" + 
            "aGFuZ2UuU3BlY2lhbGlzdENvbmZpZxJIChlybXRfcmVzdHJpY3RlZF9ieV9s" + 
            "aWNlbnNlGAIgASgLMiUuYm5ldC5wcm90b2NvbC5hY2NvdW50LkFjY291bnRM" + 
            "aWNlbnNlEigKIHJlY29tbWVuZGVkX2RlZmF1bHRfcm10X2N1cnJlbmN5GAMg" + 
            "ASgJIpIBChxHZXRPZmZlckZlZUVzdGltYXRpb25SZXF1ZXN0EjkKDHBhcnRp" + 
            "dGlvbl9pZBgBIAIoCzIjLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuUGFydGl0" + 
            "aW9uSWQSNwoEZGF0YRgCIAIoCzIpLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2Uu" + 
            "RmVlRXN0aW1hdGlvbkRhdGEikAEKGkdldEJpZEZlZUVzdGltYXRpb25SZXF1" + 
            "ZXN0EjkKDHBhcnRpdGlvbl9pZBgBIAIoCzIjLmJuZXQucHJvdG9jb2wuZXhj" + 
            "aGFuZ2UuUGFydGl0aW9uSWQSNwoEZGF0YRgCIAIoCzIpLmJuZXQucHJvdG9j" + 
            "b2wuZXhjaGFuZ2UuRmVlRXN0aW1hdGlvbkRhdGEiZgoYR2V0RmVlRXN0aW1h" + 
            "dGlvblJlc3BvbnNlEhIKCmZlZV9hbW91bnQYASACKAQSNgoLZmVlX2RldGFp" + 
            "bHMYAiADKAsyIS5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkZlZURldGFpbCJ9" + 
            "ChxPcmRlckJvb2tOb3RpZmljYXRpb25SZXF1ZXN0EkQKDW5vdGlmaWNhdGlv" + 
            "bnMYASADKAsyLS5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLk9yZGVyQm9va05v" + 
            "dGlmaWNhdGlvbhIXCg9ib290X3N0cmFwX2xhc3QYAiABKAgipwEKGE9mZmVy" + 
            "Tm90aWZpY2F0aW9uUmVxdWVzdBI0CgVvZmZlchgBIAIoCzIlLmJuZXQucHJv" + 
            "dG9jb2wuZXhjaGFuZ2UuT2ZmZXJFeHRlbmRlZBINCgVldmVudBgCIAIoDRIT" + 
            "CgtvYmplY3RfdHlwZRgDIAEoDRIUCgxjbGFpbV9yZXN1bHQYBCABKA0SGwoT" + 
            "Y2xhaW1fcmVzdWx0X3JlYXNvbhgFIAEoDSKhAQoWQmlkTm90aWZpY2F0aW9u" + 
            "UmVxdWVzdBIwCgNiaWQYASACKAsyIy5ibmV0LnByb3RvY29sLmV4Y2hhbmdl" + 
            "LkJpZEV4dGVuZGVkEg0KBWV2ZW50GAIgAigNEhMKC29iamVjdF90eXBlGAMg" + 
            "ASgNEhQKDGNsYWltX3Jlc3VsdBgEIAEoDRIbChNjbGFpbV9yZXN1bHRfcmVh" + 
            "c29uGAUgASgNIpYBChlDdXN0b21Ob3RpZmljYXRpb25SZXF1ZXN0EjcKBmhh" + 
            "bmRsZRgBIAIoCzInLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuT3JkZXJCb29r" + 
            "SGFuZGxlEhAKCG9yZGVyX2lkGAIgAigEEi4KBGluZm8YAyACKAsyIC5ibmV0" + 
            "LnByb3RvY29sLmV4Y2hhbmdlLkJsb2JGcm9tIskBCiJRdWVyeU9yZGVyc0J5" + 
            "QWNjb3VudEZvckl0ZW1SZXF1ZXN0EjoKEGFjY291bnRfZm9yX2l0ZW0YASAC" + 
            "KAsyIC5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkJsb2JGcm9tEi0KDGJuZXRf" + 
            "YWNjb3VudBgCIAEoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQSOAoGZmls" + 
            "dGVyGAMgAigLMiguYm5ldC5wcm90b2NvbC5leGNoYW5nZS5RdWVyeU9yZGVy" + 
            "RmlsdGVyInEKI1F1ZXJ5T3JkZXJzQnlBY2NvdW50Rm9ySXRlbVJlc3BvbnNl" + 
            "EjUKBm9yZGVycxgBIAMoCzIlLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuT3Jk" + 
            "ZXJFeHRlbmRlZBITCgt0b3RhbF9jb3VudBgCIAIoDSKSAQoUR2V0RmVlRGV0" + 
            "YWlsc1JlcXVlc3QSOQoMcGFydGl0aW9uX2lkGAEgAigLMiMuYm5ldC5wcm90" + 
            "b2NvbC5leGNoYW5nZS5QYXJ0aXRpb25JZBIQCghvcmRlcl9pZBgCIAIoBBIt" + 
            "CgxibmV0X2FjY291bnQYAyABKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlk" + 
            "Io4BChVHZXRGZWVEZXRhaWxzUmVzcG9uc2USOQoOZmVlX2RldGFpbHNfaW4Y" + 
            "ASADKAsyIS5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkZlZURldGFpbBI6Cg9m" + 
            "ZWVfZGV0YWlsc19vdXQYAiADKAsyIS5ibmV0LnByb3RvY29sLmV4Y2hhbmdl" + 
            "LkZlZURldGFpbCKoAQodR2V0T3JkZXJCb29rU3RhdGlzdGljc1JlcXVlc3QS" + 
            "OQoMcGFydGl0aW9uX2lkGAEgAigLMiMuYm5ldC5wcm90b2NvbC5leGNoYW5n" + 
            "ZS5QYXJ0aXRpb25JZBISCgpvcmRlcl90eXBlGAIgAigNEhAKCHF1YW50aXR5" + 
            "GAMgAigEEhMKC2xhc3RfdHJhZGVzGAQgAigNEhEKCWxhc3RfZGF5cxgFIAIo" + 
            "DSKUAQoeR2V0T3JkZXJCb29rU3RhdGlzdGljc1Jlc3BvbnNlEjoKDXByaWNl" + 
            "X2RldGFpbHMYASADKAsyIy5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLlByaWNl" + 
            "RGV0YWlsEhsKE2xhc3RfdHJhZGVzX2F2ZXJhZ2UYAiACKAQSGQoRbGFzdF9k" + 
            "YXlzX2F2ZXJhZ2UYAyACKAQiYwoUR2V0QmlkRGV0YWlsc1JlcXVlc3QSEAoI" + 
            "b3JkZXJfaWQYASACKAQSOQoMcGFydGl0aW9uX2lkGAIgAigLMiMuYm5ldC5w" + 
            "cm90b2NvbC5leGNoYW5nZS5QYXJ0aXRpb25JZCJLChVHZXRCaWREZXRhaWxz" + 
            "UmVzcG9uc2USMgoDYmlkGAEgAigLMiUuYm5ldC5wcm90b2NvbC5leGNoYW5n" + 
            "ZS5PcmRlckV4dGVuZGVkImUKFkdldE9mZmVyRGV0YWlsc1JlcXVlc3QSEAoI" + 
            "b3JkZXJfaWQYASACKAQSOQoMcGFydGl0aW9uX2lkGAIgAigLMiMuYm5ldC5w" + 
            "cm90b2NvbC5leGNoYW5nZS5QYXJ0aXRpb25JZCJPChdHZXRPZmZlckRldGFp" + 
            "bHNSZXNwb25zZRI0CgVvZmZlchgBIAIoCzIlLmJuZXQucHJvdG9jb2wuZXhj" + 
            "aGFuZ2UuT3JkZXJFeHRlbmRlZCIlChVHZXRTeXN0ZW1UaW1lUmVzcG9uc2US" + 
            "DAoEdGltZRgBIAIoBCLYAgoUQ3JlYXRlQ1NUcmFkZVJlcXVlc3QSOQoMcGFy" + 
            "dGl0aW9uX2lkGAEgASgLMiMuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5QYXJ0" + 
            "aXRpb25JZBI1CgpvcmRlcl9ib29rGAIgAigLMiEuYm5ldC5wcm90b2NvbC5l" + 
            "eGNoYW5nZS5PcmRlckJvb2sSDgoGYW1vdW50GAMgAigNEi0KDGJuZXRfYWNj" + 
            "b3VudBgEIAIoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQSLQoMZ2FtZV9h" + 
            "Y2NvdW50GAUgASgLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJZBI6ChBhY2Nv" + 
            "dW50X2Zvcl9pdGVtGAYgAigLMiAuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5C" + 
            "bG9iRnJvbRIQCghjc19ub3RlcxgHIAIoCRISCgpjc191c2VyX2lkGAggAigE" + 
            "IrkBChRHZXRPcmRlckNvdW50UmVxdWVzdBIQCghjdXJyZW5jeRgBIAEoCRIO" + 
            "CgZzb3VyY2UYAiABKAcSLQoMYm5ldF9hY2NvdW50GAMgASgLMhcuYm5ldC5w" + 
            "cm90b2NvbC5FbnRpdHlJZBIlChZub3RfY2xvc2VkX29mZmVyX2NvdW50GAQg" + 
            "ASgIOgVmYWxzZRIpChpvcmRlcl93aXRoX2NsYWltYWJsZV9jb3VudBgFIAEo" + 
            "CDoFZmFsc2UimQEKFUdldE9yZGVyQ291bnRSZXNwb25zZRI9ChZub3RfY2xv" + 
            "c2VkX29mZmVyX2NvdW50GAEgASgLMh0uYm5ldC5wcm90b2NvbC5leGNoYW5n" + 
            "ZS5Db3VudBJBChpvcmRlcl93aXRoX2NsYWltYWJsZV9jb3VudBgCIAEoCzId" + 
            "LmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuQ291bnQigAEKFUhpc3Rvcmllc0Zv" + 
            "ckNTUmVxdWVzdBItCgxibmV0X2FjY291bnQYASACKAsyFy5ibmV0LnByb3Rv" + 
            "Y29sLkVudGl0eUlkEg8KB3Byb2dyYW0YAiACKAcSEgoKbG93ZXJfdGltZRgD" + 
            "IAIoBBITCgtoaWdoZXJfdGltZRgEIAIoBCJTChZIaXN0b3JpZXNGb3JDU1Jl" + 
            "c3BvbnNlEjkKDGhpc3RvcnlfZGF0YRgBIAMoCzIjLmJuZXQucHJvdG9jb2wu" + 
            "ZXhjaGFuZ2UuSGlzdG9yeURhdGEy6CkKD0V4Y2hhbmdlU2VydmljZRJ4Cg9D" + 
            "cmVhdGVPcmRlckJvb2sSLi5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkNyZWF0" + 
            "ZU9yZGVyQm9va1JlcXVlc3QaLy5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkNy" + 
            "ZWF0ZU9yZGVyQm9va1Jlc3BvbnNlIgSAtRgBEooBChVQbGFjZU9mZmVyT25P" + 
            "cmRlckJvb2sSNC5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLlBsYWNlT2ZmZXJP" + 
            "bk9yZGVyQm9va1JlcXVlc3QaNS5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLlBs" + 
            "YWNlT2ZmZXJPbk9yZGVyQm9va1Jlc3BvbnNlIgSAtRgCEq4BCiFQbGFjZU9m" + 
            "ZmVyQ3JlYXRlT3JkZXJCb29rSWZOZWVkZWQSQC5ibmV0LnByb3RvY29sLmV4" + 
            "Y2hhbmdlLlBsYWNlT2ZmZXJDcmVhdGVPcmRlckJvb2tJZk5lZWRlZFJlcXVl" + 
            "c3QaQS5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLlBsYWNlT2ZmZXJDcmVhdGVP" + 
            "cmRlckJvb2tJZk5lZWRlZFJlc3BvbnNlIgSAtRgDEoQBChNQbGFjZUJpZE9u" + 
            "T3JkZXJCb29rEjIuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5QbGFjZUJpZE9u" + 
            "T3JkZXJCb29rUmVxdWVzdBozLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuUGxh" + 
            "Y2VCaWRPbk9yZGVyQm9va1Jlc3BvbnNlIgSAtRgEEqgBCh9QbGFjZUJpZENy" + 
            "ZWF0ZU9yZGVyQm9va0lmTmVlZGVkEj4uYm5ldC5wcm90b2NvbC5leGNoYW5n" + 
            "ZS5QbGFjZUJpZENyZWF0ZU9yZGVyQm9va0lmTmVlZGVkUmVxdWVzdBo/LmJu" + 
            "ZXQucHJvdG9jb2wuZXhjaGFuZ2UuUGxhY2VCaWRDcmVhdGVPcmRlckJvb2tJ" + 
            "Zk5lZWRlZFJlc3BvbnNlIgSAtRgFEo0BChZRdWVyeU9mZmVyc0J5T3JkZXJC" + 
            "b29rEjUuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5RdWVyeU9mZmVyc0J5T3Jk" + 
            "ZXJCb29rUmVxdWVzdBo2LmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuUXVlcnlP" + 
            "ZmZlcnNCeU9yZGVyQm9va1Jlc3BvbnNlIgSAtRgGEocBChRRdWVyeUJpZHNC" + 
            "eU9yZGVyQm9vaxIzLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuUXVlcnlCaWRz" + 
            "QnlPcmRlckJvb2tSZXF1ZXN0GjQuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5R" + 
            "dWVyeUJpZHNCeU9yZGVyQm9va1Jlc3BvbnNlIgSAtRgHEpwBChtRdWVyeU9m" + 
            "ZmVyc0J5QWNjb3VudEZvckl0ZW0SOi5ibmV0LnByb3RvY29sLmV4Y2hhbmdl" + 
            "LlF1ZXJ5T2ZmZXJzQnlBY2NvdW50Rm9ySXRlbVJlcXVlc3QaOy5ibmV0LnBy" + 
            "b3RvY29sLmV4Y2hhbmdlLlF1ZXJ5T2ZmZXJzQnlBY2NvdW50Rm9ySXRlbVJl" + 
            "c3BvbnNlIgSAtRgIEpYBChlRdWVyeUJpZHNCeUFjY291bnRGb3JJdGVtEjgu" + 
            "Ym5ldC5wcm90b2NvbC5leGNoYW5nZS5RdWVyeUJpZHNCeUFjY291bnRGb3JJ" + 
            "dGVtUmVxdWVzdBo5LmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuUXVlcnlCaWRz" + 
            "QnlBY2NvdW50Rm9ySXRlbVJlc3BvbnNlIgSAtRgJEo0BChZRdWVyeU9yZGVy" + 
            "Qm9va3NTdW1tYXJ5EjUuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5RdWVyeU9y" + 
            "ZGVyQm9va3NTdW1tYXJ5UmVxdWVzdBo2LmJuZXQucHJvdG9jb2wuZXhjaGFu" + 
            "Z2UuUXVlcnlPcmRlckJvb2tzU3VtbWFyeVJlc3BvbnNlIgSAtRgLEm4KD1Jl" + 
            "cG9ydEF1dGhvcml6ZRI+LmJuZXQucHJvdG9jb2wuZXhjaGFuZ2Vfb2JqZWN0" + 
            "X3Byb3ZpZGVyLlJlcG9ydEF1dGhvcml6ZVJlcXVlc3QaFS5ibmV0LnByb3Rv" + 
            "Y29sLk5vRGF0YSIEgLUYDRJoCgxSZXBvcnRTZXR0bGUSOy5ibmV0LnByb3Rv" + 
            "Y29sLmV4Y2hhbmdlX29iamVjdF9wcm92aWRlci5SZXBvcnRTZXR0bGVSZXF1" + 
            "ZXN0GhUuYm5ldC5wcm90b2NvbC5Ob0RhdGEiBIC1GA4SaAoMUmVwb3J0Q2Fu" + 
            "Y2VsEjsuYm5ldC5wcm90b2NvbC5leGNoYW5nZV9vYmplY3RfcHJvdmlkZXIu" + 
            "UmVwb3J0Q2FuY2VsUmVxdWVzdBoVLmJuZXQucHJvdG9jb2wuTm9EYXRhIgSA" + 
            "tRgPEnwKHlN1YnNjcmliZU9yZGVyQm9va1N0YXR1c0NoYW5nZRI9LmJuZXQu" + 
            "cHJvdG9jb2wuZXhjaGFuZ2UuU3Vic2NyaWJlT3JkZXJCb29rU3RhdHVzQ2hh" + 
            "bmdlUmVxdWVzdBoVLmJuZXQucHJvdG9jb2wuTm9EYXRhIgSAtRgQEoABCiBV" + 
            "bnN1YnNjcmliZU9yZGVyQm9va1N0YXR1c0NoYW5nZRI/LmJuZXQucHJvdG9j" + 
            "b2wuZXhjaGFuZ2UuVW5zdWJzY3JpYmVPcmRlckJvb2tTdGF0dXNDaGFuZ2VS" + 
            "ZXF1ZXN0GhUuYm5ldC5wcm90b2NvbC5Ob0RhdGEiBIC1GBESaAoUU3Vic2Ny" + 
            "aWJlT3JkZXJVcGRhdGUSMy5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLlN1YnNj" + 
            "cmliZU9yZGVyVXBkYXRlUmVxdWVzdBoVLmJuZXQucHJvdG9jb2wuTm9EYXRh" + 
            "IgSAtRgSEmwKFlVuc3Vic2NyaWJlT3JkZXJVcGRhdGUSNS5ibmV0LnByb3Rv" + 
            "Y29sLmV4Y2hhbmdlLlVuc3Vic2NyaWJlT3JkZXJVcGRhdGVSZXF1ZXN0GhUu" + 
            "Ym5ldC5wcm90b2NvbC5Ob0RhdGEiBIC1GBMSngEKEUdldFBheW1lbnRNZXRo" + 
            "b2RzEkAuYm5ldC5wcm90b2NvbC5leGNoYW5nZV9vYmplY3RfcHJvdmlkZXIu" + 
            "R2V0UGF5bWVudE1ldGhvZHNSZXF1ZXN0GkEuYm5ldC5wcm90b2NvbC5leGNo" + 
            "YW5nZV9vYmplY3RfcHJvdmlkZXIuR2V0UGF5bWVudE1ldGhvZHNSZXNwb25z" + 
            "ZSIEgLUYFBJRCgxDbGFpbUJpZEl0ZW0SJC5ibmV0LnByb3RvY29sLmV4Y2hh" + 
            "bmdlLkNsYWltUmVxdWVzdBoVLmJuZXQucHJvdG9jb2wuTm9EYXRhIgSAtRgV" + 
            "ElIKDUNsYWltQmlkTW9uZXkSJC5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkNs" + 
            "YWltUmVxdWVzdBoVLmJuZXQucHJvdG9jb2wuTm9EYXRhIgSAtRgWElMKDkNs" + 
            "YWltT2ZmZXJJdGVtEiQuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5DbGFpbVJl" + 
            "cXVlc3QaFS5ibmV0LnByb3RvY29sLk5vRGF0YSIEgLUYFxJUCg9DbGFpbU9m" + 
            "ZmVyTW9uZXkSJC5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkNsYWltUmVxdWVz" + 
            "dBoVLmJuZXQucHJvdG9jb2wuTm9EYXRhIgSAtRgYEk8KCUNhbmNlbEJpZBIl" + 
            "LmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuQ2FuY2VsUmVxdWVzdBoVLmJuZXQu" + 
            "cHJvdG9jb2wuTm9EYXRhIgSAtRgZElEKC0NhbmNlbE9mZmVyEiUuYm5ldC5w" + 
            "cm90b2NvbC5leGNoYW5nZS5DYW5jZWxSZXF1ZXN0GhUuYm5ldC5wcm90b2Nv" + 
            "bC5Ob0RhdGEiBIC1GBoSewoQR2V0Q29uZmlndXJhdGlvbhIvLmJuZXQucHJv" + 
            "dG9jb2wuZXhjaGFuZ2UuR2V0Q29uZmlndXJhdGlvblJlcXVlc3QaMC5ibmV0" + 
            "LnByb3RvY29sLmV4Y2hhbmdlLkdldENvbmZpZ3VyYXRpb25SZXNwb25zZSIE" + 
            "gLUYGxKBAQoTR2V0QmlkRmVlRXN0aW1hdGlvbhIyLmJuZXQucHJvdG9jb2wu" + 
            "ZXhjaGFuZ2UuR2V0QmlkRmVlRXN0aW1hdGlvblJlcXVlc3QaMC5ibmV0LnBy" + 
            "b3RvY29sLmV4Y2hhbmdlLkdldEZlZUVzdGltYXRpb25SZXNwb25zZSIEgLUY" + 
            "HBKFAQoVR2V0T2ZmZXJGZWVFc3RpbWF0aW9uEjQuYm5ldC5wcm90b2NvbC5l" + 
            "eGNoYW5nZS5HZXRPZmZlckZlZUVzdGltYXRpb25SZXF1ZXN0GjAuYm5ldC5w" + 
            "cm90b2NvbC5leGNoYW5nZS5HZXRGZWVFc3RpbWF0aW9uUmVzcG9uc2UiBIC1" + 
            "GB0SnAEKG1F1ZXJ5T3JkZXJzQnlBY2NvdW50Rm9ySXRlbRI6LmJuZXQucHJv" + 
            "dG9jb2wuZXhjaGFuZ2UuUXVlcnlPcmRlcnNCeUFjY291bnRGb3JJdGVtUmVx" + 
            "dWVzdBo7LmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuUXVlcnlPcmRlcnNCeUFj" + 
            "Y291bnRGb3JJdGVtUmVzcG9uc2UiBIC1GB4SeQoaUmVwb3J0QXV0aG9yaXpl" + 
            "Umlza1ZlcmRpY3QSPi5ibmV0LnByb3RvY29sLmV4Y2hhbmdlX3Jpc2suUmVw" + 
            "b3J0QXV0aG9yaXplUmlza1ZlcmRpY3RSZXF1ZXN0GhUuYm5ldC5wcm90b2Nv" + 
            "bC5Ob0RhdGEiBIC1GB8ScwoXUmVwb3J0U2V0dGxlUmlza1ZlcmRpY3QSOy5i" + 
            "bmV0LnByb3RvY29sLmV4Y2hhbmdlX3Jpc2suUmVwb3J0U2V0dGxlUmlza1Zl" + 
            "cmRpY3RSZXF1ZXN0GhUuYm5ldC5wcm90b2NvbC5Ob0RhdGEiBIC1GCAScQoW" + 
            "RGVsYXlTZXR0bGVSaXNrVmVyZGljdBI6LmJuZXQucHJvdG9jb2wuZXhjaGFu" + 
            "Z2Vfcmlzay5EZWxheVNldHRsZVJpc2tWZXJkaWN0UmVxdWVzdBoVLmJuZXQu" + 
            "cHJvdG9jb2wuTm9EYXRhIgSAtRghEnIKDUdldEZlZURldGFpbHMSLC5ibmV0" + 
            "LnByb3RvY29sLmV4Y2hhbmdlLkdldEZlZURldGFpbHNSZXF1ZXN0Gi0uYm5l" + 
            "dC5wcm90b2NvbC5leGNoYW5nZS5HZXRGZWVEZXRhaWxzUmVzcG9uc2UiBIC1" + 
            "GCISjQEKFkdldE9yZGVyQm9va1N0YXRpc3RpY3MSNS5ibmV0LnByb3RvY29s" + 
            "LmV4Y2hhbmdlLkdldE9yZGVyQm9va1N0YXRpc3RpY3NSZXF1ZXN0GjYuYm5l" + 
            "dC5wcm90b2NvbC5leGNoYW5nZS5HZXRPcmRlckJvb2tTdGF0aXN0aWNzUmVz" + 
            "cG9uc2UiBIC1GCMScgoNR2V0QmlkRGV0YWlscxIsLmJuZXQucHJvdG9jb2wu" + 
            "ZXhjaGFuZ2UuR2V0QmlkRGV0YWlsc1JlcXVlc3QaLS5ibmV0LnByb3RvY29s" + 
            "LmV4Y2hhbmdlLkdldEJpZERldGFpbHNSZXNwb25zZSIEgLUYJBJ4Cg9HZXRP" + 
            "ZmZlckRldGFpbHMSLi5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkdldE9mZmVy" + 
            "RGV0YWlsc1JlcXVlc3QaLy5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkdldE9m" + 
            "ZmVyRGV0YWlsc1Jlc3BvbnNlIgSAtRglElsKDUdldFN5c3RlbVRpbWUSFS5i" + 
            "bmV0LnByb3RvY29sLk5vRGF0YRotLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2Uu" + 
            "R2V0U3lzdGVtVGltZVJlc3BvbnNlIgSAtRgmEloKDUNyZWF0ZUNTVHJhZGUS" + 
            "LC5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkNyZWF0ZUNTVHJhZGVSZXF1ZXN0" + 
            "GhUuYm5ldC5wcm90b2NvbC5Ob0RhdGEiBIC1GCcSTwoJUmVmdW5kQmlkEiUu" + 
            "Ym5ldC5wcm90b2NvbC5leGNoYW5nZS5SZWZ1bmRSZXF1ZXN0GhUuYm5ldC5w" + 
            "cm90b2NvbC5Ob0RhdGEiBIC1GCgSaAoMUmVwb3J0UmVmdW5kEjsuYm5ldC5w" + 
            "cm90b2NvbC5leGNoYW5nZV9vYmplY3RfcHJvdmlkZXIuUmVwb3J0UmVmdW5k" + 
            "UmVxdWVzdBoVLmJuZXQucHJvdG9jb2wuTm9EYXRhIgSAtRgpEnIKDUdldE9y" + 
            "ZGVyQ291bnQSLC5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkdldE9yZGVyQ291" + 
            "bnRSZXF1ZXN0Gi0uYm5ldC5wcm90b2NvbC5leGNoYW5nZS5HZXRPcmRlckNv" + 
            "dW50UmVzcG9uc2UiBIC1GCoSeAocU3Vic2NyaWJlQWR2YW5jZWRPcmRlclVw" + 
            "ZGF0ZRI7LmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuU3Vic2NyaWJlQWR2YW5j" + 
            "ZWRPcmRlclVwZGF0ZVJlcXVlc3QaFS5ibmV0LnByb3RvY29sLk5vRGF0YSIE" + 
            "gLUYKxJ8Ch5VbnN1YnNjcmliZUFkdmFuY2VkT3JkZXJVcGRhdGUSPS5ibmV0" + 
            "LnByb3RvY29sLmV4Y2hhbmdlLlVuc3Vic2NyaWJlQWR2YW5jZWRPcmRlclVw" + 
            "ZGF0ZVJlcXVlc3QaFS5ibmV0LnByb3RvY29sLk5vRGF0YSIEgLUYLBJ7ChRT" + 
            "ZXR0bGVIaXN0b3JpZXNGb3JDUxItLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2Uu" + 
            "SGlzdG9yaWVzRm9yQ1NSZXF1ZXN0Gi4uYm5ldC5wcm90b2NvbC5leGNoYW5n" + 
            "ZS5IaXN0b3JpZXNGb3JDU1Jlc3BvbnNlIgSAtRgtEnsKFENhbmNlbEhpc3Rv" + 
            "cmllc0ZvckNTEi0uYm5ldC5wcm90b2NvbC5leGNoYW5nZS5IaXN0b3JpZXNG" + 
            "b3JDU1JlcXVlc3QaLi5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkhpc3Rvcmll" + 
            "c0ZvckNTUmVzcG9uc2UiBIC1GC4ywQMKDkV4Y2hhbmdlTm90aWZ5EnUKG05v" + 
            "dGlmeU9yZGVyQm9va1N0YXR1c0NoYW5nZRI0LmJuZXQucHJvdG9jb2wuZXhj" + 
            "aGFuZ2UuT3JkZXJCb29rTm90aWZpY2F0aW9uUmVxdWVzdBoaLmJuZXQucHJv" + 
            "dG9jb2wuTk9fUkVTUE9OU0UiBIC1GAESZwoRTm90aWZ5T2ZmZXJVcGRhdGUS" + 
            "MC5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLk9mZmVyTm90aWZpY2F0aW9uUmVx" + 
            "dWVzdBoaLmJuZXQucHJvdG9jb2wuTk9fUkVTUE9OU0UiBIC1GAISYwoPTm90" + 
            "aWZ5QmlkVXBkYXRlEi4uYm5ldC5wcm90b2NvbC5leGNoYW5nZS5CaWROb3Rp" + 
            "ZmljYXRpb25SZXF1ZXN0GhouYm5ldC5wcm90b2NvbC5OT19SRVNQT05TRSIE" + 
            "gLUYAxJqChNOb3RpZnlDdXN0b21NZXNzYWdlEjEuYm5ldC5wcm90b2NvbC5l" + 
            "eGNoYW5nZS5DdXN0b21Ob3RpZmljYXRpb25SZXF1ZXN0GhouYm5ldC5wcm90" + 
            "b2NvbC5OT19SRVNQT05TRSIEgLUYBEIDgAEA");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bnet_protocol_exchange_CreateOrderBookRequest__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bnet_protocol_exchange_CreateOrderBookRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CreateOrderBookRequest, global::bnet.protocol.exchange.CreateOrderBookRequest.Builder>(internal__static_bnet_protocol_exchange_CreateOrderBookRequest__Descriptor,
                  new string[] { "PartitionId", "OrderBook", });
          internal__static_bnet_protocol_exchange_CreateOrderBookResponse__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bnet_protocol_exchange_CreateOrderBookResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CreateOrderBookResponse, global::bnet.protocol.exchange.CreateOrderBookResponse.Builder>(internal__static_bnet_protocol_exchange_CreateOrderBookResponse__Descriptor,
                  new string[] { "OrderBookId", });
          internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookRequest__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest, global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest.Builder>(internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookRequest__Descriptor,
                  new string[] { "PartitionId", "OfferCreation", });
          internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookResponse__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse, global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse.Builder>(internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookResponse__Descriptor,
                  new string[] { "OrderBookId", "OfferId", });
          internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededRequest__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest, global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest.Builder>(internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededRequest__Descriptor,
                  new string[] { "PartitionId", "OrderBook", "OfferCreation", });
          internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededResponse__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse, global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse.Builder>(internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededResponse__Descriptor,
                  new string[] { "OrderBookId", "OfferId", });
          internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookRequest__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest, global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest.Builder>(internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookRequest__Descriptor,
                  new string[] { "PartitionId", "BidCreation", });
          internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookResponse__Descriptor = Descriptor.MessageTypes[7];
          internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse, global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse.Builder>(internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookResponse__Descriptor,
                  new string[] { "OrderBookId", "BidId", });
          internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededRequest__Descriptor = Descriptor.MessageTypes[8];
          internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest, global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest.Builder>(internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededRequest__Descriptor,
                  new string[] { "PartitionId", "OrderBook", "BidCreation", });
          internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededResponse__Descriptor = Descriptor.MessageTypes[9];
          internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse, global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse.Builder>(internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededResponse__Descriptor,
                  new string[] { "OrderBookId", "BidId", });
          internal__static_bnet_protocol_exchange_QueryOffersByOrderBookRequest__Descriptor = Descriptor.MessageTypes[10];
          internal__static_bnet_protocol_exchange_QueryOffersByOrderBookRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOffersByOrderBookRequest, global::bnet.protocol.exchange.QueryOffersByOrderBookRequest.Builder>(internal__static_bnet_protocol_exchange_QueryOffersByOrderBookRequest__Descriptor,
                  new string[] { "PartitionId", "Filter", "Status", });
          internal__static_bnet_protocol_exchange_QueryOffersByOrderBookResponse__Descriptor = Descriptor.MessageTypes[11];
          internal__static_bnet_protocol_exchange_QueryOffersByOrderBookResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOffersByOrderBookResponse, global::bnet.protocol.exchange.QueryOffersByOrderBookResponse.Builder>(internal__static_bnet_protocol_exchange_QueryOffersByOrderBookResponse__Descriptor,
                  new string[] { "Offers", "TotalCount", });
          internal__static_bnet_protocol_exchange_QueryBidsByOrderBookRequest__Descriptor = Descriptor.MessageTypes[12];
          internal__static_bnet_protocol_exchange_QueryBidsByOrderBookRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryBidsByOrderBookRequest, global::bnet.protocol.exchange.QueryBidsByOrderBookRequest.Builder>(internal__static_bnet_protocol_exchange_QueryBidsByOrderBookRequest__Descriptor,
                  new string[] { "PartitionId", "Filter", "Status", });
          internal__static_bnet_protocol_exchange_QueryBidsByOrderBookResponse__Descriptor = Descriptor.MessageTypes[13];
          internal__static_bnet_protocol_exchange_QueryBidsByOrderBookResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryBidsByOrderBookResponse, global::bnet.protocol.exchange.QueryBidsByOrderBookResponse.Builder>(internal__static_bnet_protocol_exchange_QueryBidsByOrderBookResponse__Descriptor,
                  new string[] { "Bids", "TotalCount", });
          internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemRequest__Descriptor = Descriptor.MessageTypes[14];
          internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest, global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest.Builder>(internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemRequest__Descriptor,
                  new string[] { "AccountForItem", "Filter", "BnetAccount", });
          internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemResponse__Descriptor = Descriptor.MessageTypes[15];
          internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse, global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse.Builder>(internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemResponse__Descriptor,
                  new string[] { "Offers", "TotalCount", });
          internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemRequest__Descriptor = Descriptor.MessageTypes[16];
          internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest, global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest.Builder>(internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemRequest__Descriptor,
                  new string[] { "AccountForItem", "Filter", "BnetAccount", });
          internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemResponse__Descriptor = Descriptor.MessageTypes[17];
          internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse, global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse.Builder>(internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemResponse__Descriptor,
                  new string[] { "Bids", "TotalCount", });
          internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryRequest__Descriptor = Descriptor.MessageTypes[18];
          internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest, global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest.Builder>(internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryRequest__Descriptor,
                  new string[] { "Handles", });
          internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryResponse__Descriptor = Descriptor.MessageTypes[19];
          internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse, global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse.Builder>(internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryResponse__Descriptor,
                  new string[] { "OrderBooks", });
          internal__static_bnet_protocol_exchange_SubscribeOrderBookStatusChangeRequest__Descriptor = Descriptor.MessageTypes[20];
          internal__static_bnet_protocol_exchange_SubscribeOrderBookStatusChangeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest, global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest.Builder>(internal__static_bnet_protocol_exchange_SubscribeOrderBookStatusChangeRequest__Descriptor,
                  new string[] { "ObjectId", "MinPartitionId", "MaxPartitionId", "Program", "Status", "Currency", "Specialist", "Bootstrap", "BootstrapOldestCreatedTime", });
          internal__static_bnet_protocol_exchange_UnsubscribeOrderBookStatusChangeRequest__Descriptor = Descriptor.MessageTypes[21];
          internal__static_bnet_protocol_exchange_UnsubscribeOrderBookStatusChangeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest, global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest.Builder>(internal__static_bnet_protocol_exchange_UnsubscribeOrderBookStatusChangeRequest__Descriptor,
                  new string[] { });
          internal__static_bnet_protocol_exchange_SubscribeOrderUpdateRequest__Descriptor = Descriptor.MessageTypes[22];
          internal__static_bnet_protocol_exchange_SubscribeOrderUpdateRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.SubscribeOrderUpdateRequest, global::bnet.protocol.exchange.SubscribeOrderUpdateRequest.Builder>(internal__static_bnet_protocol_exchange_SubscribeOrderUpdateRequest__Descriptor,
                  new string[] { "AgentId", "ObjectId", });
          internal__static_bnet_protocol_exchange_UnsubscribeOrderUpdateRequest__Descriptor = Descriptor.MessageTypes[23];
          internal__static_bnet_protocol_exchange_UnsubscribeOrderUpdateRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.UnsubscribeOrderUpdateRequest, global::bnet.protocol.exchange.UnsubscribeOrderUpdateRequest.Builder>(internal__static_bnet_protocol_exchange_UnsubscribeOrderUpdateRequest__Descriptor,
                  new string[] { "AgentId", "ObjectId", });
          internal__static_bnet_protocol_exchange_SubscribeAdvancedOrderUpdateRequest__Descriptor = Descriptor.MessageTypes[24];
          internal__static_bnet_protocol_exchange_SubscribeAdvancedOrderUpdateRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.SubscribeAdvancedOrderUpdateRequest, global::bnet.protocol.exchange.SubscribeAdvancedOrderUpdateRequest.Builder>(internal__static_bnet_protocol_exchange_SubscribeAdvancedOrderUpdateRequest__Descriptor,
                  new string[] { "ObjectId", "MinPartitionId", "MaxPartitionId", "Filters", });
          internal__static_bnet_protocol_exchange_UnsubscribeAdvancedOrderUpdateRequest__Descriptor = Descriptor.MessageTypes[25];
          internal__static_bnet_protocol_exchange_UnsubscribeAdvancedOrderUpdateRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.UnsubscribeAdvancedOrderUpdateRequest, global::bnet.protocol.exchange.UnsubscribeAdvancedOrderUpdateRequest.Builder>(internal__static_bnet_protocol_exchange_UnsubscribeAdvancedOrderUpdateRequest__Descriptor,
                  new string[] { });
          internal__static_bnet_protocol_exchange_ClaimRequest__Descriptor = Descriptor.MessageTypes[26];
          internal__static_bnet_protocol_exchange_ClaimRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.ClaimRequest, global::bnet.protocol.exchange.ClaimRequest.Builder>(internal__static_bnet_protocol_exchange_ClaimRequest__Descriptor,
                  new string[] { "PartitionId", "OrderId", "Program", "BnetAccount", "Information", });
          internal__static_bnet_protocol_exchange_CancelRequest__Descriptor = Descriptor.MessageTypes[27];
          internal__static_bnet_protocol_exchange_CancelRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CancelRequest, global::bnet.protocol.exchange.CancelRequest.Builder>(internal__static_bnet_protocol_exchange_CancelRequest__Descriptor,
                  new string[] { "PartitionId", "OrderId", "Reason", "BnetAccount", });
          internal__static_bnet_protocol_exchange_RefundRequest__Descriptor = Descriptor.MessageTypes[28];
          internal__static_bnet_protocol_exchange_RefundRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.RefundRequest, global::bnet.protocol.exchange.RefundRequest.Builder>(internal__static_bnet_protocol_exchange_RefundRequest__Descriptor,
                  new string[] { "PartitionId", "OrderId", "CsNotes", "CsUserId", });
          internal__static_bnet_protocol_exchange_GetConfigurationRequest__Descriptor = Descriptor.MessageTypes[29];
          internal__static_bnet_protocol_exchange_GetConfigurationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetConfigurationRequest, global::bnet.protocol.exchange.GetConfigurationRequest.Builder>(internal__static_bnet_protocol_exchange_GetConfigurationRequest__Descriptor,
                  new string[] { "Program", });
          internal__static_bnet_protocol_exchange_GetConfigurationResponse__Descriptor = Descriptor.MessageTypes[30];
          internal__static_bnet_protocol_exchange_GetConfigurationResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetConfigurationResponse, global::bnet.protocol.exchange.GetConfigurationResponse.Builder>(internal__static_bnet_protocol_exchange_GetConfigurationResponse__Descriptor,
                  new string[] { "Configs", "RmtRestrictedByLicense", "RecommendedDefaultRmtCurrency", });
          internal__static_bnet_protocol_exchange_GetOfferFeeEstimationRequest__Descriptor = Descriptor.MessageTypes[31];
          internal__static_bnet_protocol_exchange_GetOfferFeeEstimationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetOfferFeeEstimationRequest, global::bnet.protocol.exchange.GetOfferFeeEstimationRequest.Builder>(internal__static_bnet_protocol_exchange_GetOfferFeeEstimationRequest__Descriptor,
                  new string[] { "PartitionId", "Data", });
          internal__static_bnet_protocol_exchange_GetBidFeeEstimationRequest__Descriptor = Descriptor.MessageTypes[32];
          internal__static_bnet_protocol_exchange_GetBidFeeEstimationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetBidFeeEstimationRequest, global::bnet.protocol.exchange.GetBidFeeEstimationRequest.Builder>(internal__static_bnet_protocol_exchange_GetBidFeeEstimationRequest__Descriptor,
                  new string[] { "PartitionId", "Data", });
          internal__static_bnet_protocol_exchange_GetFeeEstimationResponse__Descriptor = Descriptor.MessageTypes[33];
          internal__static_bnet_protocol_exchange_GetFeeEstimationResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetFeeEstimationResponse, global::bnet.protocol.exchange.GetFeeEstimationResponse.Builder>(internal__static_bnet_protocol_exchange_GetFeeEstimationResponse__Descriptor,
                  new string[] { "FeeAmount", "FeeDetails", });
          internal__static_bnet_protocol_exchange_OrderBookNotificationRequest__Descriptor = Descriptor.MessageTypes[34];
          internal__static_bnet_protocol_exchange_OrderBookNotificationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBookNotificationRequest, global::bnet.protocol.exchange.OrderBookNotificationRequest.Builder>(internal__static_bnet_protocol_exchange_OrderBookNotificationRequest__Descriptor,
                  new string[] { "Notifications", "BootStrapLast", });
          internal__static_bnet_protocol_exchange_OfferNotificationRequest__Descriptor = Descriptor.MessageTypes[35];
          internal__static_bnet_protocol_exchange_OfferNotificationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OfferNotificationRequest, global::bnet.protocol.exchange.OfferNotificationRequest.Builder>(internal__static_bnet_protocol_exchange_OfferNotificationRequest__Descriptor,
                  new string[] { "Offer", "Event", "ObjectType", "ClaimResult", "ClaimResultReason", });
          internal__static_bnet_protocol_exchange_BidNotificationRequest__Descriptor = Descriptor.MessageTypes[36];
          internal__static_bnet_protocol_exchange_BidNotificationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.BidNotificationRequest, global::bnet.protocol.exchange.BidNotificationRequest.Builder>(internal__static_bnet_protocol_exchange_BidNotificationRequest__Descriptor,
                  new string[] { "Bid", "Event", "ObjectType", "ClaimResult", "ClaimResultReason", });
          internal__static_bnet_protocol_exchange_CustomNotificationRequest__Descriptor = Descriptor.MessageTypes[37];
          internal__static_bnet_protocol_exchange_CustomNotificationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CustomNotificationRequest, global::bnet.protocol.exchange.CustomNotificationRequest.Builder>(internal__static_bnet_protocol_exchange_CustomNotificationRequest__Descriptor,
                  new string[] { "Handle", "OrderId", "Info", });
          internal__static_bnet_protocol_exchange_QueryOrdersByAccountForItemRequest__Descriptor = Descriptor.MessageTypes[38];
          internal__static_bnet_protocol_exchange_QueryOrdersByAccountForItemRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOrdersByAccountForItemRequest, global::bnet.protocol.exchange.QueryOrdersByAccountForItemRequest.Builder>(internal__static_bnet_protocol_exchange_QueryOrdersByAccountForItemRequest__Descriptor,
                  new string[] { "AccountForItem", "BnetAccount", "Filter", });
          internal__static_bnet_protocol_exchange_QueryOrdersByAccountForItemResponse__Descriptor = Descriptor.MessageTypes[39];
          internal__static_bnet_protocol_exchange_QueryOrdersByAccountForItemResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOrdersByAccountForItemResponse, global::bnet.protocol.exchange.QueryOrdersByAccountForItemResponse.Builder>(internal__static_bnet_protocol_exchange_QueryOrdersByAccountForItemResponse__Descriptor,
                  new string[] { "Orders", "TotalCount", });
          internal__static_bnet_protocol_exchange_GetFeeDetailsRequest__Descriptor = Descriptor.MessageTypes[40];
          internal__static_bnet_protocol_exchange_GetFeeDetailsRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetFeeDetailsRequest, global::bnet.protocol.exchange.GetFeeDetailsRequest.Builder>(internal__static_bnet_protocol_exchange_GetFeeDetailsRequest__Descriptor,
                  new string[] { "PartitionId", "OrderId", "BnetAccount", });
          internal__static_bnet_protocol_exchange_GetFeeDetailsResponse__Descriptor = Descriptor.MessageTypes[41];
          internal__static_bnet_protocol_exchange_GetFeeDetailsResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetFeeDetailsResponse, global::bnet.protocol.exchange.GetFeeDetailsResponse.Builder>(internal__static_bnet_protocol_exchange_GetFeeDetailsResponse__Descriptor,
                  new string[] { "FeeDetailsIn", "FeeDetailsOut", });
          internal__static_bnet_protocol_exchange_GetOrderBookStatisticsRequest__Descriptor = Descriptor.MessageTypes[42];
          internal__static_bnet_protocol_exchange_GetOrderBookStatisticsRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetOrderBookStatisticsRequest, global::bnet.protocol.exchange.GetOrderBookStatisticsRequest.Builder>(internal__static_bnet_protocol_exchange_GetOrderBookStatisticsRequest__Descriptor,
                  new string[] { "PartitionId", "OrderType", "Quantity", "LastTrades", "LastDays", });
          internal__static_bnet_protocol_exchange_GetOrderBookStatisticsResponse__Descriptor = Descriptor.MessageTypes[43];
          internal__static_bnet_protocol_exchange_GetOrderBookStatisticsResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetOrderBookStatisticsResponse, global::bnet.protocol.exchange.GetOrderBookStatisticsResponse.Builder>(internal__static_bnet_protocol_exchange_GetOrderBookStatisticsResponse__Descriptor,
                  new string[] { "PriceDetails", "LastTradesAverage", "LastDaysAverage", });
          internal__static_bnet_protocol_exchange_GetBidDetailsRequest__Descriptor = Descriptor.MessageTypes[44];
          internal__static_bnet_protocol_exchange_GetBidDetailsRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetBidDetailsRequest, global::bnet.protocol.exchange.GetBidDetailsRequest.Builder>(internal__static_bnet_protocol_exchange_GetBidDetailsRequest__Descriptor,
                  new string[] { "OrderId", "PartitionId", });
          internal__static_bnet_protocol_exchange_GetBidDetailsResponse__Descriptor = Descriptor.MessageTypes[45];
          internal__static_bnet_protocol_exchange_GetBidDetailsResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetBidDetailsResponse, global::bnet.protocol.exchange.GetBidDetailsResponse.Builder>(internal__static_bnet_protocol_exchange_GetBidDetailsResponse__Descriptor,
                  new string[] { "Bid", });
          internal__static_bnet_protocol_exchange_GetOfferDetailsRequest__Descriptor = Descriptor.MessageTypes[46];
          internal__static_bnet_protocol_exchange_GetOfferDetailsRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetOfferDetailsRequest, global::bnet.protocol.exchange.GetOfferDetailsRequest.Builder>(internal__static_bnet_protocol_exchange_GetOfferDetailsRequest__Descriptor,
                  new string[] { "OrderId", "PartitionId", });
          internal__static_bnet_protocol_exchange_GetOfferDetailsResponse__Descriptor = Descriptor.MessageTypes[47];
          internal__static_bnet_protocol_exchange_GetOfferDetailsResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetOfferDetailsResponse, global::bnet.protocol.exchange.GetOfferDetailsResponse.Builder>(internal__static_bnet_protocol_exchange_GetOfferDetailsResponse__Descriptor,
                  new string[] { "Offer", });
          internal__static_bnet_protocol_exchange_GetSystemTimeResponse__Descriptor = Descriptor.MessageTypes[48];
          internal__static_bnet_protocol_exchange_GetSystemTimeResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetSystemTimeResponse, global::bnet.protocol.exchange.GetSystemTimeResponse.Builder>(internal__static_bnet_protocol_exchange_GetSystemTimeResponse__Descriptor,
                  new string[] { "Time", });
          internal__static_bnet_protocol_exchange_CreateCSTradeRequest__Descriptor = Descriptor.MessageTypes[49];
          internal__static_bnet_protocol_exchange_CreateCSTradeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CreateCSTradeRequest, global::bnet.protocol.exchange.CreateCSTradeRequest.Builder>(internal__static_bnet_protocol_exchange_CreateCSTradeRequest__Descriptor,
                  new string[] { "PartitionId", "OrderBook", "Amount", "BnetAccount", "GameAccount", "AccountForItem", "CsNotes", "CsUserId", });
          internal__static_bnet_protocol_exchange_GetOrderCountRequest__Descriptor = Descriptor.MessageTypes[50];
          internal__static_bnet_protocol_exchange_GetOrderCountRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetOrderCountRequest, global::bnet.protocol.exchange.GetOrderCountRequest.Builder>(internal__static_bnet_protocol_exchange_GetOrderCountRequest__Descriptor,
                  new string[] { "Currency", "Source", "BnetAccount", "NotClosedOfferCount", "OrderWithClaimableCount", });
          internal__static_bnet_protocol_exchange_GetOrderCountResponse__Descriptor = Descriptor.MessageTypes[51];
          internal__static_bnet_protocol_exchange_GetOrderCountResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.GetOrderCountResponse, global::bnet.protocol.exchange.GetOrderCountResponse.Builder>(internal__static_bnet_protocol_exchange_GetOrderCountResponse__Descriptor,
                  new string[] { "NotClosedOfferCount", "OrderWithClaimableCount", });
          internal__static_bnet_protocol_exchange_HistoriesForCSRequest__Descriptor = Descriptor.MessageTypes[52];
          internal__static_bnet_protocol_exchange_HistoriesForCSRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.HistoriesForCSRequest, global::bnet.protocol.exchange.HistoriesForCSRequest.Builder>(internal__static_bnet_protocol_exchange_HistoriesForCSRequest__Descriptor,
                  new string[] { "BnetAccount", "Program", "LowerTime", "HigherTime", });
          internal__static_bnet_protocol_exchange_HistoriesForCSResponse__Descriptor = Descriptor.MessageTypes[53];
          internal__static_bnet_protocol_exchange_HistoriesForCSResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.HistoriesForCSResponse, global::bnet.protocol.exchange.HistoriesForCSResponse.Builder>(internal__static_bnet_protocol_exchange_HistoriesForCSResponse__Descriptor,
                  new string[] { "HistoryData", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bnet.protocol.Rpc.RegisterAllExtensions(registry);
          global::bnet.protocol.exchange.Exchange.RegisterAllExtensions(registry);
          global::bnet.protocol.exchange_object_provider.ExchangeObjectProviderTypes.RegisterAllExtensions(registry);
          global::bnet.protocol.exchange_risk.ExchangeRiskTypes.RegisterAllExtensions(registry);
          global::bnet.protocol.Entity.RegisterAllExtensions(registry);
          global::bnet.protocol.account.AccountTypes.RegisterAllExtensions(registry);
          global::bnet.protocol.exchange.ExchangeTypes.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bnet.protocol.Rpc.Descriptor, 
            global::bnet.protocol.exchange.Exchange.Descriptor, 
            global::bnet.protocol.exchange_object_provider.ExchangeObjectProviderTypes.Descriptor, 
            global::bnet.protocol.exchange_risk.ExchangeRiskTypes.Descriptor, 
            global::bnet.protocol.Entity.Descriptor, 
            global::bnet.protocol.account.AccountTypes.Descriptor, 
            global::bnet.protocol.exchange.ExchangeTypes.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateOrderBookRequest : pb::GeneratedMessage<CreateOrderBookRequest, CreateOrderBookRequest.Builder> {
    private CreateOrderBookRequest() { }
    private static readonly CreateOrderBookRequest defaultInstance = new CreateOrderBookRequest().MakeReadOnly();
    private static readonly string[] _createOrderBookRequestFieldNames = new string[] { "order_book", "partition_id" };
    private static readonly uint[] _createOrderBookRequestFieldTags = new uint[] { 18, 10 };
    public static CreateOrderBookRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateOrderBookRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateOrderBookRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_CreateOrderBookRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateOrderBookRequest, CreateOrderBookRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_CreateOrderBookRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int OrderBookFieldNumber = 2;
    private bool hasOrderBook;
    private global::bnet.protocol.exchange.OrderBook orderBook_;
    public bool HasOrderBook {
      get { return hasOrderBook; }
    }
    public global::bnet.protocol.exchange.OrderBook OrderBook {
      get { return orderBook_ ?? global::bnet.protocol.exchange.OrderBook.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOrderBook) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!OrderBook.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createOrderBookRequestFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[1], PartitionId);
      }
      if (hasOrderBook) {
        output.WriteMessage(2, field_names[0], OrderBook);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasOrderBook) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, OrderBook);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateOrderBookRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateOrderBookRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateOrderBookRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateOrderBookRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateOrderBookRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateOrderBookRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateOrderBookRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateOrderBookRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateOrderBookRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateOrderBookRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateOrderBookRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateOrderBookRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateOrderBookRequest result;
      
      private CreateOrderBookRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateOrderBookRequest original = result;
          result = new CreateOrderBookRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateOrderBookRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.CreateOrderBookRequest.Descriptor; }
      }
      
      public override CreateOrderBookRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.CreateOrderBookRequest.DefaultInstance; }
      }
      
      public override CreateOrderBookRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateOrderBookRequest) {
          return MergeFrom((CreateOrderBookRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateOrderBookRequest other) {
        if (other == global::bnet.protocol.exchange.CreateOrderBookRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderBook) {
          MergeOrderBook(other.OrderBook);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createOrderBookRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createOrderBookRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.OrderBook.Builder subBuilder = global::bnet.protocol.exchange.OrderBook.CreateBuilder();
              if (result.hasOrderBook) {
                subBuilder.MergeFrom(OrderBook);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderBook = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasOrderBook {
       get { return result.hasOrderBook; }
      }
      public global::bnet.protocol.exchange.OrderBook OrderBook {
        get { return result.OrderBook; }
        set { SetOrderBook(value); }
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderBook = true;
        result.orderBook_ = value;
        return this;
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrderBook = true;
        result.orderBook_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrderBook &&
            result.orderBook_ != global::bnet.protocol.exchange.OrderBook.DefaultInstance) {
            result.orderBook_ = global::bnet.protocol.exchange.OrderBook.CreateBuilder(result.orderBook_).MergeFrom(value).BuildPartial();
        } else {
          result.orderBook_ = value;
        }
        result.hasOrderBook = true;
        return this;
      }
      public Builder ClearOrderBook() {
        PrepareBuilder();
        result.hasOrderBook = false;
        result.orderBook_ = null;
        return this;
      }
    }
    static CreateOrderBookRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateOrderBookResponse : pb::GeneratedMessage<CreateOrderBookResponse, CreateOrderBookResponse.Builder> {
    private CreateOrderBookResponse() { }
    private static readonly CreateOrderBookResponse defaultInstance = new CreateOrderBookResponse().MakeReadOnly();
    private static readonly string[] _createOrderBookResponseFieldNames = new string[] { "order_book_id" };
    private static readonly uint[] _createOrderBookResponseFieldTags = new uint[] { 8 };
    public static CreateOrderBookResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateOrderBookResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateOrderBookResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_CreateOrderBookResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateOrderBookResponse, CreateOrderBookResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_CreateOrderBookResponse__FieldAccessorTable; }
    }
    
    public const int OrderBookIdFieldNumber = 1;
    private bool hasOrderBookId;
    private ulong orderBookId_;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createOrderBookResponseFieldNames;
      if (hasOrderBookId) {
        output.WriteUInt64(1, field_names[0], OrderBookId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, OrderBookId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateOrderBookResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateOrderBookResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateOrderBookResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateOrderBookResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateOrderBookResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateOrderBookResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateOrderBookResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateOrderBookResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateOrderBookResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateOrderBookResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateOrderBookResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateOrderBookResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateOrderBookResponse result;
      
      private CreateOrderBookResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateOrderBookResponse original = result;
          result = new CreateOrderBookResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateOrderBookResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.CreateOrderBookResponse.Descriptor; }
      }
      
      public override CreateOrderBookResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.CreateOrderBookResponse.DefaultInstance; }
      }
      
      public override CreateOrderBookResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateOrderBookResponse) {
          return MergeFrom((CreateOrderBookResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateOrderBookResponse other) {
        if (other == global::bnet.protocol.exchange.CreateOrderBookResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createOrderBookResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createOrderBookResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasOrderBookId = input.ReadUInt64(ref result.orderBookId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrderBookId {
        get { return result.hasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        PrepareBuilder();
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        PrepareBuilder();
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
    }
    static CreateOrderBookResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class PlaceOfferOnOrderBookRequest : pb::GeneratedMessage<PlaceOfferOnOrderBookRequest, PlaceOfferOnOrderBookRequest.Builder> {
    private PlaceOfferOnOrderBookRequest() { }
    private static readonly PlaceOfferOnOrderBookRequest defaultInstance = new PlaceOfferOnOrderBookRequest().MakeReadOnly();
    private static readonly string[] _placeOfferOnOrderBookRequestFieldNames = new string[] { "offer_creation", "partition_id" };
    private static readonly uint[] _placeOfferOnOrderBookRequestFieldTags = new uint[] { 18, 10 };
    public static PlaceOfferOnOrderBookRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlaceOfferOnOrderBookRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlaceOfferOnOrderBookRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlaceOfferOnOrderBookRequest, PlaceOfferOnOrderBookRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int OfferCreationFieldNumber = 2;
    private bool hasOfferCreation;
    private global::bnet.protocol.exchange.OfferCreation offerCreation_;
    public bool HasOfferCreation {
      get { return hasOfferCreation; }
    }
    public global::bnet.protocol.exchange.OfferCreation OfferCreation {
      get { return offerCreation_ ?? global::bnet.protocol.exchange.OfferCreation.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOfferCreation) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!OfferCreation.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _placeOfferOnOrderBookRequestFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[1], PartitionId);
      }
      if (hasOfferCreation) {
        output.WriteMessage(2, field_names[0], OfferCreation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasOfferCreation) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, OfferCreation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlaceOfferOnOrderBookRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlaceOfferOnOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlaceOfferOnOrderBookRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlaceOfferOnOrderBookRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlaceOfferOnOrderBookRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<PlaceOfferOnOrderBookRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlaceOfferOnOrderBookRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlaceOfferOnOrderBookRequest result;
      
      private PlaceOfferOnOrderBookRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          PlaceOfferOnOrderBookRequest original = result;
          result = new PlaceOfferOnOrderBookRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlaceOfferOnOrderBookRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest.Descriptor; }
      }
      
      public override PlaceOfferOnOrderBookRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest.DefaultInstance; }
      }
      
      public override PlaceOfferOnOrderBookRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlaceOfferOnOrderBookRequest) {
          return MergeFrom((PlaceOfferOnOrderBookRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlaceOfferOnOrderBookRequest other) {
        if (other == global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOfferCreation) {
          MergeOfferCreation(other.OfferCreation);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_placeOfferOnOrderBookRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _placeOfferOnOrderBookRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.OfferCreation.Builder subBuilder = global::bnet.protocol.exchange.OfferCreation.CreateBuilder();
              if (result.hasOfferCreation) {
                subBuilder.MergeFrom(OfferCreation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OfferCreation = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasOfferCreation {
       get { return result.hasOfferCreation; }
      }
      public global::bnet.protocol.exchange.OfferCreation OfferCreation {
        get { return result.OfferCreation; }
        set { SetOfferCreation(value); }
      }
      public Builder SetOfferCreation(global::bnet.protocol.exchange.OfferCreation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOfferCreation = true;
        result.offerCreation_ = value;
        return this;
      }
      public Builder SetOfferCreation(global::bnet.protocol.exchange.OfferCreation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOfferCreation = true;
        result.offerCreation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOfferCreation(global::bnet.protocol.exchange.OfferCreation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOfferCreation &&
            result.offerCreation_ != global::bnet.protocol.exchange.OfferCreation.DefaultInstance) {
            result.offerCreation_ = global::bnet.protocol.exchange.OfferCreation.CreateBuilder(result.offerCreation_).MergeFrom(value).BuildPartial();
        } else {
          result.offerCreation_ = value;
        }
        result.hasOfferCreation = true;
        return this;
      }
      public Builder ClearOfferCreation() {
        PrepareBuilder();
        result.hasOfferCreation = false;
        result.offerCreation_ = null;
        return this;
      }
    }
    static PlaceOfferOnOrderBookRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class PlaceOfferOnOrderBookResponse : pb::GeneratedMessage<PlaceOfferOnOrderBookResponse, PlaceOfferOnOrderBookResponse.Builder> {
    private PlaceOfferOnOrderBookResponse() { }
    private static readonly PlaceOfferOnOrderBookResponse defaultInstance = new PlaceOfferOnOrderBookResponse().MakeReadOnly();
    private static readonly string[] _placeOfferOnOrderBookResponseFieldNames = new string[] { "offer_id", "order_book_id" };
    private static readonly uint[] _placeOfferOnOrderBookResponseFieldTags = new uint[] { 16, 8 };
    public static PlaceOfferOnOrderBookResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlaceOfferOnOrderBookResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlaceOfferOnOrderBookResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlaceOfferOnOrderBookResponse, PlaceOfferOnOrderBookResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceOfferOnOrderBookResponse__FieldAccessorTable; }
    }
    
    public const int OrderBookIdFieldNumber = 1;
    private bool hasOrderBookId;
    private ulong orderBookId_;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public const int OfferIdFieldNumber = 2;
    private bool hasOfferId;
    private ulong offerId_;
    public bool HasOfferId {
      get { return hasOfferId; }
    }
    public ulong OfferId {
      get { return offerId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _placeOfferOnOrderBookResponseFieldNames;
      if (hasOrderBookId) {
        output.WriteUInt64(1, field_names[1], OrderBookId);
      }
      if (hasOfferId) {
        output.WriteUInt64(2, field_names[0], OfferId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, OrderBookId);
        }
        if (hasOfferId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, OfferId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlaceOfferOnOrderBookResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlaceOfferOnOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlaceOfferOnOrderBookResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceOfferOnOrderBookResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlaceOfferOnOrderBookResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlaceOfferOnOrderBookResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<PlaceOfferOnOrderBookResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlaceOfferOnOrderBookResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlaceOfferOnOrderBookResponse result;
      
      private PlaceOfferOnOrderBookResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          PlaceOfferOnOrderBookResponse original = result;
          result = new PlaceOfferOnOrderBookResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlaceOfferOnOrderBookResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse.Descriptor; }
      }
      
      public override PlaceOfferOnOrderBookResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse.DefaultInstance; }
      }
      
      public override PlaceOfferOnOrderBookResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlaceOfferOnOrderBookResponse) {
          return MergeFrom((PlaceOfferOnOrderBookResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlaceOfferOnOrderBookResponse other) {
        if (other == global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        if (other.HasOfferId) {
          OfferId = other.OfferId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_placeOfferOnOrderBookResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _placeOfferOnOrderBookResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasOrderBookId = input.ReadUInt64(ref result.orderBookId_);
              break;
            }
            case 16: {
              result.hasOfferId = input.ReadUInt64(ref result.offerId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrderBookId {
        get { return result.hasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        PrepareBuilder();
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        PrepareBuilder();
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
      
      public bool HasOfferId {
        get { return result.hasOfferId; }
      }
      public ulong OfferId {
        get { return result.OfferId; }
        set { SetOfferId(value); }
      }
      public Builder SetOfferId(ulong value) {
        PrepareBuilder();
        result.hasOfferId = true;
        result.offerId_ = value;
        return this;
      }
      public Builder ClearOfferId() {
        PrepareBuilder();
        result.hasOfferId = false;
        result.offerId_ = 0UL;
        return this;
      }
    }
    static PlaceOfferOnOrderBookResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class PlaceOfferCreateOrderBookIfNeededRequest : pb::GeneratedMessage<PlaceOfferCreateOrderBookIfNeededRequest, PlaceOfferCreateOrderBookIfNeededRequest.Builder> {
    private PlaceOfferCreateOrderBookIfNeededRequest() { }
    private static readonly PlaceOfferCreateOrderBookIfNeededRequest defaultInstance = new PlaceOfferCreateOrderBookIfNeededRequest().MakeReadOnly();
    private static readonly string[] _placeOfferCreateOrderBookIfNeededRequestFieldNames = new string[] { "offer_creation", "order_book", "partition_id" };
    private static readonly uint[] _placeOfferCreateOrderBookIfNeededRequestFieldTags = new uint[] { 26, 18, 10 };
    public static PlaceOfferCreateOrderBookIfNeededRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlaceOfferCreateOrderBookIfNeededRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlaceOfferCreateOrderBookIfNeededRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlaceOfferCreateOrderBookIfNeededRequest, PlaceOfferCreateOrderBookIfNeededRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int OrderBookFieldNumber = 2;
    private bool hasOrderBook;
    private global::bnet.protocol.exchange.OrderBook orderBook_;
    public bool HasOrderBook {
      get { return hasOrderBook; }
    }
    public global::bnet.protocol.exchange.OrderBook OrderBook {
      get { return orderBook_ ?? global::bnet.protocol.exchange.OrderBook.DefaultInstance; }
    }
    
    public const int OfferCreationFieldNumber = 3;
    private bool hasOfferCreation;
    private global::bnet.protocol.exchange.OfferCreation offerCreation_;
    public bool HasOfferCreation {
      get { return hasOfferCreation; }
    }
    public global::bnet.protocol.exchange.OfferCreation OfferCreation {
      get { return offerCreation_ ?? global::bnet.protocol.exchange.OfferCreation.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOrderBook) return false;
        if (!hasOfferCreation) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!OrderBook.IsInitialized) return false;
        if (!OfferCreation.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _placeOfferCreateOrderBookIfNeededRequestFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[2], PartitionId);
      }
      if (hasOrderBook) {
        output.WriteMessage(2, field_names[1], OrderBook);
      }
      if (hasOfferCreation) {
        output.WriteMessage(3, field_names[0], OfferCreation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasOrderBook) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, OrderBook);
        }
        if (hasOfferCreation) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, OfferCreation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlaceOfferCreateOrderBookIfNeededRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlaceOfferCreateOrderBookIfNeededRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<PlaceOfferCreateOrderBookIfNeededRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlaceOfferCreateOrderBookIfNeededRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlaceOfferCreateOrderBookIfNeededRequest result;
      
      private PlaceOfferCreateOrderBookIfNeededRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          PlaceOfferCreateOrderBookIfNeededRequest original = result;
          result = new PlaceOfferCreateOrderBookIfNeededRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlaceOfferCreateOrderBookIfNeededRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest.Descriptor; }
      }
      
      public override PlaceOfferCreateOrderBookIfNeededRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest.DefaultInstance; }
      }
      
      public override PlaceOfferCreateOrderBookIfNeededRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlaceOfferCreateOrderBookIfNeededRequest) {
          return MergeFrom((PlaceOfferCreateOrderBookIfNeededRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlaceOfferCreateOrderBookIfNeededRequest other) {
        if (other == global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderBook) {
          MergeOrderBook(other.OrderBook);
        }
        if (other.HasOfferCreation) {
          MergeOfferCreation(other.OfferCreation);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_placeOfferCreateOrderBookIfNeededRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _placeOfferCreateOrderBookIfNeededRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.OrderBook.Builder subBuilder = global::bnet.protocol.exchange.OrderBook.CreateBuilder();
              if (result.hasOrderBook) {
                subBuilder.MergeFrom(OrderBook);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderBook = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.exchange.OfferCreation.Builder subBuilder = global::bnet.protocol.exchange.OfferCreation.CreateBuilder();
              if (result.hasOfferCreation) {
                subBuilder.MergeFrom(OfferCreation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OfferCreation = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasOrderBook {
       get { return result.hasOrderBook; }
      }
      public global::bnet.protocol.exchange.OrderBook OrderBook {
        get { return result.OrderBook; }
        set { SetOrderBook(value); }
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderBook = true;
        result.orderBook_ = value;
        return this;
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrderBook = true;
        result.orderBook_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrderBook &&
            result.orderBook_ != global::bnet.protocol.exchange.OrderBook.DefaultInstance) {
            result.orderBook_ = global::bnet.protocol.exchange.OrderBook.CreateBuilder(result.orderBook_).MergeFrom(value).BuildPartial();
        } else {
          result.orderBook_ = value;
        }
        result.hasOrderBook = true;
        return this;
      }
      public Builder ClearOrderBook() {
        PrepareBuilder();
        result.hasOrderBook = false;
        result.orderBook_ = null;
        return this;
      }
      
      public bool HasOfferCreation {
       get { return result.hasOfferCreation; }
      }
      public global::bnet.protocol.exchange.OfferCreation OfferCreation {
        get { return result.OfferCreation; }
        set { SetOfferCreation(value); }
      }
      public Builder SetOfferCreation(global::bnet.protocol.exchange.OfferCreation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOfferCreation = true;
        result.offerCreation_ = value;
        return this;
      }
      public Builder SetOfferCreation(global::bnet.protocol.exchange.OfferCreation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOfferCreation = true;
        result.offerCreation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOfferCreation(global::bnet.protocol.exchange.OfferCreation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOfferCreation &&
            result.offerCreation_ != global::bnet.protocol.exchange.OfferCreation.DefaultInstance) {
            result.offerCreation_ = global::bnet.protocol.exchange.OfferCreation.CreateBuilder(result.offerCreation_).MergeFrom(value).BuildPartial();
        } else {
          result.offerCreation_ = value;
        }
        result.hasOfferCreation = true;
        return this;
      }
      public Builder ClearOfferCreation() {
        PrepareBuilder();
        result.hasOfferCreation = false;
        result.offerCreation_ = null;
        return this;
      }
    }
    static PlaceOfferCreateOrderBookIfNeededRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class PlaceOfferCreateOrderBookIfNeededResponse : pb::GeneratedMessage<PlaceOfferCreateOrderBookIfNeededResponse, PlaceOfferCreateOrderBookIfNeededResponse.Builder> {
    private PlaceOfferCreateOrderBookIfNeededResponse() { }
    private static readonly PlaceOfferCreateOrderBookIfNeededResponse defaultInstance = new PlaceOfferCreateOrderBookIfNeededResponse().MakeReadOnly();
    private static readonly string[] _placeOfferCreateOrderBookIfNeededResponseFieldNames = new string[] { "offer_id", "order_book_id" };
    private static readonly uint[] _placeOfferCreateOrderBookIfNeededResponseFieldTags = new uint[] { 16, 8 };
    public static PlaceOfferCreateOrderBookIfNeededResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlaceOfferCreateOrderBookIfNeededResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlaceOfferCreateOrderBookIfNeededResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlaceOfferCreateOrderBookIfNeededResponse, PlaceOfferCreateOrderBookIfNeededResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceOfferCreateOrderBookIfNeededResponse__FieldAccessorTable; }
    }
    
    public const int OrderBookIdFieldNumber = 1;
    private bool hasOrderBookId;
    private ulong orderBookId_;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public const int OfferIdFieldNumber = 2;
    private bool hasOfferId;
    private ulong offerId_;
    public bool HasOfferId {
      get { return hasOfferId; }
    }
    public ulong OfferId {
      get { return offerId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _placeOfferCreateOrderBookIfNeededResponseFieldNames;
      if (hasOrderBookId) {
        output.WriteUInt64(1, field_names[1], OrderBookId);
      }
      if (hasOfferId) {
        output.WriteUInt64(2, field_names[0], OfferId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, OrderBookId);
        }
        if (hasOfferId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, OfferId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceOfferCreateOrderBookIfNeededResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlaceOfferCreateOrderBookIfNeededResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlaceOfferCreateOrderBookIfNeededResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<PlaceOfferCreateOrderBookIfNeededResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlaceOfferCreateOrderBookIfNeededResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlaceOfferCreateOrderBookIfNeededResponse result;
      
      private PlaceOfferCreateOrderBookIfNeededResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          PlaceOfferCreateOrderBookIfNeededResponse original = result;
          result = new PlaceOfferCreateOrderBookIfNeededResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlaceOfferCreateOrderBookIfNeededResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse.Descriptor; }
      }
      
      public override PlaceOfferCreateOrderBookIfNeededResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse.DefaultInstance; }
      }
      
      public override PlaceOfferCreateOrderBookIfNeededResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlaceOfferCreateOrderBookIfNeededResponse) {
          return MergeFrom((PlaceOfferCreateOrderBookIfNeededResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlaceOfferCreateOrderBookIfNeededResponse other) {
        if (other == global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        if (other.HasOfferId) {
          OfferId = other.OfferId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_placeOfferCreateOrderBookIfNeededResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _placeOfferCreateOrderBookIfNeededResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasOrderBookId = input.ReadUInt64(ref result.orderBookId_);
              break;
            }
            case 16: {
              result.hasOfferId = input.ReadUInt64(ref result.offerId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrderBookId {
        get { return result.hasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        PrepareBuilder();
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        PrepareBuilder();
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
      
      public bool HasOfferId {
        get { return result.hasOfferId; }
      }
      public ulong OfferId {
        get { return result.OfferId; }
        set { SetOfferId(value); }
      }
      public Builder SetOfferId(ulong value) {
        PrepareBuilder();
        result.hasOfferId = true;
        result.offerId_ = value;
        return this;
      }
      public Builder ClearOfferId() {
        PrepareBuilder();
        result.hasOfferId = false;
        result.offerId_ = 0UL;
        return this;
      }
    }
    static PlaceOfferCreateOrderBookIfNeededResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class PlaceBidOnOrderBookRequest : pb::GeneratedMessage<PlaceBidOnOrderBookRequest, PlaceBidOnOrderBookRequest.Builder> {
    private PlaceBidOnOrderBookRequest() { }
    private static readonly PlaceBidOnOrderBookRequest defaultInstance = new PlaceBidOnOrderBookRequest().MakeReadOnly();
    private static readonly string[] _placeBidOnOrderBookRequestFieldNames = new string[] { "bid_creation", "partition_id" };
    private static readonly uint[] _placeBidOnOrderBookRequestFieldTags = new uint[] { 18, 10 };
    public static PlaceBidOnOrderBookRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlaceBidOnOrderBookRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlaceBidOnOrderBookRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlaceBidOnOrderBookRequest, PlaceBidOnOrderBookRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int BidCreationFieldNumber = 2;
    private bool hasBidCreation;
    private global::bnet.protocol.exchange.BidCreation bidCreation_;
    public bool HasBidCreation {
      get { return hasBidCreation; }
    }
    public global::bnet.protocol.exchange.BidCreation BidCreation {
      get { return bidCreation_ ?? global::bnet.protocol.exchange.BidCreation.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasBidCreation) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!BidCreation.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _placeBidOnOrderBookRequestFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[1], PartitionId);
      }
      if (hasBidCreation) {
        output.WriteMessage(2, field_names[0], BidCreation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasBidCreation) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, BidCreation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlaceBidOnOrderBookRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceBidOnOrderBookRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidOnOrderBookRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceBidOnOrderBookRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidOnOrderBookRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceBidOnOrderBookRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidOnOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlaceBidOnOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlaceBidOnOrderBookRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceBidOnOrderBookRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlaceBidOnOrderBookRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlaceBidOnOrderBookRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<PlaceBidOnOrderBookRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlaceBidOnOrderBookRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlaceBidOnOrderBookRequest result;
      
      private PlaceBidOnOrderBookRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          PlaceBidOnOrderBookRequest original = result;
          result = new PlaceBidOnOrderBookRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlaceBidOnOrderBookRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest.Descriptor; }
      }
      
      public override PlaceBidOnOrderBookRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest.DefaultInstance; }
      }
      
      public override PlaceBidOnOrderBookRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlaceBidOnOrderBookRequest) {
          return MergeFrom((PlaceBidOnOrderBookRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlaceBidOnOrderBookRequest other) {
        if (other == global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasBidCreation) {
          MergeBidCreation(other.BidCreation);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_placeBidOnOrderBookRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _placeBidOnOrderBookRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.BidCreation.Builder subBuilder = global::bnet.protocol.exchange.BidCreation.CreateBuilder();
              if (result.hasBidCreation) {
                subBuilder.MergeFrom(BidCreation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BidCreation = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasBidCreation {
       get { return result.hasBidCreation; }
      }
      public global::bnet.protocol.exchange.BidCreation BidCreation {
        get { return result.BidCreation; }
        set { SetBidCreation(value); }
      }
      public Builder SetBidCreation(global::bnet.protocol.exchange.BidCreation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBidCreation = true;
        result.bidCreation_ = value;
        return this;
      }
      public Builder SetBidCreation(global::bnet.protocol.exchange.BidCreation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBidCreation = true;
        result.bidCreation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBidCreation(global::bnet.protocol.exchange.BidCreation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBidCreation &&
            result.bidCreation_ != global::bnet.protocol.exchange.BidCreation.DefaultInstance) {
            result.bidCreation_ = global::bnet.protocol.exchange.BidCreation.CreateBuilder(result.bidCreation_).MergeFrom(value).BuildPartial();
        } else {
          result.bidCreation_ = value;
        }
        result.hasBidCreation = true;
        return this;
      }
      public Builder ClearBidCreation() {
        PrepareBuilder();
        result.hasBidCreation = false;
        result.bidCreation_ = null;
        return this;
      }
    }
    static PlaceBidOnOrderBookRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class PlaceBidOnOrderBookResponse : pb::GeneratedMessage<PlaceBidOnOrderBookResponse, PlaceBidOnOrderBookResponse.Builder> {
    private PlaceBidOnOrderBookResponse() { }
    private static readonly PlaceBidOnOrderBookResponse defaultInstance = new PlaceBidOnOrderBookResponse().MakeReadOnly();
    private static readonly string[] _placeBidOnOrderBookResponseFieldNames = new string[] { "bid_id", "order_book_id" };
    private static readonly uint[] _placeBidOnOrderBookResponseFieldTags = new uint[] { 16, 8 };
    public static PlaceBidOnOrderBookResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlaceBidOnOrderBookResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlaceBidOnOrderBookResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlaceBidOnOrderBookResponse, PlaceBidOnOrderBookResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceBidOnOrderBookResponse__FieldAccessorTable; }
    }
    
    public const int OrderBookIdFieldNumber = 1;
    private bool hasOrderBookId;
    private ulong orderBookId_;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public const int BidIdFieldNumber = 2;
    private bool hasBidId;
    private ulong bidId_;
    public bool HasBidId {
      get { return hasBidId; }
    }
    public ulong BidId {
      get { return bidId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _placeBidOnOrderBookResponseFieldNames;
      if (hasOrderBookId) {
        output.WriteUInt64(1, field_names[1], OrderBookId);
      }
      if (hasBidId) {
        output.WriteUInt64(2, field_names[0], BidId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, OrderBookId);
        }
        if (hasBidId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, BidId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlaceBidOnOrderBookResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceBidOnOrderBookResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidOnOrderBookResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceBidOnOrderBookResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidOnOrderBookResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceBidOnOrderBookResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidOnOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlaceBidOnOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlaceBidOnOrderBookResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceBidOnOrderBookResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlaceBidOnOrderBookResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlaceBidOnOrderBookResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<PlaceBidOnOrderBookResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlaceBidOnOrderBookResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlaceBidOnOrderBookResponse result;
      
      private PlaceBidOnOrderBookResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          PlaceBidOnOrderBookResponse original = result;
          result = new PlaceBidOnOrderBookResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlaceBidOnOrderBookResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse.Descriptor; }
      }
      
      public override PlaceBidOnOrderBookResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse.DefaultInstance; }
      }
      
      public override PlaceBidOnOrderBookResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlaceBidOnOrderBookResponse) {
          return MergeFrom((PlaceBidOnOrderBookResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlaceBidOnOrderBookResponse other) {
        if (other == global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        if (other.HasBidId) {
          BidId = other.BidId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_placeBidOnOrderBookResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _placeBidOnOrderBookResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasOrderBookId = input.ReadUInt64(ref result.orderBookId_);
              break;
            }
            case 16: {
              result.hasBidId = input.ReadUInt64(ref result.bidId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrderBookId {
        get { return result.hasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        PrepareBuilder();
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        PrepareBuilder();
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
      
      public bool HasBidId {
        get { return result.hasBidId; }
      }
      public ulong BidId {
        get { return result.BidId; }
        set { SetBidId(value); }
      }
      public Builder SetBidId(ulong value) {
        PrepareBuilder();
        result.hasBidId = true;
        result.bidId_ = value;
        return this;
      }
      public Builder ClearBidId() {
        PrepareBuilder();
        result.hasBidId = false;
        result.bidId_ = 0UL;
        return this;
      }
    }
    static PlaceBidOnOrderBookResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class PlaceBidCreateOrderBookIfNeededRequest : pb::GeneratedMessage<PlaceBidCreateOrderBookIfNeededRequest, PlaceBidCreateOrderBookIfNeededRequest.Builder> {
    private PlaceBidCreateOrderBookIfNeededRequest() { }
    private static readonly PlaceBidCreateOrderBookIfNeededRequest defaultInstance = new PlaceBidCreateOrderBookIfNeededRequest().MakeReadOnly();
    private static readonly string[] _placeBidCreateOrderBookIfNeededRequestFieldNames = new string[] { "bid_creation", "order_book", "partition_id" };
    private static readonly uint[] _placeBidCreateOrderBookIfNeededRequestFieldTags = new uint[] { 26, 18, 10 };
    public static PlaceBidCreateOrderBookIfNeededRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlaceBidCreateOrderBookIfNeededRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlaceBidCreateOrderBookIfNeededRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlaceBidCreateOrderBookIfNeededRequest, PlaceBidCreateOrderBookIfNeededRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int OrderBookFieldNumber = 2;
    private bool hasOrderBook;
    private global::bnet.protocol.exchange.OrderBook orderBook_;
    public bool HasOrderBook {
      get { return hasOrderBook; }
    }
    public global::bnet.protocol.exchange.OrderBook OrderBook {
      get { return orderBook_ ?? global::bnet.protocol.exchange.OrderBook.DefaultInstance; }
    }
    
    public const int BidCreationFieldNumber = 3;
    private bool hasBidCreation;
    private global::bnet.protocol.exchange.BidCreation bidCreation_;
    public bool HasBidCreation {
      get { return hasBidCreation; }
    }
    public global::bnet.protocol.exchange.BidCreation BidCreation {
      get { return bidCreation_ ?? global::bnet.protocol.exchange.BidCreation.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOrderBook) return false;
        if (!hasBidCreation) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!OrderBook.IsInitialized) return false;
        if (!BidCreation.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _placeBidCreateOrderBookIfNeededRequestFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[2], PartitionId);
      }
      if (hasOrderBook) {
        output.WriteMessage(2, field_names[1], OrderBook);
      }
      if (hasBidCreation) {
        output.WriteMessage(3, field_names[0], BidCreation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasOrderBook) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, OrderBook);
        }
        if (hasBidCreation) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, BidCreation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlaceBidCreateOrderBookIfNeededRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlaceBidCreateOrderBookIfNeededRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlaceBidCreateOrderBookIfNeededRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<PlaceBidCreateOrderBookIfNeededRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlaceBidCreateOrderBookIfNeededRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlaceBidCreateOrderBookIfNeededRequest result;
      
      private PlaceBidCreateOrderBookIfNeededRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          PlaceBidCreateOrderBookIfNeededRequest original = result;
          result = new PlaceBidCreateOrderBookIfNeededRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlaceBidCreateOrderBookIfNeededRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest.Descriptor; }
      }
      
      public override PlaceBidCreateOrderBookIfNeededRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest.DefaultInstance; }
      }
      
      public override PlaceBidCreateOrderBookIfNeededRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlaceBidCreateOrderBookIfNeededRequest) {
          return MergeFrom((PlaceBidCreateOrderBookIfNeededRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlaceBidCreateOrderBookIfNeededRequest other) {
        if (other == global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderBook) {
          MergeOrderBook(other.OrderBook);
        }
        if (other.HasBidCreation) {
          MergeBidCreation(other.BidCreation);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_placeBidCreateOrderBookIfNeededRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _placeBidCreateOrderBookIfNeededRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.OrderBook.Builder subBuilder = global::bnet.protocol.exchange.OrderBook.CreateBuilder();
              if (result.hasOrderBook) {
                subBuilder.MergeFrom(OrderBook);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderBook = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.exchange.BidCreation.Builder subBuilder = global::bnet.protocol.exchange.BidCreation.CreateBuilder();
              if (result.hasBidCreation) {
                subBuilder.MergeFrom(BidCreation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BidCreation = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasOrderBook {
       get { return result.hasOrderBook; }
      }
      public global::bnet.protocol.exchange.OrderBook OrderBook {
        get { return result.OrderBook; }
        set { SetOrderBook(value); }
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderBook = true;
        result.orderBook_ = value;
        return this;
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrderBook = true;
        result.orderBook_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrderBook &&
            result.orderBook_ != global::bnet.protocol.exchange.OrderBook.DefaultInstance) {
            result.orderBook_ = global::bnet.protocol.exchange.OrderBook.CreateBuilder(result.orderBook_).MergeFrom(value).BuildPartial();
        } else {
          result.orderBook_ = value;
        }
        result.hasOrderBook = true;
        return this;
      }
      public Builder ClearOrderBook() {
        PrepareBuilder();
        result.hasOrderBook = false;
        result.orderBook_ = null;
        return this;
      }
      
      public bool HasBidCreation {
       get { return result.hasBidCreation; }
      }
      public global::bnet.protocol.exchange.BidCreation BidCreation {
        get { return result.BidCreation; }
        set { SetBidCreation(value); }
      }
      public Builder SetBidCreation(global::bnet.protocol.exchange.BidCreation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBidCreation = true;
        result.bidCreation_ = value;
        return this;
      }
      public Builder SetBidCreation(global::bnet.protocol.exchange.BidCreation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBidCreation = true;
        result.bidCreation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBidCreation(global::bnet.protocol.exchange.BidCreation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBidCreation &&
            result.bidCreation_ != global::bnet.protocol.exchange.BidCreation.DefaultInstance) {
            result.bidCreation_ = global::bnet.protocol.exchange.BidCreation.CreateBuilder(result.bidCreation_).MergeFrom(value).BuildPartial();
        } else {
          result.bidCreation_ = value;
        }
        result.hasBidCreation = true;
        return this;
      }
      public Builder ClearBidCreation() {
        PrepareBuilder();
        result.hasBidCreation = false;
        result.bidCreation_ = null;
        return this;
      }
    }
    static PlaceBidCreateOrderBookIfNeededRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class PlaceBidCreateOrderBookIfNeededResponse : pb::GeneratedMessage<PlaceBidCreateOrderBookIfNeededResponse, PlaceBidCreateOrderBookIfNeededResponse.Builder> {
    private PlaceBidCreateOrderBookIfNeededResponse() { }
    private static readonly PlaceBidCreateOrderBookIfNeededResponse defaultInstance = new PlaceBidCreateOrderBookIfNeededResponse().MakeReadOnly();
    private static readonly string[] _placeBidCreateOrderBookIfNeededResponseFieldNames = new string[] { "bid_id", "order_book_id" };
    private static readonly uint[] _placeBidCreateOrderBookIfNeededResponseFieldTags = new uint[] { 16, 8 };
    public static PlaceBidCreateOrderBookIfNeededResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlaceBidCreateOrderBookIfNeededResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlaceBidCreateOrderBookIfNeededResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlaceBidCreateOrderBookIfNeededResponse, PlaceBidCreateOrderBookIfNeededResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_PlaceBidCreateOrderBookIfNeededResponse__FieldAccessorTable; }
    }
    
    public const int OrderBookIdFieldNumber = 1;
    private bool hasOrderBookId;
    private ulong orderBookId_;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public const int BidIdFieldNumber = 2;
    private bool hasBidId;
    private ulong bidId_;
    public bool HasBidId {
      get { return hasBidId; }
    }
    public ulong BidId {
      get { return bidId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _placeBidCreateOrderBookIfNeededResponseFieldNames;
      if (hasOrderBookId) {
        output.WriteUInt64(1, field_names[1], OrderBookId);
      }
      if (hasBidId) {
        output.WriteUInt64(2, field_names[0], BidId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, OrderBookId);
        }
        if (hasBidId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, BidId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlaceBidCreateOrderBookIfNeededResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlaceBidCreateOrderBookIfNeededResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlaceBidCreateOrderBookIfNeededResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlaceBidCreateOrderBookIfNeededResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<PlaceBidCreateOrderBookIfNeededResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlaceBidCreateOrderBookIfNeededResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlaceBidCreateOrderBookIfNeededResponse result;
      
      private PlaceBidCreateOrderBookIfNeededResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          PlaceBidCreateOrderBookIfNeededResponse original = result;
          result = new PlaceBidCreateOrderBookIfNeededResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlaceBidCreateOrderBookIfNeededResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse.Descriptor; }
      }
      
      public override PlaceBidCreateOrderBookIfNeededResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse.DefaultInstance; }
      }
      
      public override PlaceBidCreateOrderBookIfNeededResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlaceBidCreateOrderBookIfNeededResponse) {
          return MergeFrom((PlaceBidCreateOrderBookIfNeededResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlaceBidCreateOrderBookIfNeededResponse other) {
        if (other == global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        if (other.HasBidId) {
          BidId = other.BidId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_placeBidCreateOrderBookIfNeededResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _placeBidCreateOrderBookIfNeededResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasOrderBookId = input.ReadUInt64(ref result.orderBookId_);
              break;
            }
            case 16: {
              result.hasBidId = input.ReadUInt64(ref result.bidId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrderBookId {
        get { return result.hasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        PrepareBuilder();
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        PrepareBuilder();
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
      
      public bool HasBidId {
        get { return result.hasBidId; }
      }
      public ulong BidId {
        get { return result.BidId; }
        set { SetBidId(value); }
      }
      public Builder SetBidId(ulong value) {
        PrepareBuilder();
        result.hasBidId = true;
        result.bidId_ = value;
        return this;
      }
      public Builder ClearBidId() {
        PrepareBuilder();
        result.hasBidId = false;
        result.bidId_ = 0UL;
        return this;
      }
    }
    static PlaceBidCreateOrderBookIfNeededResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueryOffersByOrderBookRequest : pb::GeneratedMessage<QueryOffersByOrderBookRequest, QueryOffersByOrderBookRequest.Builder> {
    private QueryOffersByOrderBookRequest() { }
    private static readonly QueryOffersByOrderBookRequest defaultInstance = new QueryOffersByOrderBookRequest().MakeReadOnly();
    private static readonly string[] _queryOffersByOrderBookRequestFieldNames = new string[] { "filter", "partition_id", "status" };
    private static readonly uint[] _queryOffersByOrderBookRequestFieldTags = new uint[] { 18, 10, 24 };
    public static QueryOffersByOrderBookRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryOffersByOrderBookRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryOffersByOrderBookRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOffersByOrderBookRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryOffersByOrderBookRequest, QueryOffersByOrderBookRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOffersByOrderBookRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int FilterFieldNumber = 2;
    private bool hasFilter;
    private global::bnet.protocol.exchange.QueryFilterByOrderId filter_;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::bnet.protocol.exchange.QueryFilterByOrderId Filter {
      get { return filter_ ?? global::bnet.protocol.exchange.QueryFilterByOrderId.DefaultInstance; }
    }
    
    public const int StatusFieldNumber = 3;
    private bool hasStatus;
    private int status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public int Status {
      get { return status_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasFilter) return false;
        if (!hasStatus) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!Filter.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryOffersByOrderBookRequestFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[1], PartitionId);
      }
      if (hasFilter) {
        output.WriteMessage(2, field_names[0], Filter);
      }
      if (hasStatus) {
        output.WriteInt32(3, field_names[2], Status);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Filter);
        }
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Status);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryOffersByOrderBookRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOffersByOrderBookRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByOrderBookRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOffersByOrderBookRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByOrderBookRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOffersByOrderBookRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryOffersByOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryOffersByOrderBookRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOffersByOrderBookRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryOffersByOrderBookRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryOffersByOrderBookRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryOffersByOrderBookRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryOffersByOrderBookRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryOffersByOrderBookRequest result;
      
      private QueryOffersByOrderBookRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryOffersByOrderBookRequest original = result;
          result = new QueryOffersByOrderBookRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryOffersByOrderBookRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryOffersByOrderBookRequest.Descriptor; }
      }
      
      public override QueryOffersByOrderBookRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryOffersByOrderBookRequest.DefaultInstance; }
      }
      
      public override QueryOffersByOrderBookRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryOffersByOrderBookRequest) {
          return MergeFrom((QueryOffersByOrderBookRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryOffersByOrderBookRequest other) {
        if (other == global::bnet.protocol.exchange.QueryOffersByOrderBookRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryOffersByOrderBookRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryOffersByOrderBookRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.QueryFilterByOrderId.Builder subBuilder = global::bnet.protocol.exchange.QueryFilterByOrderId.CreateBuilder();
              if (result.hasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasStatus = input.ReadInt32(ref result.status_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasFilter {
       get { return result.hasFilter; }
      }
      public global::bnet.protocol.exchange.QueryFilterByOrderId Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryFilterByOrderId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryFilterByOrderId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::bnet.protocol.exchange.QueryFilterByOrderId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFilter &&
            result.filter_ != global::bnet.protocol.exchange.QueryFilterByOrderId.DefaultInstance) {
            result.filter_ = global::bnet.protocol.exchange.QueryFilterByOrderId.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = null;
        return this;
      }
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      public int Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(int value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
    }
    static QueryOffersByOrderBookRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueryOffersByOrderBookResponse : pb::GeneratedMessage<QueryOffersByOrderBookResponse, QueryOffersByOrderBookResponse.Builder> {
    private QueryOffersByOrderBookResponse() { }
    private static readonly QueryOffersByOrderBookResponse defaultInstance = new QueryOffersByOrderBookResponse().MakeReadOnly();
    private static readonly string[] _queryOffersByOrderBookResponseFieldNames = new string[] { "offers", "total_count" };
    private static readonly uint[] _queryOffersByOrderBookResponseFieldTags = new uint[] { 10, 16 };
    public static QueryOffersByOrderBookResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryOffersByOrderBookResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryOffersByOrderBookResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOffersByOrderBookResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryOffersByOrderBookResponse, QueryOffersByOrderBookResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOffersByOrderBookResponse__FieldAccessorTable; }
    }
    
    public const int OffersFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.OfferExtended> offers_ = new pbc::PopsicleList<global::bnet.protocol.exchange.OfferExtended>();
    public scg::IList<global::bnet.protocol.exchange.OfferExtended> OffersList {
      get { return offers_; }
    }
    public int OffersCount {
      get { return offers_.Count; }
    }
    public global::bnet.protocol.exchange.OfferExtended GetOffers(int index) {
      return offers_[index];
    }
    
    public const int TotalCountFieldNumber = 2;
    private bool hasTotalCount;
    private uint totalCount_;
    public bool HasTotalCount {
      get { return hasTotalCount; }
    }
    public uint TotalCount {
      get { return totalCount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTotalCount) return false;
        foreach (global::bnet.protocol.exchange.OfferExtended element in OffersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryOffersByOrderBookResponseFieldNames;
      if (offers_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], offers_);
      }
      if (hasTotalCount) {
        output.WriteUInt32(2, field_names[1], TotalCount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.OfferExtended element in OffersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasTotalCount) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, TotalCount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryOffersByOrderBookResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOffersByOrderBookResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByOrderBookResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOffersByOrderBookResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByOrderBookResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOffersByOrderBookResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryOffersByOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryOffersByOrderBookResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOffersByOrderBookResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryOffersByOrderBookResponse MakeReadOnly() {
      offers_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryOffersByOrderBookResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryOffersByOrderBookResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryOffersByOrderBookResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryOffersByOrderBookResponse result;
      
      private QueryOffersByOrderBookResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryOffersByOrderBookResponse original = result;
          result = new QueryOffersByOrderBookResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryOffersByOrderBookResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryOffersByOrderBookResponse.Descriptor; }
      }
      
      public override QueryOffersByOrderBookResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryOffersByOrderBookResponse.DefaultInstance; }
      }
      
      public override QueryOffersByOrderBookResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryOffersByOrderBookResponse) {
          return MergeFrom((QueryOffersByOrderBookResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryOffersByOrderBookResponse other) {
        if (other == global::bnet.protocol.exchange.QueryOffersByOrderBookResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.offers_.Count != 0) {
          result.offers_.Add(other.offers_);
        }
        if (other.HasTotalCount) {
          TotalCount = other.TotalCount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryOffersByOrderBookResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryOffersByOrderBookResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.offers_, global::bnet.protocol.exchange.OfferExtended.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasTotalCount = input.ReadUInt32(ref result.totalCount_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.OfferExtended> OffersList {
        get { return PrepareBuilder().offers_; }
      }
      public int OffersCount {
        get { return result.OffersCount; }
      }
      public global::bnet.protocol.exchange.OfferExtended GetOffers(int index) {
        return result.GetOffers(index);
      }
      public Builder SetOffers(int index, global::bnet.protocol.exchange.OfferExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.offers_[index] = value;
        return this;
      }
      public Builder SetOffers(int index, global::bnet.protocol.exchange.OfferExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.offers_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOffers(global::bnet.protocol.exchange.OfferExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.offers_.Add(value);
        return this;
      }
      public Builder AddOffers(global::bnet.protocol.exchange.OfferExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.offers_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOffers(scg::IEnumerable<global::bnet.protocol.exchange.OfferExtended> values) {
        PrepareBuilder();
        result.offers_.Add(values);
        return this;
      }
      public Builder ClearOffers() {
        PrepareBuilder();
        result.offers_.Clear();
        return this;
      }
      
      public bool HasTotalCount {
        get { return result.hasTotalCount; }
      }
      public uint TotalCount {
        get { return result.TotalCount; }
        set { SetTotalCount(value); }
      }
      public Builder SetTotalCount(uint value) {
        PrepareBuilder();
        result.hasTotalCount = true;
        result.totalCount_ = value;
        return this;
      }
      public Builder ClearTotalCount() {
        PrepareBuilder();
        result.hasTotalCount = false;
        result.totalCount_ = 0;
        return this;
      }
    }
    static QueryOffersByOrderBookResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueryBidsByOrderBookRequest : pb::GeneratedMessage<QueryBidsByOrderBookRequest, QueryBidsByOrderBookRequest.Builder> {
    private QueryBidsByOrderBookRequest() { }
    private static readonly QueryBidsByOrderBookRequest defaultInstance = new QueryBidsByOrderBookRequest().MakeReadOnly();
    private static readonly string[] _queryBidsByOrderBookRequestFieldNames = new string[] { "filter", "partition_id", "status" };
    private static readonly uint[] _queryBidsByOrderBookRequestFieldTags = new uint[] { 18, 10, 24 };
    public static QueryBidsByOrderBookRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryBidsByOrderBookRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryBidsByOrderBookRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryBidsByOrderBookRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryBidsByOrderBookRequest, QueryBidsByOrderBookRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryBidsByOrderBookRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int FilterFieldNumber = 2;
    private bool hasFilter;
    private global::bnet.protocol.exchange.QueryFilterByOrderId filter_;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::bnet.protocol.exchange.QueryFilterByOrderId Filter {
      get { return filter_ ?? global::bnet.protocol.exchange.QueryFilterByOrderId.DefaultInstance; }
    }
    
    public const int StatusFieldNumber = 3;
    private bool hasStatus;
    private int status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public int Status {
      get { return status_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasFilter) return false;
        if (!hasStatus) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!Filter.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryBidsByOrderBookRequestFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[1], PartitionId);
      }
      if (hasFilter) {
        output.WriteMessage(2, field_names[0], Filter);
      }
      if (hasStatus) {
        output.WriteInt32(3, field_names[2], Status);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Filter);
        }
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeInt32Size(3, Status);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryBidsByOrderBookRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryBidsByOrderBookRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByOrderBookRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryBidsByOrderBookRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByOrderBookRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryBidsByOrderBookRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryBidsByOrderBookRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryBidsByOrderBookRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryBidsByOrderBookRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryBidsByOrderBookRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryBidsByOrderBookRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryBidsByOrderBookRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryBidsByOrderBookRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryBidsByOrderBookRequest result;
      
      private QueryBidsByOrderBookRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryBidsByOrderBookRequest original = result;
          result = new QueryBidsByOrderBookRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryBidsByOrderBookRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryBidsByOrderBookRequest.Descriptor; }
      }
      
      public override QueryBidsByOrderBookRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryBidsByOrderBookRequest.DefaultInstance; }
      }
      
      public override QueryBidsByOrderBookRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryBidsByOrderBookRequest) {
          return MergeFrom((QueryBidsByOrderBookRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryBidsByOrderBookRequest other) {
        if (other == global::bnet.protocol.exchange.QueryBidsByOrderBookRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryBidsByOrderBookRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryBidsByOrderBookRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.QueryFilterByOrderId.Builder subBuilder = global::bnet.protocol.exchange.QueryFilterByOrderId.CreateBuilder();
              if (result.hasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasStatus = input.ReadInt32(ref result.status_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasFilter {
       get { return result.hasFilter; }
      }
      public global::bnet.protocol.exchange.QueryFilterByOrderId Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryFilterByOrderId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryFilterByOrderId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::bnet.protocol.exchange.QueryFilterByOrderId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFilter &&
            result.filter_ != global::bnet.protocol.exchange.QueryFilterByOrderId.DefaultInstance) {
            result.filter_ = global::bnet.protocol.exchange.QueryFilterByOrderId.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = null;
        return this;
      }
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      public int Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(int value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
    }
    static QueryBidsByOrderBookRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueryBidsByOrderBookResponse : pb::GeneratedMessage<QueryBidsByOrderBookResponse, QueryBidsByOrderBookResponse.Builder> {
    private QueryBidsByOrderBookResponse() { }
    private static readonly QueryBidsByOrderBookResponse defaultInstance = new QueryBidsByOrderBookResponse().MakeReadOnly();
    private static readonly string[] _queryBidsByOrderBookResponseFieldNames = new string[] { "bids", "total_count" };
    private static readonly uint[] _queryBidsByOrderBookResponseFieldTags = new uint[] { 10, 16 };
    public static QueryBidsByOrderBookResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryBidsByOrderBookResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryBidsByOrderBookResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryBidsByOrderBookResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryBidsByOrderBookResponse, QueryBidsByOrderBookResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryBidsByOrderBookResponse__FieldAccessorTable; }
    }
    
    public const int BidsFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.BidExtended> bids_ = new pbc::PopsicleList<global::bnet.protocol.exchange.BidExtended>();
    public scg::IList<global::bnet.protocol.exchange.BidExtended> BidsList {
      get { return bids_; }
    }
    public int BidsCount {
      get { return bids_.Count; }
    }
    public global::bnet.protocol.exchange.BidExtended GetBids(int index) {
      return bids_[index];
    }
    
    public const int TotalCountFieldNumber = 2;
    private bool hasTotalCount;
    private uint totalCount_;
    public bool HasTotalCount {
      get { return hasTotalCount; }
    }
    public uint TotalCount {
      get { return totalCount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTotalCount) return false;
        foreach (global::bnet.protocol.exchange.BidExtended element in BidsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryBidsByOrderBookResponseFieldNames;
      if (bids_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], bids_);
      }
      if (hasTotalCount) {
        output.WriteUInt32(2, field_names[1], TotalCount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.BidExtended element in BidsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasTotalCount) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, TotalCount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryBidsByOrderBookResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryBidsByOrderBookResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByOrderBookResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryBidsByOrderBookResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByOrderBookResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryBidsByOrderBookResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryBidsByOrderBookResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryBidsByOrderBookResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryBidsByOrderBookResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryBidsByOrderBookResponse MakeReadOnly() {
      bids_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryBidsByOrderBookResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryBidsByOrderBookResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryBidsByOrderBookResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryBidsByOrderBookResponse result;
      
      private QueryBidsByOrderBookResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryBidsByOrderBookResponse original = result;
          result = new QueryBidsByOrderBookResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryBidsByOrderBookResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryBidsByOrderBookResponse.Descriptor; }
      }
      
      public override QueryBidsByOrderBookResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryBidsByOrderBookResponse.DefaultInstance; }
      }
      
      public override QueryBidsByOrderBookResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryBidsByOrderBookResponse) {
          return MergeFrom((QueryBidsByOrderBookResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryBidsByOrderBookResponse other) {
        if (other == global::bnet.protocol.exchange.QueryBidsByOrderBookResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.bids_.Count != 0) {
          result.bids_.Add(other.bids_);
        }
        if (other.HasTotalCount) {
          TotalCount = other.TotalCount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryBidsByOrderBookResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryBidsByOrderBookResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.bids_, global::bnet.protocol.exchange.BidExtended.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasTotalCount = input.ReadUInt32(ref result.totalCount_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.BidExtended> BidsList {
        get { return PrepareBuilder().bids_; }
      }
      public int BidsCount {
        get { return result.BidsCount; }
      }
      public global::bnet.protocol.exchange.BidExtended GetBids(int index) {
        return result.GetBids(index);
      }
      public Builder SetBids(int index, global::bnet.protocol.exchange.BidExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.bids_[index] = value;
        return this;
      }
      public Builder SetBids(int index, global::bnet.protocol.exchange.BidExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.bids_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBids(global::bnet.protocol.exchange.BidExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.bids_.Add(value);
        return this;
      }
      public Builder AddBids(global::bnet.protocol.exchange.BidExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.bids_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBids(scg::IEnumerable<global::bnet.protocol.exchange.BidExtended> values) {
        PrepareBuilder();
        result.bids_.Add(values);
        return this;
      }
      public Builder ClearBids() {
        PrepareBuilder();
        result.bids_.Clear();
        return this;
      }
      
      public bool HasTotalCount {
        get { return result.hasTotalCount; }
      }
      public uint TotalCount {
        get { return result.TotalCount; }
        set { SetTotalCount(value); }
      }
      public Builder SetTotalCount(uint value) {
        PrepareBuilder();
        result.hasTotalCount = true;
        result.totalCount_ = value;
        return this;
      }
      public Builder ClearTotalCount() {
        PrepareBuilder();
        result.hasTotalCount = false;
        result.totalCount_ = 0;
        return this;
      }
    }
    static QueryBidsByOrderBookResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueryOffersByAccountForItemRequest : pb::GeneratedMessage<QueryOffersByAccountForItemRequest, QueryOffersByAccountForItemRequest.Builder> {
    private QueryOffersByAccountForItemRequest() { }
    private static readonly QueryOffersByAccountForItemRequest defaultInstance = new QueryOffersByAccountForItemRequest().MakeReadOnly();
    private static readonly string[] _queryOffersByAccountForItemRequestFieldNames = new string[] { "account_for_item", "bnet_account", "filter" };
    private static readonly uint[] _queryOffersByAccountForItemRequestFieldTags = new uint[] { 10, 26, 18 };
    public static QueryOffersByAccountForItemRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryOffersByAccountForItemRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryOffersByAccountForItemRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryOffersByAccountForItemRequest, QueryOffersByAccountForItemRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemRequest__FieldAccessorTable; }
    }
    
    public const int AccountForItemFieldNumber = 1;
    private bool hasAccountForItem;
    private global::bnet.protocol.exchange.BlobFrom accountForItem_;
    public bool HasAccountForItem {
      get { return hasAccountForItem; }
    }
    public global::bnet.protocol.exchange.BlobFrom AccountForItem {
      get { return accountForItem_ ?? global::bnet.protocol.exchange.BlobFrom.DefaultInstance; }
    }
    
    public const int FilterFieldNumber = 2;
    private bool hasFilter;
    private global::bnet.protocol.exchange.QueryFilterByCreatedTime filter_;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::bnet.protocol.exchange.QueryFilterByCreatedTime Filter {
      get { return filter_ ?? global::bnet.protocol.exchange.QueryFilterByCreatedTime.DefaultInstance; }
    }
    
    public const int BnetAccountFieldNumber = 3;
    private bool hasBnetAccount;
    private global::bnet.protocol.EntityId bnetAccount_;
    public bool HasBnetAccount {
      get { return hasBnetAccount; }
    }
    public global::bnet.protocol.EntityId BnetAccount {
      get { return bnetAccount_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountForItem) return false;
        if (!hasFilter) return false;
        if (!AccountForItem.IsInitialized) return false;
        if (!Filter.IsInitialized) return false;
        if (HasBnetAccount) {
          if (!BnetAccount.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryOffersByAccountForItemRequestFieldNames;
      if (hasAccountForItem) {
        output.WriteMessage(1, field_names[0], AccountForItem);
      }
      if (hasFilter) {
        output.WriteMessage(2, field_names[2], Filter);
      }
      if (hasBnetAccount) {
        output.WriteMessage(3, field_names[1], BnetAccount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAccountForItem) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AccountForItem);
        }
        if (hasFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Filter);
        }
        if (hasBnetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, BnetAccount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryOffersByAccountForItemRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOffersByAccountForItemRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByAccountForItemRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOffersByAccountForItemRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByAccountForItemRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOffersByAccountForItemRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByAccountForItemRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryOffersByAccountForItemRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryOffersByAccountForItemRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOffersByAccountForItemRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryOffersByAccountForItemRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryOffersByAccountForItemRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryOffersByAccountForItemRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryOffersByAccountForItemRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryOffersByAccountForItemRequest result;
      
      private QueryOffersByAccountForItemRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryOffersByAccountForItemRequest original = result;
          result = new QueryOffersByAccountForItemRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryOffersByAccountForItemRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest.Descriptor; }
      }
      
      public override QueryOffersByAccountForItemRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest.DefaultInstance; }
      }
      
      public override QueryOffersByAccountForItemRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryOffersByAccountForItemRequest) {
          return MergeFrom((QueryOffersByAccountForItemRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryOffersByAccountForItemRequest other) {
        if (other == global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountForItem) {
          MergeAccountForItem(other.AccountForItem);
        }
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        if (other.HasBnetAccount) {
          MergeBnetAccount(other.BnetAccount);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryOffersByAccountForItemRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryOffersByAccountForItemRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.BlobFrom.Builder subBuilder = global::bnet.protocol.exchange.BlobFrom.CreateBuilder();
              if (result.hasAccountForItem) {
                subBuilder.MergeFrom(AccountForItem);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountForItem = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.QueryFilterByCreatedTime.Builder subBuilder = global::bnet.protocol.exchange.QueryFilterByCreatedTime.CreateBuilder();
              if (result.hasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBnetAccount) {
                subBuilder.MergeFrom(BnetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccount = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountForItem {
       get { return result.hasAccountForItem; }
      }
      public global::bnet.protocol.exchange.BlobFrom AccountForItem {
        get { return result.AccountForItem; }
        set { SetAccountForItem(value); }
      }
      public Builder SetAccountForItem(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountForItem = true;
        result.accountForItem_ = value;
        return this;
      }
      public Builder SetAccountForItem(global::bnet.protocol.exchange.BlobFrom.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountForItem = true;
        result.accountForItem_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountForItem(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountForItem &&
            result.accountForItem_ != global::bnet.protocol.exchange.BlobFrom.DefaultInstance) {
            result.accountForItem_ = global::bnet.protocol.exchange.BlobFrom.CreateBuilder(result.accountForItem_).MergeFrom(value).BuildPartial();
        } else {
          result.accountForItem_ = value;
        }
        result.hasAccountForItem = true;
        return this;
      }
      public Builder ClearAccountForItem() {
        PrepareBuilder();
        result.hasAccountForItem = false;
        result.accountForItem_ = null;
        return this;
      }
      
      public bool HasFilter {
       get { return result.hasFilter; }
      }
      public global::bnet.protocol.exchange.QueryFilterByCreatedTime Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryFilterByCreatedTime value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryFilterByCreatedTime.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::bnet.protocol.exchange.QueryFilterByCreatedTime value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFilter &&
            result.filter_ != global::bnet.protocol.exchange.QueryFilterByCreatedTime.DefaultInstance) {
            result.filter_ = global::bnet.protocol.exchange.QueryFilterByCreatedTime.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = null;
        return this;
      }
      
      public bool HasBnetAccount {
       get { return result.hasBnetAccount; }
      }
      public global::bnet.protocol.EntityId BnetAccount {
        get { return result.BnetAccount; }
        set { SetBnetAccount(value); }
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = value;
        return this;
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBnetAccount &&
            result.bnetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccount_ = value;
        }
        result.hasBnetAccount = true;
        return this;
      }
      public Builder ClearBnetAccount() {
        PrepareBuilder();
        result.hasBnetAccount = false;
        result.bnetAccount_ = null;
        return this;
      }
    }
    static QueryOffersByAccountForItemRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueryOffersByAccountForItemResponse : pb::GeneratedMessage<QueryOffersByAccountForItemResponse, QueryOffersByAccountForItemResponse.Builder> {
    private QueryOffersByAccountForItemResponse() { }
    private static readonly QueryOffersByAccountForItemResponse defaultInstance = new QueryOffersByAccountForItemResponse().MakeReadOnly();
    private static readonly string[] _queryOffersByAccountForItemResponseFieldNames = new string[] { "offers", "total_count" };
    private static readonly uint[] _queryOffersByAccountForItemResponseFieldTags = new uint[] { 10, 16 };
    public static QueryOffersByAccountForItemResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryOffersByAccountForItemResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryOffersByAccountForItemResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryOffersByAccountForItemResponse, QueryOffersByAccountForItemResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOffersByAccountForItemResponse__FieldAccessorTable; }
    }
    
    public const int OffersFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.OfferExtended> offers_ = new pbc::PopsicleList<global::bnet.protocol.exchange.OfferExtended>();
    public scg::IList<global::bnet.protocol.exchange.OfferExtended> OffersList {
      get { return offers_; }
    }
    public int OffersCount {
      get { return offers_.Count; }
    }
    public global::bnet.protocol.exchange.OfferExtended GetOffers(int index) {
      return offers_[index];
    }
    
    public const int TotalCountFieldNumber = 2;
    private bool hasTotalCount;
    private uint totalCount_;
    public bool HasTotalCount {
      get { return hasTotalCount; }
    }
    public uint TotalCount {
      get { return totalCount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTotalCount) return false;
        foreach (global::bnet.protocol.exchange.OfferExtended element in OffersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryOffersByAccountForItemResponseFieldNames;
      if (offers_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], offers_);
      }
      if (hasTotalCount) {
        output.WriteUInt32(2, field_names[1], TotalCount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.OfferExtended element in OffersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasTotalCount) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, TotalCount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryOffersByAccountForItemResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOffersByAccountForItemResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByAccountForItemResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOffersByAccountForItemResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByAccountForItemResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOffersByAccountForItemResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryOffersByAccountForItemResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryOffersByAccountForItemResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryOffersByAccountForItemResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOffersByAccountForItemResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryOffersByAccountForItemResponse MakeReadOnly() {
      offers_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryOffersByAccountForItemResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryOffersByAccountForItemResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryOffersByAccountForItemResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryOffersByAccountForItemResponse result;
      
      private QueryOffersByAccountForItemResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryOffersByAccountForItemResponse original = result;
          result = new QueryOffersByAccountForItemResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryOffersByAccountForItemResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse.Descriptor; }
      }
      
      public override QueryOffersByAccountForItemResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse.DefaultInstance; }
      }
      
      public override QueryOffersByAccountForItemResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryOffersByAccountForItemResponse) {
          return MergeFrom((QueryOffersByAccountForItemResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryOffersByAccountForItemResponse other) {
        if (other == global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.offers_.Count != 0) {
          result.offers_.Add(other.offers_);
        }
        if (other.HasTotalCount) {
          TotalCount = other.TotalCount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryOffersByAccountForItemResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryOffersByAccountForItemResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.offers_, global::bnet.protocol.exchange.OfferExtended.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasTotalCount = input.ReadUInt32(ref result.totalCount_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.OfferExtended> OffersList {
        get { return PrepareBuilder().offers_; }
      }
      public int OffersCount {
        get { return result.OffersCount; }
      }
      public global::bnet.protocol.exchange.OfferExtended GetOffers(int index) {
        return result.GetOffers(index);
      }
      public Builder SetOffers(int index, global::bnet.protocol.exchange.OfferExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.offers_[index] = value;
        return this;
      }
      public Builder SetOffers(int index, global::bnet.protocol.exchange.OfferExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.offers_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOffers(global::bnet.protocol.exchange.OfferExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.offers_.Add(value);
        return this;
      }
      public Builder AddOffers(global::bnet.protocol.exchange.OfferExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.offers_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOffers(scg::IEnumerable<global::bnet.protocol.exchange.OfferExtended> values) {
        PrepareBuilder();
        result.offers_.Add(values);
        return this;
      }
      public Builder ClearOffers() {
        PrepareBuilder();
        result.offers_.Clear();
        return this;
      }
      
      public bool HasTotalCount {
        get { return result.hasTotalCount; }
      }
      public uint TotalCount {
        get { return result.TotalCount; }
        set { SetTotalCount(value); }
      }
      public Builder SetTotalCount(uint value) {
        PrepareBuilder();
        result.hasTotalCount = true;
        result.totalCount_ = value;
        return this;
      }
      public Builder ClearTotalCount() {
        PrepareBuilder();
        result.hasTotalCount = false;
        result.totalCount_ = 0;
        return this;
      }
    }
    static QueryOffersByAccountForItemResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueryBidsByAccountForItemRequest : pb::GeneratedMessage<QueryBidsByAccountForItemRequest, QueryBidsByAccountForItemRequest.Builder> {
    private QueryBidsByAccountForItemRequest() { }
    private static readonly QueryBidsByAccountForItemRequest defaultInstance = new QueryBidsByAccountForItemRequest().MakeReadOnly();
    private static readonly string[] _queryBidsByAccountForItemRequestFieldNames = new string[] { "account_for_item", "bnet_account", "filter" };
    private static readonly uint[] _queryBidsByAccountForItemRequestFieldTags = new uint[] { 10, 26, 18 };
    public static QueryBidsByAccountForItemRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryBidsByAccountForItemRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryBidsByAccountForItemRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryBidsByAccountForItemRequest, QueryBidsByAccountForItemRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemRequest__FieldAccessorTable; }
    }
    
    public const int AccountForItemFieldNumber = 1;
    private bool hasAccountForItem;
    private global::bnet.protocol.exchange.BlobFrom accountForItem_;
    public bool HasAccountForItem {
      get { return hasAccountForItem; }
    }
    public global::bnet.protocol.exchange.BlobFrom AccountForItem {
      get { return accountForItem_ ?? global::bnet.protocol.exchange.BlobFrom.DefaultInstance; }
    }
    
    public const int FilterFieldNumber = 2;
    private bool hasFilter;
    private global::bnet.protocol.exchange.QueryFilterByCreatedTime filter_;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::bnet.protocol.exchange.QueryFilterByCreatedTime Filter {
      get { return filter_ ?? global::bnet.protocol.exchange.QueryFilterByCreatedTime.DefaultInstance; }
    }
    
    public const int BnetAccountFieldNumber = 3;
    private bool hasBnetAccount;
    private global::bnet.protocol.EntityId bnetAccount_;
    public bool HasBnetAccount {
      get { return hasBnetAccount; }
    }
    public global::bnet.protocol.EntityId BnetAccount {
      get { return bnetAccount_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountForItem) return false;
        if (!hasFilter) return false;
        if (!AccountForItem.IsInitialized) return false;
        if (!Filter.IsInitialized) return false;
        if (HasBnetAccount) {
          if (!BnetAccount.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryBidsByAccountForItemRequestFieldNames;
      if (hasAccountForItem) {
        output.WriteMessage(1, field_names[0], AccountForItem);
      }
      if (hasFilter) {
        output.WriteMessage(2, field_names[2], Filter);
      }
      if (hasBnetAccount) {
        output.WriteMessage(3, field_names[1], BnetAccount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAccountForItem) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AccountForItem);
        }
        if (hasFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Filter);
        }
        if (hasBnetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, BnetAccount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryBidsByAccountForItemRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryBidsByAccountForItemRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByAccountForItemRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryBidsByAccountForItemRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByAccountForItemRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryBidsByAccountForItemRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByAccountForItemRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryBidsByAccountForItemRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryBidsByAccountForItemRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryBidsByAccountForItemRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryBidsByAccountForItemRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryBidsByAccountForItemRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryBidsByAccountForItemRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryBidsByAccountForItemRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryBidsByAccountForItemRequest result;
      
      private QueryBidsByAccountForItemRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryBidsByAccountForItemRequest original = result;
          result = new QueryBidsByAccountForItemRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryBidsByAccountForItemRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest.Descriptor; }
      }
      
      public override QueryBidsByAccountForItemRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest.DefaultInstance; }
      }
      
      public override QueryBidsByAccountForItemRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryBidsByAccountForItemRequest) {
          return MergeFrom((QueryBidsByAccountForItemRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryBidsByAccountForItemRequest other) {
        if (other == global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountForItem) {
          MergeAccountForItem(other.AccountForItem);
        }
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        if (other.HasBnetAccount) {
          MergeBnetAccount(other.BnetAccount);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryBidsByAccountForItemRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryBidsByAccountForItemRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.BlobFrom.Builder subBuilder = global::bnet.protocol.exchange.BlobFrom.CreateBuilder();
              if (result.hasAccountForItem) {
                subBuilder.MergeFrom(AccountForItem);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountForItem = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.QueryFilterByCreatedTime.Builder subBuilder = global::bnet.protocol.exchange.QueryFilterByCreatedTime.CreateBuilder();
              if (result.hasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBnetAccount) {
                subBuilder.MergeFrom(BnetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccount = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountForItem {
       get { return result.hasAccountForItem; }
      }
      public global::bnet.protocol.exchange.BlobFrom AccountForItem {
        get { return result.AccountForItem; }
        set { SetAccountForItem(value); }
      }
      public Builder SetAccountForItem(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountForItem = true;
        result.accountForItem_ = value;
        return this;
      }
      public Builder SetAccountForItem(global::bnet.protocol.exchange.BlobFrom.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountForItem = true;
        result.accountForItem_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountForItem(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountForItem &&
            result.accountForItem_ != global::bnet.protocol.exchange.BlobFrom.DefaultInstance) {
            result.accountForItem_ = global::bnet.protocol.exchange.BlobFrom.CreateBuilder(result.accountForItem_).MergeFrom(value).BuildPartial();
        } else {
          result.accountForItem_ = value;
        }
        result.hasAccountForItem = true;
        return this;
      }
      public Builder ClearAccountForItem() {
        PrepareBuilder();
        result.hasAccountForItem = false;
        result.accountForItem_ = null;
        return this;
      }
      
      public bool HasFilter {
       get { return result.hasFilter; }
      }
      public global::bnet.protocol.exchange.QueryFilterByCreatedTime Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryFilterByCreatedTime value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryFilterByCreatedTime.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::bnet.protocol.exchange.QueryFilterByCreatedTime value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFilter &&
            result.filter_ != global::bnet.protocol.exchange.QueryFilterByCreatedTime.DefaultInstance) {
            result.filter_ = global::bnet.protocol.exchange.QueryFilterByCreatedTime.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = null;
        return this;
      }
      
      public bool HasBnetAccount {
       get { return result.hasBnetAccount; }
      }
      public global::bnet.protocol.EntityId BnetAccount {
        get { return result.BnetAccount; }
        set { SetBnetAccount(value); }
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = value;
        return this;
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBnetAccount &&
            result.bnetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccount_ = value;
        }
        result.hasBnetAccount = true;
        return this;
      }
      public Builder ClearBnetAccount() {
        PrepareBuilder();
        result.hasBnetAccount = false;
        result.bnetAccount_ = null;
        return this;
      }
    }
    static QueryBidsByAccountForItemRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueryBidsByAccountForItemResponse : pb::GeneratedMessage<QueryBidsByAccountForItemResponse, QueryBidsByAccountForItemResponse.Builder> {
    private QueryBidsByAccountForItemResponse() { }
    private static readonly QueryBidsByAccountForItemResponse defaultInstance = new QueryBidsByAccountForItemResponse().MakeReadOnly();
    private static readonly string[] _queryBidsByAccountForItemResponseFieldNames = new string[] { "bids", "total_count" };
    private static readonly uint[] _queryBidsByAccountForItemResponseFieldTags = new uint[] { 10, 16 };
    public static QueryBidsByAccountForItemResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryBidsByAccountForItemResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryBidsByAccountForItemResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryBidsByAccountForItemResponse, QueryBidsByAccountForItemResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryBidsByAccountForItemResponse__FieldAccessorTable; }
    }
    
    public const int BidsFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.BidExtended> bids_ = new pbc::PopsicleList<global::bnet.protocol.exchange.BidExtended>();
    public scg::IList<global::bnet.protocol.exchange.BidExtended> BidsList {
      get { return bids_; }
    }
    public int BidsCount {
      get { return bids_.Count; }
    }
    public global::bnet.protocol.exchange.BidExtended GetBids(int index) {
      return bids_[index];
    }
    
    public const int TotalCountFieldNumber = 2;
    private bool hasTotalCount;
    private uint totalCount_;
    public bool HasTotalCount {
      get { return hasTotalCount; }
    }
    public uint TotalCount {
      get { return totalCount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTotalCount) return false;
        foreach (global::bnet.protocol.exchange.BidExtended element in BidsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryBidsByAccountForItemResponseFieldNames;
      if (bids_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], bids_);
      }
      if (hasTotalCount) {
        output.WriteUInt32(2, field_names[1], TotalCount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.BidExtended element in BidsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasTotalCount) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, TotalCount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryBidsByAccountForItemResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryBidsByAccountForItemResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByAccountForItemResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryBidsByAccountForItemResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByAccountForItemResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryBidsByAccountForItemResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryBidsByAccountForItemResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryBidsByAccountForItemResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryBidsByAccountForItemResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryBidsByAccountForItemResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryBidsByAccountForItemResponse MakeReadOnly() {
      bids_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryBidsByAccountForItemResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryBidsByAccountForItemResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryBidsByAccountForItemResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryBidsByAccountForItemResponse result;
      
      private QueryBidsByAccountForItemResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryBidsByAccountForItemResponse original = result;
          result = new QueryBidsByAccountForItemResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryBidsByAccountForItemResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse.Descriptor; }
      }
      
      public override QueryBidsByAccountForItemResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse.DefaultInstance; }
      }
      
      public override QueryBidsByAccountForItemResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryBidsByAccountForItemResponse) {
          return MergeFrom((QueryBidsByAccountForItemResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryBidsByAccountForItemResponse other) {
        if (other == global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.bids_.Count != 0) {
          result.bids_.Add(other.bids_);
        }
        if (other.HasTotalCount) {
          TotalCount = other.TotalCount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryBidsByAccountForItemResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryBidsByAccountForItemResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.bids_, global::bnet.protocol.exchange.BidExtended.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasTotalCount = input.ReadUInt32(ref result.totalCount_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.BidExtended> BidsList {
        get { return PrepareBuilder().bids_; }
      }
      public int BidsCount {
        get { return result.BidsCount; }
      }
      public global::bnet.protocol.exchange.BidExtended GetBids(int index) {
        return result.GetBids(index);
      }
      public Builder SetBids(int index, global::bnet.protocol.exchange.BidExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.bids_[index] = value;
        return this;
      }
      public Builder SetBids(int index, global::bnet.protocol.exchange.BidExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.bids_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBids(global::bnet.protocol.exchange.BidExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.bids_.Add(value);
        return this;
      }
      public Builder AddBids(global::bnet.protocol.exchange.BidExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.bids_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBids(scg::IEnumerable<global::bnet.protocol.exchange.BidExtended> values) {
        PrepareBuilder();
        result.bids_.Add(values);
        return this;
      }
      public Builder ClearBids() {
        PrepareBuilder();
        result.bids_.Clear();
        return this;
      }
      
      public bool HasTotalCount {
        get { return result.hasTotalCount; }
      }
      public uint TotalCount {
        get { return result.TotalCount; }
        set { SetTotalCount(value); }
      }
      public Builder SetTotalCount(uint value) {
        PrepareBuilder();
        result.hasTotalCount = true;
        result.totalCount_ = value;
        return this;
      }
      public Builder ClearTotalCount() {
        PrepareBuilder();
        result.hasTotalCount = false;
        result.totalCount_ = 0;
        return this;
      }
    }
    static QueryBidsByAccountForItemResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueryOrderBooksSummaryRequest : pb::GeneratedMessage<QueryOrderBooksSummaryRequest, QueryOrderBooksSummaryRequest.Builder> {
    private QueryOrderBooksSummaryRequest() { }
    private static readonly QueryOrderBooksSummaryRequest defaultInstance = new QueryOrderBooksSummaryRequest().MakeReadOnly();
    private static readonly string[] _queryOrderBooksSummaryRequestFieldNames = new string[] { "handles" };
    private static readonly uint[] _queryOrderBooksSummaryRequestFieldTags = new uint[] { 10 };
    public static QueryOrderBooksSummaryRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryOrderBooksSummaryRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryOrderBooksSummaryRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryOrderBooksSummaryRequest, QueryOrderBooksSummaryRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryRequest__FieldAccessorTable; }
    }
    
    public const int HandlesFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.OrderBookHandle> handles_ = new pbc::PopsicleList<global::bnet.protocol.exchange.OrderBookHandle>();
    public scg::IList<global::bnet.protocol.exchange.OrderBookHandle> HandlesList {
      get { return handles_; }
    }
    public int HandlesCount {
      get { return handles_.Count; }
    }
    public global::bnet.protocol.exchange.OrderBookHandle GetHandles(int index) {
      return handles_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.exchange.OrderBookHandle element in HandlesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryOrderBooksSummaryRequestFieldNames;
      if (handles_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], handles_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.OrderBookHandle element in HandlesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryOrderBooksSummaryRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOrderBooksSummaryRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOrderBooksSummaryRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOrderBooksSummaryRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOrderBooksSummaryRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOrderBooksSummaryRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryOrderBooksSummaryRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryOrderBooksSummaryRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryOrderBooksSummaryRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOrderBooksSummaryRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryOrderBooksSummaryRequest MakeReadOnly() {
      handles_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryOrderBooksSummaryRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryOrderBooksSummaryRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryOrderBooksSummaryRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryOrderBooksSummaryRequest result;
      
      private QueryOrderBooksSummaryRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryOrderBooksSummaryRequest original = result;
          result = new QueryOrderBooksSummaryRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryOrderBooksSummaryRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest.Descriptor; }
      }
      
      public override QueryOrderBooksSummaryRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest.DefaultInstance; }
      }
      
      public override QueryOrderBooksSummaryRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryOrderBooksSummaryRequest) {
          return MergeFrom((QueryOrderBooksSummaryRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryOrderBooksSummaryRequest other) {
        if (other == global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.handles_.Count != 0) {
          result.handles_.Add(other.handles_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryOrderBooksSummaryRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryOrderBooksSummaryRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.handles_, global::bnet.protocol.exchange.OrderBookHandle.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.OrderBookHandle> HandlesList {
        get { return PrepareBuilder().handles_; }
      }
      public int HandlesCount {
        get { return result.HandlesCount; }
      }
      public global::bnet.protocol.exchange.OrderBookHandle GetHandles(int index) {
        return result.GetHandles(index);
      }
      public Builder SetHandles(int index, global::bnet.protocol.exchange.OrderBookHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.handles_[index] = value;
        return this;
      }
      public Builder SetHandles(int index, global::bnet.protocol.exchange.OrderBookHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.handles_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddHandles(global::bnet.protocol.exchange.OrderBookHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.handles_.Add(value);
        return this;
      }
      public Builder AddHandles(global::bnet.protocol.exchange.OrderBookHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.handles_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeHandles(scg::IEnumerable<global::bnet.protocol.exchange.OrderBookHandle> values) {
        PrepareBuilder();
        result.handles_.Add(values);
        return this;
      }
      public Builder ClearHandles() {
        PrepareBuilder();
        result.handles_.Clear();
        return this;
      }
    }
    static QueryOrderBooksSummaryRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueryOrderBooksSummaryResponse : pb::GeneratedMessage<QueryOrderBooksSummaryResponse, QueryOrderBooksSummaryResponse.Builder> {
    private QueryOrderBooksSummaryResponse() { }
    private static readonly QueryOrderBooksSummaryResponse defaultInstance = new QueryOrderBooksSummaryResponse().MakeReadOnly();
    private static readonly string[] _queryOrderBooksSummaryResponseFieldNames = new string[] { "order_books" };
    private static readonly uint[] _queryOrderBooksSummaryResponseFieldTags = new uint[] { 10 };
    public static QueryOrderBooksSummaryResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryOrderBooksSummaryResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryOrderBooksSummaryResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryOrderBooksSummaryResponse, QueryOrderBooksSummaryResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOrderBooksSummaryResponse__FieldAccessorTable; }
    }
    
    public const int OrderBooksFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.OrderBookSummary> orderBooks_ = new pbc::PopsicleList<global::bnet.protocol.exchange.OrderBookSummary>();
    public scg::IList<global::bnet.protocol.exchange.OrderBookSummary> OrderBooksList {
      get { return orderBooks_; }
    }
    public int OrderBooksCount {
      get { return orderBooks_.Count; }
    }
    public global::bnet.protocol.exchange.OrderBookSummary GetOrderBooks(int index) {
      return orderBooks_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.exchange.OrderBookSummary element in OrderBooksList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryOrderBooksSummaryResponseFieldNames;
      if (orderBooks_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], orderBooks_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.OrderBookSummary element in OrderBooksList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryOrderBooksSummaryResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOrderBooksSummaryResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOrderBooksSummaryResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOrderBooksSummaryResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOrderBooksSummaryResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOrderBooksSummaryResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryOrderBooksSummaryResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryOrderBooksSummaryResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryOrderBooksSummaryResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOrderBooksSummaryResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryOrderBooksSummaryResponse MakeReadOnly() {
      orderBooks_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryOrderBooksSummaryResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryOrderBooksSummaryResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryOrderBooksSummaryResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryOrderBooksSummaryResponse result;
      
      private QueryOrderBooksSummaryResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryOrderBooksSummaryResponse original = result;
          result = new QueryOrderBooksSummaryResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryOrderBooksSummaryResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse.Descriptor; }
      }
      
      public override QueryOrderBooksSummaryResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse.DefaultInstance; }
      }
      
      public override QueryOrderBooksSummaryResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryOrderBooksSummaryResponse) {
          return MergeFrom((QueryOrderBooksSummaryResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryOrderBooksSummaryResponse other) {
        if (other == global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.orderBooks_.Count != 0) {
          result.orderBooks_.Add(other.orderBooks_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryOrderBooksSummaryResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryOrderBooksSummaryResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.orderBooks_, global::bnet.protocol.exchange.OrderBookSummary.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.OrderBookSummary> OrderBooksList {
        get { return PrepareBuilder().orderBooks_; }
      }
      public int OrderBooksCount {
        get { return result.OrderBooksCount; }
      }
      public global::bnet.protocol.exchange.OrderBookSummary GetOrderBooks(int index) {
        return result.GetOrderBooks(index);
      }
      public Builder SetOrderBooks(int index, global::bnet.protocol.exchange.OrderBookSummary value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.orderBooks_[index] = value;
        return this;
      }
      public Builder SetOrderBooks(int index, global::bnet.protocol.exchange.OrderBookSummary.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.orderBooks_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOrderBooks(global::bnet.protocol.exchange.OrderBookSummary value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.orderBooks_.Add(value);
        return this;
      }
      public Builder AddOrderBooks(global::bnet.protocol.exchange.OrderBookSummary.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.orderBooks_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOrderBooks(scg::IEnumerable<global::bnet.protocol.exchange.OrderBookSummary> values) {
        PrepareBuilder();
        result.orderBooks_.Add(values);
        return this;
      }
      public Builder ClearOrderBooks() {
        PrepareBuilder();
        result.orderBooks_.Clear();
        return this;
      }
    }
    static QueryOrderBooksSummaryResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeOrderBookStatusChangeRequest : pb::GeneratedMessage<SubscribeOrderBookStatusChangeRequest, SubscribeOrderBookStatusChangeRequest.Builder> {
    private SubscribeOrderBookStatusChangeRequest() { }
    private static readonly SubscribeOrderBookStatusChangeRequest defaultInstance = new SubscribeOrderBookStatusChangeRequest().MakeReadOnly();
    private static readonly string[] _subscribeOrderBookStatusChangeRequestFieldNames = new string[] { "bootstrap", "bootstrap_oldest_created_time", "currency", "max_partition_id", "min_partition_id", "object_id", "program", "specialist", "status" };
    private static readonly uint[] _subscribeOrderBookStatusChangeRequestFieldTags = new uint[] { 64, 72, 50, 26, 18, 8, 37, 56, 40 };
    public static SubscribeOrderBookStatusChangeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeOrderBookStatusChangeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeOrderBookStatusChangeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_SubscribeOrderBookStatusChangeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeOrderBookStatusChangeRequest, SubscribeOrderBookStatusChangeRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_SubscribeOrderBookStatusChangeRequest__FieldAccessorTable; }
    }
    
    public const int ObjectIdFieldNumber = 1;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public const int MinPartitionIdFieldNumber = 2;
    private bool hasMinPartitionId;
    private global::bnet.protocol.exchange.PartitionId minPartitionId_;
    public bool HasMinPartitionId {
      get { return hasMinPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId MinPartitionId {
      get { return minPartitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int MaxPartitionIdFieldNumber = 3;
    private bool hasMaxPartitionId;
    private global::bnet.protocol.exchange.PartitionId maxPartitionId_;
    public bool HasMaxPartitionId {
      get { return hasMaxPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId MaxPartitionId {
      get { return maxPartitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int ProgramFieldNumber = 4;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int StatusFieldNumber = 5;
    private bool hasStatus;
    private int status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public int Status {
      get { return status_; }
    }
    
    public const int CurrencyFieldNumber = 6;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int SpecialistFieldNumber = 7;
    private bool hasSpecialist;
    private int specialist_;
    public bool HasSpecialist {
      get { return hasSpecialist; }
    }
    public int Specialist {
      get { return specialist_; }
    }
    
    public const int BootstrapFieldNumber = 8;
    private bool hasBootstrap;
    private bool bootstrap_;
    public bool HasBootstrap {
      get { return hasBootstrap; }
    }
    public bool Bootstrap {
      get { return bootstrap_; }
    }
    
    public const int BootstrapOldestCreatedTimeFieldNumber = 9;
    private bool hasBootstrapOldestCreatedTime;
    private ulong bootstrapOldestCreatedTime_;
    public bool HasBootstrapOldestCreatedTime {
      get { return hasBootstrapOldestCreatedTime; }
    }
    public ulong BootstrapOldestCreatedTime {
      get { return bootstrapOldestCreatedTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasObjectId) return false;
        if (!hasMinPartitionId) return false;
        if (!hasMaxPartitionId) return false;
        if (!hasProgram) return false;
        if (!hasStatus) return false;
        if (!hasCurrency) return false;
        if (!hasSpecialist) return false;
        if (!MinPartitionId.IsInitialized) return false;
        if (!MaxPartitionId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeOrderBookStatusChangeRequestFieldNames;
      if (hasObjectId) {
        output.WriteUInt64(1, field_names[5], ObjectId);
      }
      if (hasMinPartitionId) {
        output.WriteMessage(2, field_names[4], MinPartitionId);
      }
      if (hasMaxPartitionId) {
        output.WriteMessage(3, field_names[3], MaxPartitionId);
      }
      if (hasProgram) {
        output.WriteFixed32(4, field_names[6], Program);
      }
      if (hasStatus) {
        output.WriteInt32(5, field_names[8], Status);
      }
      if (hasCurrency) {
        output.WriteString(6, field_names[2], Currency);
      }
      if (hasSpecialist) {
        output.WriteInt32(7, field_names[7], Specialist);
      }
      if (hasBootstrap) {
        output.WriteBool(8, field_names[0], Bootstrap);
      }
      if (hasBootstrapOldestCreatedTime) {
        output.WriteUInt64(9, field_names[1], BootstrapOldestCreatedTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, ObjectId);
        }
        if (hasMinPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, MinPartitionId);
        }
        if (hasMaxPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, MaxPartitionId);
        }
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeFixed32Size(4, Program);
        }
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, Status);
        }
        if (hasCurrency) {
          size += pb::CodedOutputStream.ComputeStringSize(6, Currency);
        }
        if (hasSpecialist) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, Specialist);
        }
        if (hasBootstrap) {
          size += pb::CodedOutputStream.ComputeBoolSize(8, Bootstrap);
        }
        if (hasBootstrapOldestCreatedTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(9, BootstrapOldestCreatedTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeOrderBookStatusChangeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeOrderBookStatusChangeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeOrderBookStatusChangeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeOrderBookStatusChangeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeOrderBookStatusChangeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeOrderBookStatusChangeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeOrderBookStatusChangeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeOrderBookStatusChangeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeOrderBookStatusChangeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeOrderBookStatusChangeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeOrderBookStatusChangeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeOrderBookStatusChangeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeOrderBookStatusChangeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeOrderBookStatusChangeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeOrderBookStatusChangeRequest result;
      
      private SubscribeOrderBookStatusChangeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeOrderBookStatusChangeRequest original = result;
          result = new SubscribeOrderBookStatusChangeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeOrderBookStatusChangeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest.Descriptor; }
      }
      
      public override SubscribeOrderBookStatusChangeRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest.DefaultInstance; }
      }
      
      public override SubscribeOrderBookStatusChangeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeOrderBookStatusChangeRequest) {
          return MergeFrom((SubscribeOrderBookStatusChangeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeOrderBookStatusChangeRequest other) {
        if (other == global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        if (other.HasMinPartitionId) {
          MergeMinPartitionId(other.MinPartitionId);
        }
        if (other.HasMaxPartitionId) {
          MergeMaxPartitionId(other.MaxPartitionId);
        }
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasSpecialist) {
          Specialist = other.Specialist;
        }
        if (other.HasBootstrap) {
          Bootstrap = other.Bootstrap;
        }
        if (other.HasBootstrapOldestCreatedTime) {
          BootstrapOldestCreatedTime = other.BootstrapOldestCreatedTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeOrderBookStatusChangeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeOrderBookStatusChangeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasMinPartitionId) {
                subBuilder.MergeFrom(MinPartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MinPartitionId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasMaxPartitionId) {
                subBuilder.MergeFrom(MaxPartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MaxPartitionId = subBuilder.BuildPartial();
              break;
            }
            case 37: {
              result.hasProgram = input.ReadFixed32(ref result.program_);
              break;
            }
            case 40: {
              result.hasStatus = input.ReadInt32(ref result.status_);
              break;
            }
            case 50: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
            case 56: {
              result.hasSpecialist = input.ReadInt32(ref result.specialist_);
              break;
            }
            case 64: {
              result.hasBootstrap = input.ReadBool(ref result.bootstrap_);
              break;
            }
            case 72: {
              result.hasBootstrapOldestCreatedTime = input.ReadUInt64(ref result.bootstrapOldestCreatedTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
      
      public bool HasMinPartitionId {
       get { return result.hasMinPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId MinPartitionId {
        get { return result.MinPartitionId; }
        set { SetMinPartitionId(value); }
      }
      public Builder SetMinPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMinPartitionId = true;
        result.minPartitionId_ = value;
        return this;
      }
      public Builder SetMinPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMinPartitionId = true;
        result.minPartitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMinPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMinPartitionId &&
            result.minPartitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.minPartitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.minPartitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.minPartitionId_ = value;
        }
        result.hasMinPartitionId = true;
        return this;
      }
      public Builder ClearMinPartitionId() {
        PrepareBuilder();
        result.hasMinPartitionId = false;
        result.minPartitionId_ = null;
        return this;
      }
      
      public bool HasMaxPartitionId {
       get { return result.hasMaxPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId MaxPartitionId {
        get { return result.MaxPartitionId; }
        set { SetMaxPartitionId(value); }
      }
      public Builder SetMaxPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMaxPartitionId = true;
        result.maxPartitionId_ = value;
        return this;
      }
      public Builder SetMaxPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMaxPartitionId = true;
        result.maxPartitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMaxPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMaxPartitionId &&
            result.maxPartitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.maxPartitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.maxPartitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.maxPartitionId_ = value;
        }
        result.hasMaxPartitionId = true;
        return this;
      }
      public Builder ClearMaxPartitionId() {
        PrepareBuilder();
        result.hasMaxPartitionId = false;
        result.maxPartitionId_ = null;
        return this;
      }
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      public int Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(int value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        PrepareBuilder();
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasSpecialist {
        get { return result.hasSpecialist; }
      }
      public int Specialist {
        get { return result.Specialist; }
        set { SetSpecialist(value); }
      }
      public Builder SetSpecialist(int value) {
        PrepareBuilder();
        result.hasSpecialist = true;
        result.specialist_ = value;
        return this;
      }
      public Builder ClearSpecialist() {
        PrepareBuilder();
        result.hasSpecialist = false;
        result.specialist_ = 0;
        return this;
      }
      
      public bool HasBootstrap {
        get { return result.hasBootstrap; }
      }
      public bool Bootstrap {
        get { return result.Bootstrap; }
        set { SetBootstrap(value); }
      }
      public Builder SetBootstrap(bool value) {
        PrepareBuilder();
        result.hasBootstrap = true;
        result.bootstrap_ = value;
        return this;
      }
      public Builder ClearBootstrap() {
        PrepareBuilder();
        result.hasBootstrap = false;
        result.bootstrap_ = false;
        return this;
      }
      
      public bool HasBootstrapOldestCreatedTime {
        get { return result.hasBootstrapOldestCreatedTime; }
      }
      public ulong BootstrapOldestCreatedTime {
        get { return result.BootstrapOldestCreatedTime; }
        set { SetBootstrapOldestCreatedTime(value); }
      }
      public Builder SetBootstrapOldestCreatedTime(ulong value) {
        PrepareBuilder();
        result.hasBootstrapOldestCreatedTime = true;
        result.bootstrapOldestCreatedTime_ = value;
        return this;
      }
      public Builder ClearBootstrapOldestCreatedTime() {
        PrepareBuilder();
        result.hasBootstrapOldestCreatedTime = false;
        result.bootstrapOldestCreatedTime_ = 0UL;
        return this;
      }
    }
    static SubscribeOrderBookStatusChangeRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnsubscribeOrderBookStatusChangeRequest : pb::GeneratedMessage<UnsubscribeOrderBookStatusChangeRequest, UnsubscribeOrderBookStatusChangeRequest.Builder> {
    private UnsubscribeOrderBookStatusChangeRequest() { }
    private static readonly UnsubscribeOrderBookStatusChangeRequest defaultInstance = new UnsubscribeOrderBookStatusChangeRequest().MakeReadOnly();
    private static readonly string[] _unsubscribeOrderBookStatusChangeRequestFieldNames = new string[] {  };
    private static readonly uint[] _unsubscribeOrderBookStatusChangeRequestFieldTags = new uint[] {  };
    public static UnsubscribeOrderBookStatusChangeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnsubscribeOrderBookStatusChangeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnsubscribeOrderBookStatusChangeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_UnsubscribeOrderBookStatusChangeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnsubscribeOrderBookStatusChangeRequest, UnsubscribeOrderBookStatusChangeRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_UnsubscribeOrderBookStatusChangeRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unsubscribeOrderBookStatusChangeRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnsubscribeOrderBookStatusChangeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeOrderBookStatusChangeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeOrderBookStatusChangeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeOrderBookStatusChangeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeOrderBookStatusChangeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeOrderBookStatusChangeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeOrderBookStatusChangeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnsubscribeOrderBookStatusChangeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnsubscribeOrderBookStatusChangeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeOrderBookStatusChangeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnsubscribeOrderBookStatusChangeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnsubscribeOrderBookStatusChangeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnsubscribeOrderBookStatusChangeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnsubscribeOrderBookStatusChangeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnsubscribeOrderBookStatusChangeRequest result;
      
      private UnsubscribeOrderBookStatusChangeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnsubscribeOrderBookStatusChangeRequest original = result;
          result = new UnsubscribeOrderBookStatusChangeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnsubscribeOrderBookStatusChangeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest.Descriptor; }
      }
      
      public override UnsubscribeOrderBookStatusChangeRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest.DefaultInstance; }
      }
      
      public override UnsubscribeOrderBookStatusChangeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnsubscribeOrderBookStatusChangeRequest) {
          return MergeFrom((UnsubscribeOrderBookStatusChangeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnsubscribeOrderBookStatusChangeRequest other) {
        if (other == global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unsubscribeOrderBookStatusChangeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unsubscribeOrderBookStatusChangeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UnsubscribeOrderBookStatusChangeRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeOrderUpdateRequest : pb::GeneratedMessage<SubscribeOrderUpdateRequest, SubscribeOrderUpdateRequest.Builder> {
    private SubscribeOrderUpdateRequest() { }
    private static readonly SubscribeOrderUpdateRequest defaultInstance = new SubscribeOrderUpdateRequest().MakeReadOnly();
    private static readonly string[] _subscribeOrderUpdateRequestFieldNames = new string[] { "agent_id", "object_id" };
    private static readonly uint[] _subscribeOrderUpdateRequestFieldTags = new uint[] { 10, 16 };
    public static SubscribeOrderUpdateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeOrderUpdateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeOrderUpdateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_SubscribeOrderUpdateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeOrderUpdateRequest, SubscribeOrderUpdateRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_SubscribeOrderUpdateRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ObjectIdFieldNumber = 2;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAgentId) return false;
        if (!hasObjectId) return false;
        if (!AgentId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeOrderUpdateRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasObjectId) {
        output.WriteUInt64(2, field_names[1], ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeOrderUpdateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeOrderUpdateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeOrderUpdateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeOrderUpdateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeOrderUpdateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeOrderUpdateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeOrderUpdateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeOrderUpdateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeOrderUpdateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeOrderUpdateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeOrderUpdateRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeOrderUpdateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeOrderUpdateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeOrderUpdateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeOrderUpdateRequest result;
      
      private SubscribeOrderUpdateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeOrderUpdateRequest original = result;
          result = new SubscribeOrderUpdateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeOrderUpdateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.SubscribeOrderUpdateRequest.Descriptor; }
      }
      
      public override SubscribeOrderUpdateRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.SubscribeOrderUpdateRequest.DefaultInstance; }
      }
      
      public override SubscribeOrderUpdateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeOrderUpdateRequest) {
          return MergeFrom((SubscribeOrderUpdateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeOrderUpdateRequest other) {
        if (other == global::bnet.protocol.exchange.SubscribeOrderUpdateRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeOrderUpdateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeOrderUpdateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static SubscribeOrderUpdateRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnsubscribeOrderUpdateRequest : pb::GeneratedMessage<UnsubscribeOrderUpdateRequest, UnsubscribeOrderUpdateRequest.Builder> {
    private UnsubscribeOrderUpdateRequest() { }
    private static readonly UnsubscribeOrderUpdateRequest defaultInstance = new UnsubscribeOrderUpdateRequest().MakeReadOnly();
    private static readonly string[] _unsubscribeOrderUpdateRequestFieldNames = new string[] { "agent_id", "object_id" };
    private static readonly uint[] _unsubscribeOrderUpdateRequestFieldTags = new uint[] { 10, 16 };
    public static UnsubscribeOrderUpdateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnsubscribeOrderUpdateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnsubscribeOrderUpdateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_UnsubscribeOrderUpdateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnsubscribeOrderUpdateRequest, UnsubscribeOrderUpdateRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_UnsubscribeOrderUpdateRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ObjectIdFieldNumber = 2;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAgentId) return false;
        if (!hasObjectId) return false;
        if (!AgentId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unsubscribeOrderUpdateRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasObjectId) {
        output.WriteUInt64(2, field_names[1], ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnsubscribeOrderUpdateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeOrderUpdateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeOrderUpdateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeOrderUpdateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeOrderUpdateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeOrderUpdateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeOrderUpdateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnsubscribeOrderUpdateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnsubscribeOrderUpdateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeOrderUpdateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnsubscribeOrderUpdateRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnsubscribeOrderUpdateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnsubscribeOrderUpdateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnsubscribeOrderUpdateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnsubscribeOrderUpdateRequest result;
      
      private UnsubscribeOrderUpdateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnsubscribeOrderUpdateRequest original = result;
          result = new UnsubscribeOrderUpdateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnsubscribeOrderUpdateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.UnsubscribeOrderUpdateRequest.Descriptor; }
      }
      
      public override UnsubscribeOrderUpdateRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.UnsubscribeOrderUpdateRequest.DefaultInstance; }
      }
      
      public override UnsubscribeOrderUpdateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnsubscribeOrderUpdateRequest) {
          return MergeFrom((UnsubscribeOrderUpdateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnsubscribeOrderUpdateRequest other) {
        if (other == global::bnet.protocol.exchange.UnsubscribeOrderUpdateRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unsubscribeOrderUpdateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unsubscribeOrderUpdateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static UnsubscribeOrderUpdateRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeAdvancedOrderUpdateRequest : pb::GeneratedMessage<SubscribeAdvancedOrderUpdateRequest, SubscribeAdvancedOrderUpdateRequest.Builder> {
    private SubscribeAdvancedOrderUpdateRequest() { }
    private static readonly SubscribeAdvancedOrderUpdateRequest defaultInstance = new SubscribeAdvancedOrderUpdateRequest().MakeReadOnly();
    private static readonly string[] _subscribeAdvancedOrderUpdateRequestFieldNames = new string[] { "filters", "max_partition_id", "min_partition_id", "object_id" };
    private static readonly uint[] _subscribeAdvancedOrderUpdateRequestFieldTags = new uint[] { 34, 26, 18, 8 };
    public static SubscribeAdvancedOrderUpdateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeAdvancedOrderUpdateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeAdvancedOrderUpdateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_SubscribeAdvancedOrderUpdateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeAdvancedOrderUpdateRequest, SubscribeAdvancedOrderUpdateRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_SubscribeAdvancedOrderUpdateRequest__FieldAccessorTable; }
    }
    
    public const int ObjectIdFieldNumber = 1;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public const int MinPartitionIdFieldNumber = 2;
    private bool hasMinPartitionId;
    private global::bnet.protocol.exchange.PartitionId minPartitionId_;
    public bool HasMinPartitionId {
      get { return hasMinPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId MinPartitionId {
      get { return minPartitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int MaxPartitionIdFieldNumber = 3;
    private bool hasMaxPartitionId;
    private global::bnet.protocol.exchange.PartitionId maxPartitionId_;
    public bool HasMaxPartitionId {
      get { return hasMaxPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId MaxPartitionId {
      get { return maxPartitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int FiltersFieldNumber = 4;
    private pbc::PopsicleList<global::bnet.protocol.exchange.AdvancedSubscription> filters_ = new pbc::PopsicleList<global::bnet.protocol.exchange.AdvancedSubscription>();
    public scg::IList<global::bnet.protocol.exchange.AdvancedSubscription> FiltersList {
      get { return filters_; }
    }
    public int FiltersCount {
      get { return filters_.Count; }
    }
    public global::bnet.protocol.exchange.AdvancedSubscription GetFilters(int index) {
      return filters_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasObjectId) return false;
        if (!hasMinPartitionId) return false;
        if (!hasMaxPartitionId) return false;
        if (!MinPartitionId.IsInitialized) return false;
        if (!MaxPartitionId.IsInitialized) return false;
        foreach (global::bnet.protocol.exchange.AdvancedSubscription element in FiltersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeAdvancedOrderUpdateRequestFieldNames;
      if (hasObjectId) {
        output.WriteUInt64(1, field_names[3], ObjectId);
      }
      if (hasMinPartitionId) {
        output.WriteMessage(2, field_names[2], MinPartitionId);
      }
      if (hasMaxPartitionId) {
        output.WriteMessage(3, field_names[1], MaxPartitionId);
      }
      if (filters_.Count > 0) {
        output.WriteMessageArray(4, field_names[0], filters_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, ObjectId);
        }
        if (hasMinPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, MinPartitionId);
        }
        if (hasMaxPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, MaxPartitionId);
        }
        foreach (global::bnet.protocol.exchange.AdvancedSubscription element in FiltersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeAdvancedOrderUpdateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeAdvancedOrderUpdateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeAdvancedOrderUpdateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeAdvancedOrderUpdateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeAdvancedOrderUpdateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeAdvancedOrderUpdateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeAdvancedOrderUpdateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeAdvancedOrderUpdateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeAdvancedOrderUpdateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeAdvancedOrderUpdateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeAdvancedOrderUpdateRequest MakeReadOnly() {
      filters_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeAdvancedOrderUpdateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeAdvancedOrderUpdateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeAdvancedOrderUpdateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeAdvancedOrderUpdateRequest result;
      
      private SubscribeAdvancedOrderUpdateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeAdvancedOrderUpdateRequest original = result;
          result = new SubscribeAdvancedOrderUpdateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeAdvancedOrderUpdateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.SubscribeAdvancedOrderUpdateRequest.Descriptor; }
      }
      
      public override SubscribeAdvancedOrderUpdateRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.SubscribeAdvancedOrderUpdateRequest.DefaultInstance; }
      }
      
      public override SubscribeAdvancedOrderUpdateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeAdvancedOrderUpdateRequest) {
          return MergeFrom((SubscribeAdvancedOrderUpdateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeAdvancedOrderUpdateRequest other) {
        if (other == global::bnet.protocol.exchange.SubscribeAdvancedOrderUpdateRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        if (other.HasMinPartitionId) {
          MergeMinPartitionId(other.MinPartitionId);
        }
        if (other.HasMaxPartitionId) {
          MergeMaxPartitionId(other.MaxPartitionId);
        }
        if (other.filters_.Count != 0) {
          result.filters_.Add(other.filters_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeAdvancedOrderUpdateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeAdvancedOrderUpdateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasMinPartitionId) {
                subBuilder.MergeFrom(MinPartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MinPartitionId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasMaxPartitionId) {
                subBuilder.MergeFrom(MaxPartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MaxPartitionId = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.filters_, global::bnet.protocol.exchange.AdvancedSubscription.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
      
      public bool HasMinPartitionId {
       get { return result.hasMinPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId MinPartitionId {
        get { return result.MinPartitionId; }
        set { SetMinPartitionId(value); }
      }
      public Builder SetMinPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMinPartitionId = true;
        result.minPartitionId_ = value;
        return this;
      }
      public Builder SetMinPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMinPartitionId = true;
        result.minPartitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMinPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMinPartitionId &&
            result.minPartitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.minPartitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.minPartitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.minPartitionId_ = value;
        }
        result.hasMinPartitionId = true;
        return this;
      }
      public Builder ClearMinPartitionId() {
        PrepareBuilder();
        result.hasMinPartitionId = false;
        result.minPartitionId_ = null;
        return this;
      }
      
      public bool HasMaxPartitionId {
       get { return result.hasMaxPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId MaxPartitionId {
        get { return result.MaxPartitionId; }
        set { SetMaxPartitionId(value); }
      }
      public Builder SetMaxPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMaxPartitionId = true;
        result.maxPartitionId_ = value;
        return this;
      }
      public Builder SetMaxPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMaxPartitionId = true;
        result.maxPartitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMaxPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMaxPartitionId &&
            result.maxPartitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.maxPartitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.maxPartitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.maxPartitionId_ = value;
        }
        result.hasMaxPartitionId = true;
        return this;
      }
      public Builder ClearMaxPartitionId() {
        PrepareBuilder();
        result.hasMaxPartitionId = false;
        result.maxPartitionId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.AdvancedSubscription> FiltersList {
        get { return PrepareBuilder().filters_; }
      }
      public int FiltersCount {
        get { return result.FiltersCount; }
      }
      public global::bnet.protocol.exchange.AdvancedSubscription GetFilters(int index) {
        return result.GetFilters(index);
      }
      public Builder SetFilters(int index, global::bnet.protocol.exchange.AdvancedSubscription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.filters_[index] = value;
        return this;
      }
      public Builder SetFilters(int index, global::bnet.protocol.exchange.AdvancedSubscription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.filters_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFilters(global::bnet.protocol.exchange.AdvancedSubscription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.filters_.Add(value);
        return this;
      }
      public Builder AddFilters(global::bnet.protocol.exchange.AdvancedSubscription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.filters_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFilters(scg::IEnumerable<global::bnet.protocol.exchange.AdvancedSubscription> values) {
        PrepareBuilder();
        result.filters_.Add(values);
        return this;
      }
      public Builder ClearFilters() {
        PrepareBuilder();
        result.filters_.Clear();
        return this;
      }
    }
    static SubscribeAdvancedOrderUpdateRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnsubscribeAdvancedOrderUpdateRequest : pb::GeneratedMessage<UnsubscribeAdvancedOrderUpdateRequest, UnsubscribeAdvancedOrderUpdateRequest.Builder> {
    private UnsubscribeAdvancedOrderUpdateRequest() { }
    private static readonly UnsubscribeAdvancedOrderUpdateRequest defaultInstance = new UnsubscribeAdvancedOrderUpdateRequest().MakeReadOnly();
    private static readonly string[] _unsubscribeAdvancedOrderUpdateRequestFieldNames = new string[] {  };
    private static readonly uint[] _unsubscribeAdvancedOrderUpdateRequestFieldTags = new uint[] {  };
    public static UnsubscribeAdvancedOrderUpdateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnsubscribeAdvancedOrderUpdateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnsubscribeAdvancedOrderUpdateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_UnsubscribeAdvancedOrderUpdateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnsubscribeAdvancedOrderUpdateRequest, UnsubscribeAdvancedOrderUpdateRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_UnsubscribeAdvancedOrderUpdateRequest__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unsubscribeAdvancedOrderUpdateRequestFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnsubscribeAdvancedOrderUpdateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeAdvancedOrderUpdateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeAdvancedOrderUpdateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeAdvancedOrderUpdateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeAdvancedOrderUpdateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeAdvancedOrderUpdateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeAdvancedOrderUpdateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnsubscribeAdvancedOrderUpdateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnsubscribeAdvancedOrderUpdateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeAdvancedOrderUpdateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnsubscribeAdvancedOrderUpdateRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnsubscribeAdvancedOrderUpdateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnsubscribeAdvancedOrderUpdateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnsubscribeAdvancedOrderUpdateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnsubscribeAdvancedOrderUpdateRequest result;
      
      private UnsubscribeAdvancedOrderUpdateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnsubscribeAdvancedOrderUpdateRequest original = result;
          result = new UnsubscribeAdvancedOrderUpdateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnsubscribeAdvancedOrderUpdateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.UnsubscribeAdvancedOrderUpdateRequest.Descriptor; }
      }
      
      public override UnsubscribeAdvancedOrderUpdateRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.UnsubscribeAdvancedOrderUpdateRequest.DefaultInstance; }
      }
      
      public override UnsubscribeAdvancedOrderUpdateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnsubscribeAdvancedOrderUpdateRequest) {
          return MergeFrom((UnsubscribeAdvancedOrderUpdateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnsubscribeAdvancedOrderUpdateRequest other) {
        if (other == global::bnet.protocol.exchange.UnsubscribeAdvancedOrderUpdateRequest.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unsubscribeAdvancedOrderUpdateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unsubscribeAdvancedOrderUpdateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static UnsubscribeAdvancedOrderUpdateRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ClaimRequest : pb::GeneratedMessage<ClaimRequest, ClaimRequest.Builder> {
    private ClaimRequest() { }
    private static readonly ClaimRequest defaultInstance = new ClaimRequest().MakeReadOnly();
    private static readonly string[] _claimRequestFieldNames = new string[] { "bnet_account", "information", "order_id", "partition_id", "program" };
    private static readonly uint[] _claimRequestFieldTags = new uint[] { 34, 42, 16, 10, 29 };
    public static ClaimRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ClaimRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ClaimRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_ClaimRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ClaimRequest, ClaimRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_ClaimRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int OrderIdFieldNumber = 2;
    private bool hasOrderId;
    private ulong orderId_;
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public ulong OrderId {
      get { return orderId_; }
    }
    
    public const int ProgramFieldNumber = 3;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int BnetAccountFieldNumber = 4;
    private bool hasBnetAccount;
    private global::bnet.protocol.EntityId bnetAccount_;
    public bool HasBnetAccount {
      get { return hasBnetAccount; }
    }
    public global::bnet.protocol.EntityId BnetAccount {
      get { return bnetAccount_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int InformationFieldNumber = 5;
    private bool hasInformation;
    private global::bnet.protocol.exchange.BlobFrom information_;
    public bool HasInformation {
      get { return hasInformation; }
    }
    public global::bnet.protocol.exchange.BlobFrom Information {
      get { return information_ ?? global::bnet.protocol.exchange.BlobFrom.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasPartitionId) {
          if (!PartitionId.IsInitialized) return false;
        }
        if (HasBnetAccount) {
          if (!BnetAccount.IsInitialized) return false;
        }
        if (HasInformation) {
          if (!Information.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _claimRequestFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[3], PartitionId);
      }
      if (hasOrderId) {
        output.WriteUInt64(2, field_names[2], OrderId);
      }
      if (hasProgram) {
        output.WriteFixed32(3, field_names[4], Program);
      }
      if (hasBnetAccount) {
        output.WriteMessage(4, field_names[0], BnetAccount);
      }
      if (hasInformation) {
        output.WriteMessage(5, field_names[1], Information);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasOrderId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, OrderId);
        }
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeFixed32Size(3, Program);
        }
        if (hasBnetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, BnetAccount);
        }
        if (hasInformation) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, Information);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ClaimRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClaimRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClaimRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ClaimRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ClaimRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClaimRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ClaimRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ClaimRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ClaimRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ClaimRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ClaimRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ClaimRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ClaimRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ClaimRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ClaimRequest result;
      
      private ClaimRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ClaimRequest original = result;
          result = new ClaimRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ClaimRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.ClaimRequest.Descriptor; }
      }
      
      public override ClaimRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.ClaimRequest.DefaultInstance; }
      }
      
      public override ClaimRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ClaimRequest) {
          return MergeFrom((ClaimRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ClaimRequest other) {
        if (other == global::bnet.protocol.exchange.ClaimRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasBnetAccount) {
          MergeBnetAccount(other.BnetAccount);
        }
        if (other.HasInformation) {
          MergeInformation(other.Information);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_claimRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _claimRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasOrderId = input.ReadUInt64(ref result.orderId_);
              break;
            }
            case 29: {
              result.hasProgram = input.ReadFixed32(ref result.program_);
              break;
            }
            case 34: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBnetAccount) {
                subBuilder.MergeFrom(BnetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccount = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::bnet.protocol.exchange.BlobFrom.Builder subBuilder = global::bnet.protocol.exchange.BlobFrom.CreateBuilder();
              if (result.hasInformation) {
                subBuilder.MergeFrom(Information);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Information = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      public ulong OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(ulong value) {
        PrepareBuilder();
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        PrepareBuilder();
        result.hasOrderId = false;
        result.orderId_ = 0UL;
        return this;
      }
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public bool HasBnetAccount {
       get { return result.hasBnetAccount; }
      }
      public global::bnet.protocol.EntityId BnetAccount {
        get { return result.BnetAccount; }
        set { SetBnetAccount(value); }
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = value;
        return this;
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBnetAccount &&
            result.bnetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccount_ = value;
        }
        result.hasBnetAccount = true;
        return this;
      }
      public Builder ClearBnetAccount() {
        PrepareBuilder();
        result.hasBnetAccount = false;
        result.bnetAccount_ = null;
        return this;
      }
      
      public bool HasInformation {
       get { return result.hasInformation; }
      }
      public global::bnet.protocol.exchange.BlobFrom Information {
        get { return result.Information; }
        set { SetInformation(value); }
      }
      public Builder SetInformation(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInformation = true;
        result.information_ = value;
        return this;
      }
      public Builder SetInformation(global::bnet.protocol.exchange.BlobFrom.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInformation = true;
        result.information_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInformation(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInformation &&
            result.information_ != global::bnet.protocol.exchange.BlobFrom.DefaultInstance) {
            result.information_ = global::bnet.protocol.exchange.BlobFrom.CreateBuilder(result.information_).MergeFrom(value).BuildPartial();
        } else {
          result.information_ = value;
        }
        result.hasInformation = true;
        return this;
      }
      public Builder ClearInformation() {
        PrepareBuilder();
        result.hasInformation = false;
        result.information_ = null;
        return this;
      }
    }
    static ClaimRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CancelRequest : pb::GeneratedMessage<CancelRequest, CancelRequest.Builder> {
    private CancelRequest() { }
    private static readonly CancelRequest defaultInstance = new CancelRequest().MakeReadOnly();
    private static readonly string[] _cancelRequestFieldNames = new string[] { "bnet_account", "order_id", "partition_id", "reason" };
    private static readonly uint[] _cancelRequestFieldTags = new uint[] { 34, 16, 10, 24 };
    public static CancelRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CancelRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CancelRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_CancelRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CancelRequest, CancelRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_CancelRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int OrderIdFieldNumber = 2;
    private bool hasOrderId;
    private ulong orderId_;
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public ulong OrderId {
      get { return orderId_; }
    }
    
    public const int ReasonFieldNumber = 3;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public const int BnetAccountFieldNumber = 4;
    private bool hasBnetAccount;
    private global::bnet.protocol.EntityId bnetAccount_;
    public bool HasBnetAccount {
      get { return hasBnetAccount; }
    }
    public global::bnet.protocol.EntityId BnetAccount {
      get { return bnetAccount_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOrderId) return false;
        if (!PartitionId.IsInitialized) return false;
        if (HasBnetAccount) {
          if (!BnetAccount.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _cancelRequestFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[2], PartitionId);
      }
      if (hasOrderId) {
        output.WriteUInt64(2, field_names[1], OrderId);
      }
      if (hasReason) {
        output.WriteUInt32(3, field_names[3], Reason);
      }
      if (hasBnetAccount) {
        output.WriteMessage(4, field_names[0], BnetAccount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasOrderId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, OrderId);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Reason);
        }
        if (hasBnetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, BnetAccount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CancelRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CancelRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CancelRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CancelRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CancelRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CancelRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CancelRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CancelRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CancelRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CancelRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CancelRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CancelRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CancelRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CancelRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CancelRequest result;
      
      private CancelRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CancelRequest original = result;
          result = new CancelRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CancelRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.CancelRequest.Descriptor; }
      }
      
      public override CancelRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.CancelRequest.DefaultInstance; }
      }
      
      public override CancelRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CancelRequest) {
          return MergeFrom((CancelRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CancelRequest other) {
        if (other == global::bnet.protocol.exchange.CancelRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        if (other.HasBnetAccount) {
          MergeBnetAccount(other.BnetAccount);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_cancelRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _cancelRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasOrderId = input.ReadUInt64(ref result.orderId_);
              break;
            }
            case 24: {
              result.hasReason = input.ReadUInt32(ref result.reason_);
              break;
            }
            case 34: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBnetAccount) {
                subBuilder.MergeFrom(BnetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccount = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      public ulong OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(ulong value) {
        PrepareBuilder();
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        PrepareBuilder();
        result.hasOrderId = false;
        result.orderId_ = 0UL;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
      
      public bool HasBnetAccount {
       get { return result.hasBnetAccount; }
      }
      public global::bnet.protocol.EntityId BnetAccount {
        get { return result.BnetAccount; }
        set { SetBnetAccount(value); }
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = value;
        return this;
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBnetAccount &&
            result.bnetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccount_ = value;
        }
        result.hasBnetAccount = true;
        return this;
      }
      public Builder ClearBnetAccount() {
        PrepareBuilder();
        result.hasBnetAccount = false;
        result.bnetAccount_ = null;
        return this;
      }
    }
    static CancelRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RefundRequest : pb::GeneratedMessage<RefundRequest, RefundRequest.Builder> {
    private RefundRequest() { }
    private static readonly RefundRequest defaultInstance = new RefundRequest().MakeReadOnly();
    private static readonly string[] _refundRequestFieldNames = new string[] { "cs_notes", "cs_user_id", "order_id", "partition_id" };
    private static readonly uint[] _refundRequestFieldTags = new uint[] { 26, 32, 16, 10 };
    public static RefundRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RefundRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RefundRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_RefundRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RefundRequest, RefundRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_RefundRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int OrderIdFieldNumber = 2;
    private bool hasOrderId;
    private ulong orderId_;
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public ulong OrderId {
      get { return orderId_; }
    }
    
    public const int CsNotesFieldNumber = 3;
    private bool hasCsNotes;
    private string csNotes_ = "";
    public bool HasCsNotes {
      get { return hasCsNotes; }
    }
    public string CsNotes {
      get { return csNotes_; }
    }
    
    public const int CsUserIdFieldNumber = 4;
    private bool hasCsUserId;
    private ulong csUserId_;
    public bool HasCsUserId {
      get { return hasCsUserId; }
    }
    public ulong CsUserId {
      get { return csUserId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOrderId) return false;
        if (!hasCsNotes) return false;
        if (!hasCsUserId) return false;
        if (!PartitionId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _refundRequestFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[3], PartitionId);
      }
      if (hasOrderId) {
        output.WriteUInt64(2, field_names[2], OrderId);
      }
      if (hasCsNotes) {
        output.WriteString(3, field_names[0], CsNotes);
      }
      if (hasCsUserId) {
        output.WriteUInt64(4, field_names[1], CsUserId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasOrderId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, OrderId);
        }
        if (hasCsNotes) {
          size += pb::CodedOutputStream.ComputeStringSize(3, CsNotes);
        }
        if (hasCsUserId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, CsUserId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RefundRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RefundRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RefundRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RefundRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RefundRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RefundRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RefundRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RefundRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RefundRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RefundRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RefundRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RefundRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RefundRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RefundRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RefundRequest result;
      
      private RefundRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RefundRequest original = result;
          result = new RefundRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RefundRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.RefundRequest.Descriptor; }
      }
      
      public override RefundRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.RefundRequest.DefaultInstance; }
      }
      
      public override RefundRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RefundRequest) {
          return MergeFrom((RefundRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RefundRequest other) {
        if (other == global::bnet.protocol.exchange.RefundRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasCsNotes) {
          CsNotes = other.CsNotes;
        }
        if (other.HasCsUserId) {
          CsUserId = other.CsUserId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_refundRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _refundRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasOrderId = input.ReadUInt64(ref result.orderId_);
              break;
            }
            case 26: {
              result.hasCsNotes = input.ReadString(ref result.csNotes_);
              break;
            }
            case 32: {
              result.hasCsUserId = input.ReadUInt64(ref result.csUserId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      public ulong OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(ulong value) {
        PrepareBuilder();
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        PrepareBuilder();
        result.hasOrderId = false;
        result.orderId_ = 0UL;
        return this;
      }
      
      public bool HasCsNotes {
        get { return result.hasCsNotes; }
      }
      public string CsNotes {
        get { return result.CsNotes; }
        set { SetCsNotes(value); }
      }
      public Builder SetCsNotes(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCsNotes = true;
        result.csNotes_ = value;
        return this;
      }
      public Builder ClearCsNotes() {
        PrepareBuilder();
        result.hasCsNotes = false;
        result.csNotes_ = "";
        return this;
      }
      
      public bool HasCsUserId {
        get { return result.hasCsUserId; }
      }
      public ulong CsUserId {
        get { return result.CsUserId; }
        set { SetCsUserId(value); }
      }
      public Builder SetCsUserId(ulong value) {
        PrepareBuilder();
        result.hasCsUserId = true;
        result.csUserId_ = value;
        return this;
      }
      public Builder ClearCsUserId() {
        PrepareBuilder();
        result.hasCsUserId = false;
        result.csUserId_ = 0UL;
        return this;
      }
    }
    static RefundRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetConfigurationRequest : pb::GeneratedMessage<GetConfigurationRequest, GetConfigurationRequest.Builder> {
    private GetConfigurationRequest() { }
    private static readonly GetConfigurationRequest defaultInstance = new GetConfigurationRequest().MakeReadOnly();
    private static readonly string[] _getConfigurationRequestFieldNames = new string[] { "program" };
    private static readonly uint[] _getConfigurationRequestFieldTags = new uint[] { 13 };
    public static GetConfigurationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetConfigurationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetConfigurationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetConfigurationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetConfigurationRequest, GetConfigurationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetConfigurationRequest__FieldAccessorTable; }
    }
    
    public const int ProgramFieldNumber = 1;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProgram) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getConfigurationRequestFieldNames;
      if (hasProgram) {
        output.WriteFixed32(1, field_names[0], Program);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeFixed32Size(1, Program);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetConfigurationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetConfigurationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetConfigurationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetConfigurationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetConfigurationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetConfigurationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetConfigurationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetConfigurationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetConfigurationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetConfigurationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetConfigurationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetConfigurationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetConfigurationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetConfigurationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetConfigurationRequest result;
      
      private GetConfigurationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetConfigurationRequest original = result;
          result = new GetConfigurationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetConfigurationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetConfigurationRequest.Descriptor; }
      }
      
      public override GetConfigurationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetConfigurationRequest.DefaultInstance; }
      }
      
      public override GetConfigurationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetConfigurationRequest) {
          return MergeFrom((GetConfigurationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetConfigurationRequest other) {
        if (other == global::bnet.protocol.exchange.GetConfigurationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasProgram) {
          Program = other.Program;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getConfigurationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getConfigurationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 13: {
              result.hasProgram = input.ReadFixed32(ref result.program_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
    }
    static GetConfigurationRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetConfigurationResponse : pb::GeneratedMessage<GetConfigurationResponse, GetConfigurationResponse.Builder> {
    private GetConfigurationResponse() { }
    private static readonly GetConfigurationResponse defaultInstance = new GetConfigurationResponse().MakeReadOnly();
    private static readonly string[] _getConfigurationResponseFieldNames = new string[] { "configs", "recommended_default_rmt_currency", "rmt_restricted_by_license" };
    private static readonly uint[] _getConfigurationResponseFieldTags = new uint[] { 10, 26, 18 };
    public static GetConfigurationResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetConfigurationResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetConfigurationResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetConfigurationResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetConfigurationResponse, GetConfigurationResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetConfigurationResponse__FieldAccessorTable; }
    }
    
    public const int ConfigsFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.SpecialistConfig> configs_ = new pbc::PopsicleList<global::bnet.protocol.exchange.SpecialistConfig>();
    public scg::IList<global::bnet.protocol.exchange.SpecialistConfig> ConfigsList {
      get { return configs_; }
    }
    public int ConfigsCount {
      get { return configs_.Count; }
    }
    public global::bnet.protocol.exchange.SpecialistConfig GetConfigs(int index) {
      return configs_[index];
    }
    
    public const int RmtRestrictedByLicenseFieldNumber = 2;
    private bool hasRmtRestrictedByLicense;
    private global::bnet.protocol.account.AccountLicense rmtRestrictedByLicense_;
    public bool HasRmtRestrictedByLicense {
      get { return hasRmtRestrictedByLicense; }
    }
    public global::bnet.protocol.account.AccountLicense RmtRestrictedByLicense {
      get { return rmtRestrictedByLicense_ ?? global::bnet.protocol.account.AccountLicense.DefaultInstance; }
    }
    
    public const int RecommendedDefaultRmtCurrencyFieldNumber = 3;
    private bool hasRecommendedDefaultRmtCurrency;
    private string recommendedDefaultRmtCurrency_ = "";
    public bool HasRecommendedDefaultRmtCurrency {
      get { return hasRecommendedDefaultRmtCurrency; }
    }
    public string RecommendedDefaultRmtCurrency {
      get { return recommendedDefaultRmtCurrency_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.exchange.SpecialistConfig element in ConfigsList) {
          if (!element.IsInitialized) return false;
        }
        if (HasRmtRestrictedByLicense) {
          if (!RmtRestrictedByLicense.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getConfigurationResponseFieldNames;
      if (configs_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], configs_);
      }
      if (hasRmtRestrictedByLicense) {
        output.WriteMessage(2, field_names[2], RmtRestrictedByLicense);
      }
      if (hasRecommendedDefaultRmtCurrency) {
        output.WriteString(3, field_names[1], RecommendedDefaultRmtCurrency);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.SpecialistConfig element in ConfigsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasRmtRestrictedByLicense) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, RmtRestrictedByLicense);
        }
        if (hasRecommendedDefaultRmtCurrency) {
          size += pb::CodedOutputStream.ComputeStringSize(3, RecommendedDefaultRmtCurrency);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetConfigurationResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetConfigurationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetConfigurationResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetConfigurationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetConfigurationResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetConfigurationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetConfigurationResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetConfigurationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetConfigurationResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetConfigurationResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetConfigurationResponse MakeReadOnly() {
      configs_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetConfigurationResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetConfigurationResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetConfigurationResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetConfigurationResponse result;
      
      private GetConfigurationResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetConfigurationResponse original = result;
          result = new GetConfigurationResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetConfigurationResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetConfigurationResponse.Descriptor; }
      }
      
      public override GetConfigurationResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetConfigurationResponse.DefaultInstance; }
      }
      
      public override GetConfigurationResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetConfigurationResponse) {
          return MergeFrom((GetConfigurationResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetConfigurationResponse other) {
        if (other == global::bnet.protocol.exchange.GetConfigurationResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.configs_.Count != 0) {
          result.configs_.Add(other.configs_);
        }
        if (other.HasRmtRestrictedByLicense) {
          MergeRmtRestrictedByLicense(other.RmtRestrictedByLicense);
        }
        if (other.HasRecommendedDefaultRmtCurrency) {
          RecommendedDefaultRmtCurrency = other.RecommendedDefaultRmtCurrency;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getConfigurationResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getConfigurationResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.configs_, global::bnet.protocol.exchange.SpecialistConfig.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              global::bnet.protocol.account.AccountLicense.Builder subBuilder = global::bnet.protocol.account.AccountLicense.CreateBuilder();
              if (result.hasRmtRestrictedByLicense) {
                subBuilder.MergeFrom(RmtRestrictedByLicense);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              RmtRestrictedByLicense = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              result.hasRecommendedDefaultRmtCurrency = input.ReadString(ref result.recommendedDefaultRmtCurrency_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.SpecialistConfig> ConfigsList {
        get { return PrepareBuilder().configs_; }
      }
      public int ConfigsCount {
        get { return result.ConfigsCount; }
      }
      public global::bnet.protocol.exchange.SpecialistConfig GetConfigs(int index) {
        return result.GetConfigs(index);
      }
      public Builder SetConfigs(int index, global::bnet.protocol.exchange.SpecialistConfig value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.configs_[index] = value;
        return this;
      }
      public Builder SetConfigs(int index, global::bnet.protocol.exchange.SpecialistConfig.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.configs_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddConfigs(global::bnet.protocol.exchange.SpecialistConfig value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.configs_.Add(value);
        return this;
      }
      public Builder AddConfigs(global::bnet.protocol.exchange.SpecialistConfig.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.configs_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeConfigs(scg::IEnumerable<global::bnet.protocol.exchange.SpecialistConfig> values) {
        PrepareBuilder();
        result.configs_.Add(values);
        return this;
      }
      public Builder ClearConfigs() {
        PrepareBuilder();
        result.configs_.Clear();
        return this;
      }
      
      public bool HasRmtRestrictedByLicense {
       get { return result.hasRmtRestrictedByLicense; }
      }
      public global::bnet.protocol.account.AccountLicense RmtRestrictedByLicense {
        get { return result.RmtRestrictedByLicense; }
        set { SetRmtRestrictedByLicense(value); }
      }
      public Builder SetRmtRestrictedByLicense(global::bnet.protocol.account.AccountLicense value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRmtRestrictedByLicense = true;
        result.rmtRestrictedByLicense_ = value;
        return this;
      }
      public Builder SetRmtRestrictedByLicense(global::bnet.protocol.account.AccountLicense.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasRmtRestrictedByLicense = true;
        result.rmtRestrictedByLicense_ = builderForValue.Build();
        return this;
      }
      public Builder MergeRmtRestrictedByLicense(global::bnet.protocol.account.AccountLicense value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasRmtRestrictedByLicense &&
            result.rmtRestrictedByLicense_ != global::bnet.protocol.account.AccountLicense.DefaultInstance) {
            result.rmtRestrictedByLicense_ = global::bnet.protocol.account.AccountLicense.CreateBuilder(result.rmtRestrictedByLicense_).MergeFrom(value).BuildPartial();
        } else {
          result.rmtRestrictedByLicense_ = value;
        }
        result.hasRmtRestrictedByLicense = true;
        return this;
      }
      public Builder ClearRmtRestrictedByLicense() {
        PrepareBuilder();
        result.hasRmtRestrictedByLicense = false;
        result.rmtRestrictedByLicense_ = null;
        return this;
      }
      
      public bool HasRecommendedDefaultRmtCurrency {
        get { return result.hasRecommendedDefaultRmtCurrency; }
      }
      public string RecommendedDefaultRmtCurrency {
        get { return result.RecommendedDefaultRmtCurrency; }
        set { SetRecommendedDefaultRmtCurrency(value); }
      }
      public Builder SetRecommendedDefaultRmtCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRecommendedDefaultRmtCurrency = true;
        result.recommendedDefaultRmtCurrency_ = value;
        return this;
      }
      public Builder ClearRecommendedDefaultRmtCurrency() {
        PrepareBuilder();
        result.hasRecommendedDefaultRmtCurrency = false;
        result.recommendedDefaultRmtCurrency_ = "";
        return this;
      }
    }
    static GetConfigurationResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetOfferFeeEstimationRequest : pb::GeneratedMessage<GetOfferFeeEstimationRequest, GetOfferFeeEstimationRequest.Builder> {
    private GetOfferFeeEstimationRequest() { }
    private static readonly GetOfferFeeEstimationRequest defaultInstance = new GetOfferFeeEstimationRequest().MakeReadOnly();
    private static readonly string[] _getOfferFeeEstimationRequestFieldNames = new string[] { "data", "partition_id" };
    private static readonly uint[] _getOfferFeeEstimationRequestFieldTags = new uint[] { 18, 10 };
    public static GetOfferFeeEstimationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetOfferFeeEstimationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetOfferFeeEstimationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetOfferFeeEstimationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetOfferFeeEstimationRequest, GetOfferFeeEstimationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetOfferFeeEstimationRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int DataFieldNumber = 2;
    private bool hasData;
    private global::bnet.protocol.exchange.FeeEstimationData data_;
    public bool HasData {
      get { return hasData; }
    }
    public global::bnet.protocol.exchange.FeeEstimationData Data {
      get { return data_ ?? global::bnet.protocol.exchange.FeeEstimationData.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasData) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!Data.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getOfferFeeEstimationRequestFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[1], PartitionId);
      }
      if (hasData) {
        output.WriteMessage(2, field_names[0], Data);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasData) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Data);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetOfferFeeEstimationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetOfferFeeEstimationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetOfferFeeEstimationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetOfferFeeEstimationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetOfferFeeEstimationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetOfferFeeEstimationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetOfferFeeEstimationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetOfferFeeEstimationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetOfferFeeEstimationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetOfferFeeEstimationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetOfferFeeEstimationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetOfferFeeEstimationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetOfferFeeEstimationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetOfferFeeEstimationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetOfferFeeEstimationRequest result;
      
      private GetOfferFeeEstimationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetOfferFeeEstimationRequest original = result;
          result = new GetOfferFeeEstimationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetOfferFeeEstimationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetOfferFeeEstimationRequest.Descriptor; }
      }
      
      public override GetOfferFeeEstimationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetOfferFeeEstimationRequest.DefaultInstance; }
      }
      
      public override GetOfferFeeEstimationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetOfferFeeEstimationRequest) {
          return MergeFrom((GetOfferFeeEstimationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetOfferFeeEstimationRequest other) {
        if (other == global::bnet.protocol.exchange.GetOfferFeeEstimationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasData) {
          MergeData(other.Data);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getOfferFeeEstimationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getOfferFeeEstimationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.FeeEstimationData.Builder subBuilder = global::bnet.protocol.exchange.FeeEstimationData.CreateBuilder();
              if (result.hasData) {
                subBuilder.MergeFrom(Data);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Data = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasData {
       get { return result.hasData; }
      }
      public global::bnet.protocol.exchange.FeeEstimationData Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(global::bnet.protocol.exchange.FeeEstimationData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder SetData(global::bnet.protocol.exchange.FeeEstimationData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = builderForValue.Build();
        return this;
      }
      public Builder MergeData(global::bnet.protocol.exchange.FeeEstimationData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasData &&
            result.data_ != global::bnet.protocol.exchange.FeeEstimationData.DefaultInstance) {
            result.data_ = global::bnet.protocol.exchange.FeeEstimationData.CreateBuilder(result.data_).MergeFrom(value).BuildPartial();
        } else {
          result.data_ = value;
        }
        result.hasData = true;
        return this;
      }
      public Builder ClearData() {
        PrepareBuilder();
        result.hasData = false;
        result.data_ = null;
        return this;
      }
    }
    static GetOfferFeeEstimationRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetBidFeeEstimationRequest : pb::GeneratedMessage<GetBidFeeEstimationRequest, GetBidFeeEstimationRequest.Builder> {
    private GetBidFeeEstimationRequest() { }
    private static readonly GetBidFeeEstimationRequest defaultInstance = new GetBidFeeEstimationRequest().MakeReadOnly();
    private static readonly string[] _getBidFeeEstimationRequestFieldNames = new string[] { "data", "partition_id" };
    private static readonly uint[] _getBidFeeEstimationRequestFieldTags = new uint[] { 18, 10 };
    public static GetBidFeeEstimationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetBidFeeEstimationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetBidFeeEstimationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetBidFeeEstimationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetBidFeeEstimationRequest, GetBidFeeEstimationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetBidFeeEstimationRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int DataFieldNumber = 2;
    private bool hasData;
    private global::bnet.protocol.exchange.FeeEstimationData data_;
    public bool HasData {
      get { return hasData; }
    }
    public global::bnet.protocol.exchange.FeeEstimationData Data {
      get { return data_ ?? global::bnet.protocol.exchange.FeeEstimationData.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasData) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!Data.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getBidFeeEstimationRequestFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[1], PartitionId);
      }
      if (hasData) {
        output.WriteMessage(2, field_names[0], Data);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasData) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Data);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetBidFeeEstimationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetBidFeeEstimationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetBidFeeEstimationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetBidFeeEstimationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetBidFeeEstimationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetBidFeeEstimationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetBidFeeEstimationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetBidFeeEstimationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetBidFeeEstimationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetBidFeeEstimationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetBidFeeEstimationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetBidFeeEstimationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetBidFeeEstimationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetBidFeeEstimationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetBidFeeEstimationRequest result;
      
      private GetBidFeeEstimationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetBidFeeEstimationRequest original = result;
          result = new GetBidFeeEstimationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetBidFeeEstimationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetBidFeeEstimationRequest.Descriptor; }
      }
      
      public override GetBidFeeEstimationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetBidFeeEstimationRequest.DefaultInstance; }
      }
      
      public override GetBidFeeEstimationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetBidFeeEstimationRequest) {
          return MergeFrom((GetBidFeeEstimationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetBidFeeEstimationRequest other) {
        if (other == global::bnet.protocol.exchange.GetBidFeeEstimationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasData) {
          MergeData(other.Data);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getBidFeeEstimationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getBidFeeEstimationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.FeeEstimationData.Builder subBuilder = global::bnet.protocol.exchange.FeeEstimationData.CreateBuilder();
              if (result.hasData) {
                subBuilder.MergeFrom(Data);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Data = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasData {
       get { return result.hasData; }
      }
      public global::bnet.protocol.exchange.FeeEstimationData Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(global::bnet.protocol.exchange.FeeEstimationData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder SetData(global::bnet.protocol.exchange.FeeEstimationData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = builderForValue.Build();
        return this;
      }
      public Builder MergeData(global::bnet.protocol.exchange.FeeEstimationData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasData &&
            result.data_ != global::bnet.protocol.exchange.FeeEstimationData.DefaultInstance) {
            result.data_ = global::bnet.protocol.exchange.FeeEstimationData.CreateBuilder(result.data_).MergeFrom(value).BuildPartial();
        } else {
          result.data_ = value;
        }
        result.hasData = true;
        return this;
      }
      public Builder ClearData() {
        PrepareBuilder();
        result.hasData = false;
        result.data_ = null;
        return this;
      }
    }
    static GetBidFeeEstimationRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetFeeEstimationResponse : pb::GeneratedMessage<GetFeeEstimationResponse, GetFeeEstimationResponse.Builder> {
    private GetFeeEstimationResponse() { }
    private static readonly GetFeeEstimationResponse defaultInstance = new GetFeeEstimationResponse().MakeReadOnly();
    private static readonly string[] _getFeeEstimationResponseFieldNames = new string[] { "fee_amount", "fee_details" };
    private static readonly uint[] _getFeeEstimationResponseFieldTags = new uint[] { 8, 18 };
    public static GetFeeEstimationResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetFeeEstimationResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetFeeEstimationResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetFeeEstimationResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetFeeEstimationResponse, GetFeeEstimationResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetFeeEstimationResponse__FieldAccessorTable; }
    }
    
    public const int FeeAmountFieldNumber = 1;
    private bool hasFeeAmount;
    private ulong feeAmount_;
    public bool HasFeeAmount {
      get { return hasFeeAmount; }
    }
    public ulong FeeAmount {
      get { return feeAmount_; }
    }
    
    public const int FeeDetailsFieldNumber = 2;
    private pbc::PopsicleList<global::bnet.protocol.exchange.FeeDetail> feeDetails_ = new pbc::PopsicleList<global::bnet.protocol.exchange.FeeDetail>();
    public scg::IList<global::bnet.protocol.exchange.FeeDetail> FeeDetailsList {
      get { return feeDetails_; }
    }
    public int FeeDetailsCount {
      get { return feeDetails_.Count; }
    }
    public global::bnet.protocol.exchange.FeeDetail GetFeeDetails(int index) {
      return feeDetails_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasFeeAmount) return false;
        foreach (global::bnet.protocol.exchange.FeeDetail element in FeeDetailsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getFeeEstimationResponseFieldNames;
      if (hasFeeAmount) {
        output.WriteUInt64(1, field_names[0], FeeAmount);
      }
      if (feeDetails_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], feeDetails_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasFeeAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, FeeAmount);
        }
        foreach (global::bnet.protocol.exchange.FeeDetail element in FeeDetailsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetFeeEstimationResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFeeEstimationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFeeEstimationResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFeeEstimationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFeeEstimationResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFeeEstimationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetFeeEstimationResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetFeeEstimationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetFeeEstimationResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFeeEstimationResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetFeeEstimationResponse MakeReadOnly() {
      feeDetails_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetFeeEstimationResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetFeeEstimationResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetFeeEstimationResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetFeeEstimationResponse result;
      
      private GetFeeEstimationResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetFeeEstimationResponse original = result;
          result = new GetFeeEstimationResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetFeeEstimationResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetFeeEstimationResponse.Descriptor; }
      }
      
      public override GetFeeEstimationResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetFeeEstimationResponse.DefaultInstance; }
      }
      
      public override GetFeeEstimationResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetFeeEstimationResponse) {
          return MergeFrom((GetFeeEstimationResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetFeeEstimationResponse other) {
        if (other == global::bnet.protocol.exchange.GetFeeEstimationResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasFeeAmount) {
          FeeAmount = other.FeeAmount;
        }
        if (other.feeDetails_.Count != 0) {
          result.feeDetails_.Add(other.feeDetails_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getFeeEstimationResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getFeeEstimationResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasFeeAmount = input.ReadUInt64(ref result.feeAmount_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.feeDetails_, global::bnet.protocol.exchange.FeeDetail.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasFeeAmount {
        get { return result.hasFeeAmount; }
      }
      public ulong FeeAmount {
        get { return result.FeeAmount; }
        set { SetFeeAmount(value); }
      }
      public Builder SetFeeAmount(ulong value) {
        PrepareBuilder();
        result.hasFeeAmount = true;
        result.feeAmount_ = value;
        return this;
      }
      public Builder ClearFeeAmount() {
        PrepareBuilder();
        result.hasFeeAmount = false;
        result.feeAmount_ = 0UL;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.FeeDetail> FeeDetailsList {
        get { return PrepareBuilder().feeDetails_; }
      }
      public int FeeDetailsCount {
        get { return result.FeeDetailsCount; }
      }
      public global::bnet.protocol.exchange.FeeDetail GetFeeDetails(int index) {
        return result.GetFeeDetails(index);
      }
      public Builder SetFeeDetails(int index, global::bnet.protocol.exchange.FeeDetail value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.feeDetails_[index] = value;
        return this;
      }
      public Builder SetFeeDetails(int index, global::bnet.protocol.exchange.FeeDetail.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.feeDetails_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFeeDetails(global::bnet.protocol.exchange.FeeDetail value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.feeDetails_.Add(value);
        return this;
      }
      public Builder AddFeeDetails(global::bnet.protocol.exchange.FeeDetail.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.feeDetails_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFeeDetails(scg::IEnumerable<global::bnet.protocol.exchange.FeeDetail> values) {
        PrepareBuilder();
        result.feeDetails_.Add(values);
        return this;
      }
      public Builder ClearFeeDetails() {
        PrepareBuilder();
        result.feeDetails_.Clear();
        return this;
      }
    }
    static GetFeeEstimationResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class OrderBookNotificationRequest : pb::GeneratedMessage<OrderBookNotificationRequest, OrderBookNotificationRequest.Builder> {
    private OrderBookNotificationRequest() { }
    private static readonly OrderBookNotificationRequest defaultInstance = new OrderBookNotificationRequest().MakeReadOnly();
    private static readonly string[] _orderBookNotificationRequestFieldNames = new string[] { "boot_strap_last", "notifications" };
    private static readonly uint[] _orderBookNotificationRequestFieldTags = new uint[] { 16, 10 };
    public static OrderBookNotificationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderBookNotificationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderBookNotificationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_OrderBookNotificationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderBookNotificationRequest, OrderBookNotificationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_OrderBookNotificationRequest__FieldAccessorTable; }
    }
    
    public const int NotificationsFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.OrderBookNotification> notifications_ = new pbc::PopsicleList<global::bnet.protocol.exchange.OrderBookNotification>();
    public scg::IList<global::bnet.protocol.exchange.OrderBookNotification> NotificationsList {
      get { return notifications_; }
    }
    public int NotificationsCount {
      get { return notifications_.Count; }
    }
    public global::bnet.protocol.exchange.OrderBookNotification GetNotifications(int index) {
      return notifications_[index];
    }
    
    public const int BootStrapLastFieldNumber = 2;
    private bool hasBootStrapLast;
    private bool bootStrapLast_;
    public bool HasBootStrapLast {
      get { return hasBootStrapLast; }
    }
    public bool BootStrapLast {
      get { return bootStrapLast_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.exchange.OrderBookNotification element in NotificationsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _orderBookNotificationRequestFieldNames;
      if (notifications_.Count > 0) {
        output.WriteMessageArray(1, field_names[1], notifications_);
      }
      if (hasBootStrapLast) {
        output.WriteBool(2, field_names[0], BootStrapLast);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.OrderBookNotification element in NotificationsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasBootStrapLast) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, BootStrapLast);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static OrderBookNotificationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBookNotificationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBookNotificationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBookNotificationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBookNotificationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBookNotificationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderBookNotificationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderBookNotificationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderBookNotificationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBookNotificationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderBookNotificationRequest MakeReadOnly() {
      notifications_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderBookNotificationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderBookNotificationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderBookNotificationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderBookNotificationRequest result;
      
      private OrderBookNotificationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderBookNotificationRequest original = result;
          result = new OrderBookNotificationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderBookNotificationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.OrderBookNotificationRequest.Descriptor; }
      }
      
      public override OrderBookNotificationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.OrderBookNotificationRequest.DefaultInstance; }
      }
      
      public override OrderBookNotificationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderBookNotificationRequest) {
          return MergeFrom((OrderBookNotificationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderBookNotificationRequest other) {
        if (other == global::bnet.protocol.exchange.OrderBookNotificationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.notifications_.Count != 0) {
          result.notifications_.Add(other.notifications_);
        }
        if (other.HasBootStrapLast) {
          BootStrapLast = other.BootStrapLast;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderBookNotificationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderBookNotificationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.notifications_, global::bnet.protocol.exchange.OrderBookNotification.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasBootStrapLast = input.ReadBool(ref result.bootStrapLast_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.OrderBookNotification> NotificationsList {
        get { return PrepareBuilder().notifications_; }
      }
      public int NotificationsCount {
        get { return result.NotificationsCount; }
      }
      public global::bnet.protocol.exchange.OrderBookNotification GetNotifications(int index) {
        return result.GetNotifications(index);
      }
      public Builder SetNotifications(int index, global::bnet.protocol.exchange.OrderBookNotification value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.notifications_[index] = value;
        return this;
      }
      public Builder SetNotifications(int index, global::bnet.protocol.exchange.OrderBookNotification.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.notifications_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddNotifications(global::bnet.protocol.exchange.OrderBookNotification value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.notifications_.Add(value);
        return this;
      }
      public Builder AddNotifications(global::bnet.protocol.exchange.OrderBookNotification.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.notifications_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeNotifications(scg::IEnumerable<global::bnet.protocol.exchange.OrderBookNotification> values) {
        PrepareBuilder();
        result.notifications_.Add(values);
        return this;
      }
      public Builder ClearNotifications() {
        PrepareBuilder();
        result.notifications_.Clear();
        return this;
      }
      
      public bool HasBootStrapLast {
        get { return result.hasBootStrapLast; }
      }
      public bool BootStrapLast {
        get { return result.BootStrapLast; }
        set { SetBootStrapLast(value); }
      }
      public Builder SetBootStrapLast(bool value) {
        PrepareBuilder();
        result.hasBootStrapLast = true;
        result.bootStrapLast_ = value;
        return this;
      }
      public Builder ClearBootStrapLast() {
        PrepareBuilder();
        result.hasBootStrapLast = false;
        result.bootStrapLast_ = false;
        return this;
      }
    }
    static OrderBookNotificationRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class OfferNotificationRequest : pb::GeneratedMessage<OfferNotificationRequest, OfferNotificationRequest.Builder> {
    private OfferNotificationRequest() { }
    private static readonly OfferNotificationRequest defaultInstance = new OfferNotificationRequest().MakeReadOnly();
    private static readonly string[] _offerNotificationRequestFieldNames = new string[] { "claim_result", "claim_result_reason", "event", "object_type", "offer" };
    private static readonly uint[] _offerNotificationRequestFieldTags = new uint[] { 32, 40, 16, 24, 10 };
    public static OfferNotificationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OfferNotificationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OfferNotificationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_OfferNotificationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OfferNotificationRequest, OfferNotificationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_OfferNotificationRequest__FieldAccessorTable; }
    }
    
    public const int OfferFieldNumber = 1;
    private bool hasOffer;
    private global::bnet.protocol.exchange.OfferExtended offer_;
    public bool HasOffer {
      get { return hasOffer; }
    }
    public global::bnet.protocol.exchange.OfferExtended Offer {
      get { return offer_ ?? global::bnet.protocol.exchange.OfferExtended.DefaultInstance; }
    }
    
    public const int EventFieldNumber = 2;
    private bool hasEvent;
    private uint event_;
    public bool HasEvent {
      get { return hasEvent; }
    }
    public uint Event {
      get { return event_; }
    }
    
    public const int ObjectTypeFieldNumber = 3;
    private bool hasObjectType;
    private uint objectType_;
    public bool HasObjectType {
      get { return hasObjectType; }
    }
    public uint ObjectType {
      get { return objectType_; }
    }
    
    public const int ClaimResultFieldNumber = 4;
    private bool hasClaimResult;
    private uint claimResult_;
    public bool HasClaimResult {
      get { return hasClaimResult; }
    }
    public uint ClaimResult {
      get { return claimResult_; }
    }
    
    public const int ClaimResultReasonFieldNumber = 5;
    private bool hasClaimResultReason;
    private uint claimResultReason_;
    public bool HasClaimResultReason {
      get { return hasClaimResultReason; }
    }
    public uint ClaimResultReason {
      get { return claimResultReason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOffer) return false;
        if (!hasEvent) return false;
        if (!Offer.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _offerNotificationRequestFieldNames;
      if (hasOffer) {
        output.WriteMessage(1, field_names[4], Offer);
      }
      if (hasEvent) {
        output.WriteUInt32(2, field_names[2], Event);
      }
      if (hasObjectType) {
        output.WriteUInt32(3, field_names[3], ObjectType);
      }
      if (hasClaimResult) {
        output.WriteUInt32(4, field_names[0], ClaimResult);
      }
      if (hasClaimResultReason) {
        output.WriteUInt32(5, field_names[1], ClaimResultReason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOffer) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Offer);
        }
        if (hasEvent) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Event);
        }
        if (hasObjectType) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, ObjectType);
        }
        if (hasClaimResult) {
          size += pb::CodedOutputStream.ComputeUInt32Size(4, ClaimResult);
        }
        if (hasClaimResultReason) {
          size += pb::CodedOutputStream.ComputeUInt32Size(5, ClaimResultReason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static OfferNotificationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OfferNotificationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OfferNotificationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OfferNotificationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OfferNotificationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OfferNotificationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OfferNotificationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OfferNotificationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OfferNotificationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OfferNotificationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OfferNotificationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OfferNotificationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<OfferNotificationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OfferNotificationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OfferNotificationRequest result;
      
      private OfferNotificationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          OfferNotificationRequest original = result;
          result = new OfferNotificationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OfferNotificationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.OfferNotificationRequest.Descriptor; }
      }
      
      public override OfferNotificationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.OfferNotificationRequest.DefaultInstance; }
      }
      
      public override OfferNotificationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OfferNotificationRequest) {
          return MergeFrom((OfferNotificationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OfferNotificationRequest other) {
        if (other == global::bnet.protocol.exchange.OfferNotificationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOffer) {
          MergeOffer(other.Offer);
        }
        if (other.HasEvent) {
          Event = other.Event;
        }
        if (other.HasObjectType) {
          ObjectType = other.ObjectType;
        }
        if (other.HasClaimResult) {
          ClaimResult = other.ClaimResult;
        }
        if (other.HasClaimResultReason) {
          ClaimResultReason = other.ClaimResultReason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_offerNotificationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _offerNotificationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.OfferExtended.Builder subBuilder = global::bnet.protocol.exchange.OfferExtended.CreateBuilder();
              if (result.hasOffer) {
                subBuilder.MergeFrom(Offer);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Offer = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasEvent = input.ReadUInt32(ref result.event_);
              break;
            }
            case 24: {
              result.hasObjectType = input.ReadUInt32(ref result.objectType_);
              break;
            }
            case 32: {
              result.hasClaimResult = input.ReadUInt32(ref result.claimResult_);
              break;
            }
            case 40: {
              result.hasClaimResultReason = input.ReadUInt32(ref result.claimResultReason_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOffer {
       get { return result.hasOffer; }
      }
      public global::bnet.protocol.exchange.OfferExtended Offer {
        get { return result.Offer; }
        set { SetOffer(value); }
      }
      public Builder SetOffer(global::bnet.protocol.exchange.OfferExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOffer = true;
        result.offer_ = value;
        return this;
      }
      public Builder SetOffer(global::bnet.protocol.exchange.OfferExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOffer = true;
        result.offer_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOffer(global::bnet.protocol.exchange.OfferExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOffer &&
            result.offer_ != global::bnet.protocol.exchange.OfferExtended.DefaultInstance) {
            result.offer_ = global::bnet.protocol.exchange.OfferExtended.CreateBuilder(result.offer_).MergeFrom(value).BuildPartial();
        } else {
          result.offer_ = value;
        }
        result.hasOffer = true;
        return this;
      }
      public Builder ClearOffer() {
        PrepareBuilder();
        result.hasOffer = false;
        result.offer_ = null;
        return this;
      }
      
      public bool HasEvent {
        get { return result.hasEvent; }
      }
      public uint Event {
        get { return result.Event; }
        set { SetEvent(value); }
      }
      public Builder SetEvent(uint value) {
        PrepareBuilder();
        result.hasEvent = true;
        result.event_ = value;
        return this;
      }
      public Builder ClearEvent() {
        PrepareBuilder();
        result.hasEvent = false;
        result.event_ = 0;
        return this;
      }
      
      public bool HasObjectType {
        get { return result.hasObjectType; }
      }
      public uint ObjectType {
        get { return result.ObjectType; }
        set { SetObjectType(value); }
      }
      public Builder SetObjectType(uint value) {
        PrepareBuilder();
        result.hasObjectType = true;
        result.objectType_ = value;
        return this;
      }
      public Builder ClearObjectType() {
        PrepareBuilder();
        result.hasObjectType = false;
        result.objectType_ = 0;
        return this;
      }
      
      public bool HasClaimResult {
        get { return result.hasClaimResult; }
      }
      public uint ClaimResult {
        get { return result.ClaimResult; }
        set { SetClaimResult(value); }
      }
      public Builder SetClaimResult(uint value) {
        PrepareBuilder();
        result.hasClaimResult = true;
        result.claimResult_ = value;
        return this;
      }
      public Builder ClearClaimResult() {
        PrepareBuilder();
        result.hasClaimResult = false;
        result.claimResult_ = 0;
        return this;
      }
      
      public bool HasClaimResultReason {
        get { return result.hasClaimResultReason; }
      }
      public uint ClaimResultReason {
        get { return result.ClaimResultReason; }
        set { SetClaimResultReason(value); }
      }
      public Builder SetClaimResultReason(uint value) {
        PrepareBuilder();
        result.hasClaimResultReason = true;
        result.claimResultReason_ = value;
        return this;
      }
      public Builder ClearClaimResultReason() {
        PrepareBuilder();
        result.hasClaimResultReason = false;
        result.claimResultReason_ = 0;
        return this;
      }
    }
    static OfferNotificationRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class BidNotificationRequest : pb::GeneratedMessage<BidNotificationRequest, BidNotificationRequest.Builder> {
    private BidNotificationRequest() { }
    private static readonly BidNotificationRequest defaultInstance = new BidNotificationRequest().MakeReadOnly();
    private static readonly string[] _bidNotificationRequestFieldNames = new string[] { "bid", "claim_result", "claim_result_reason", "event", "object_type" };
    private static readonly uint[] _bidNotificationRequestFieldTags = new uint[] { 10, 32, 40, 16, 24 };
    public static BidNotificationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BidNotificationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BidNotificationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_BidNotificationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BidNotificationRequest, BidNotificationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_BidNotificationRequest__FieldAccessorTable; }
    }
    
    public const int BidFieldNumber = 1;
    private bool hasBid;
    private global::bnet.protocol.exchange.BidExtended bid_;
    public bool HasBid {
      get { return hasBid; }
    }
    public global::bnet.protocol.exchange.BidExtended Bid {
      get { return bid_ ?? global::bnet.protocol.exchange.BidExtended.DefaultInstance; }
    }
    
    public const int EventFieldNumber = 2;
    private bool hasEvent;
    private uint event_;
    public bool HasEvent {
      get { return hasEvent; }
    }
    public uint Event {
      get { return event_; }
    }
    
    public const int ObjectTypeFieldNumber = 3;
    private bool hasObjectType;
    private uint objectType_;
    public bool HasObjectType {
      get { return hasObjectType; }
    }
    public uint ObjectType {
      get { return objectType_; }
    }
    
    public const int ClaimResultFieldNumber = 4;
    private bool hasClaimResult;
    private uint claimResult_;
    public bool HasClaimResult {
      get { return hasClaimResult; }
    }
    public uint ClaimResult {
      get { return claimResult_; }
    }
    
    public const int ClaimResultReasonFieldNumber = 5;
    private bool hasClaimResultReason;
    private uint claimResultReason_;
    public bool HasClaimResultReason {
      get { return hasClaimResultReason; }
    }
    public uint ClaimResultReason {
      get { return claimResultReason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBid) return false;
        if (!hasEvent) return false;
        if (!Bid.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _bidNotificationRequestFieldNames;
      if (hasBid) {
        output.WriteMessage(1, field_names[0], Bid);
      }
      if (hasEvent) {
        output.WriteUInt32(2, field_names[3], Event);
      }
      if (hasObjectType) {
        output.WriteUInt32(3, field_names[4], ObjectType);
      }
      if (hasClaimResult) {
        output.WriteUInt32(4, field_names[1], ClaimResult);
      }
      if (hasClaimResultReason) {
        output.WriteUInt32(5, field_names[2], ClaimResultReason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBid) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Bid);
        }
        if (hasEvent) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Event);
        }
        if (hasObjectType) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, ObjectType);
        }
        if (hasClaimResult) {
          size += pb::CodedOutputStream.ComputeUInt32Size(4, ClaimResult);
        }
        if (hasClaimResultReason) {
          size += pb::CodedOutputStream.ComputeUInt32Size(5, ClaimResultReason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BidNotificationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BidNotificationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BidNotificationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BidNotificationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BidNotificationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BidNotificationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BidNotificationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BidNotificationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BidNotificationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BidNotificationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BidNotificationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BidNotificationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<BidNotificationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BidNotificationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BidNotificationRequest result;
      
      private BidNotificationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          BidNotificationRequest original = result;
          result = new BidNotificationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BidNotificationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.BidNotificationRequest.Descriptor; }
      }
      
      public override BidNotificationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.BidNotificationRequest.DefaultInstance; }
      }
      
      public override BidNotificationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BidNotificationRequest) {
          return MergeFrom((BidNotificationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BidNotificationRequest other) {
        if (other == global::bnet.protocol.exchange.BidNotificationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBid) {
          MergeBid(other.Bid);
        }
        if (other.HasEvent) {
          Event = other.Event;
        }
        if (other.HasObjectType) {
          ObjectType = other.ObjectType;
        }
        if (other.HasClaimResult) {
          ClaimResult = other.ClaimResult;
        }
        if (other.HasClaimResultReason) {
          ClaimResultReason = other.ClaimResultReason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_bidNotificationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _bidNotificationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.BidExtended.Builder subBuilder = global::bnet.protocol.exchange.BidExtended.CreateBuilder();
              if (result.hasBid) {
                subBuilder.MergeFrom(Bid);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Bid = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasEvent = input.ReadUInt32(ref result.event_);
              break;
            }
            case 24: {
              result.hasObjectType = input.ReadUInt32(ref result.objectType_);
              break;
            }
            case 32: {
              result.hasClaimResult = input.ReadUInt32(ref result.claimResult_);
              break;
            }
            case 40: {
              result.hasClaimResultReason = input.ReadUInt32(ref result.claimResultReason_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBid {
       get { return result.hasBid; }
      }
      public global::bnet.protocol.exchange.BidExtended Bid {
        get { return result.Bid; }
        set { SetBid(value); }
      }
      public Builder SetBid(global::bnet.protocol.exchange.BidExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBid = true;
        result.bid_ = value;
        return this;
      }
      public Builder SetBid(global::bnet.protocol.exchange.BidExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBid = true;
        result.bid_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBid(global::bnet.protocol.exchange.BidExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBid &&
            result.bid_ != global::bnet.protocol.exchange.BidExtended.DefaultInstance) {
            result.bid_ = global::bnet.protocol.exchange.BidExtended.CreateBuilder(result.bid_).MergeFrom(value).BuildPartial();
        } else {
          result.bid_ = value;
        }
        result.hasBid = true;
        return this;
      }
      public Builder ClearBid() {
        PrepareBuilder();
        result.hasBid = false;
        result.bid_ = null;
        return this;
      }
      
      public bool HasEvent {
        get { return result.hasEvent; }
      }
      public uint Event {
        get { return result.Event; }
        set { SetEvent(value); }
      }
      public Builder SetEvent(uint value) {
        PrepareBuilder();
        result.hasEvent = true;
        result.event_ = value;
        return this;
      }
      public Builder ClearEvent() {
        PrepareBuilder();
        result.hasEvent = false;
        result.event_ = 0;
        return this;
      }
      
      public bool HasObjectType {
        get { return result.hasObjectType; }
      }
      public uint ObjectType {
        get { return result.ObjectType; }
        set { SetObjectType(value); }
      }
      public Builder SetObjectType(uint value) {
        PrepareBuilder();
        result.hasObjectType = true;
        result.objectType_ = value;
        return this;
      }
      public Builder ClearObjectType() {
        PrepareBuilder();
        result.hasObjectType = false;
        result.objectType_ = 0;
        return this;
      }
      
      public bool HasClaimResult {
        get { return result.hasClaimResult; }
      }
      public uint ClaimResult {
        get { return result.ClaimResult; }
        set { SetClaimResult(value); }
      }
      public Builder SetClaimResult(uint value) {
        PrepareBuilder();
        result.hasClaimResult = true;
        result.claimResult_ = value;
        return this;
      }
      public Builder ClearClaimResult() {
        PrepareBuilder();
        result.hasClaimResult = false;
        result.claimResult_ = 0;
        return this;
      }
      
      public bool HasClaimResultReason {
        get { return result.hasClaimResultReason; }
      }
      public uint ClaimResultReason {
        get { return result.ClaimResultReason; }
        set { SetClaimResultReason(value); }
      }
      public Builder SetClaimResultReason(uint value) {
        PrepareBuilder();
        result.hasClaimResultReason = true;
        result.claimResultReason_ = value;
        return this;
      }
      public Builder ClearClaimResultReason() {
        PrepareBuilder();
        result.hasClaimResultReason = false;
        result.claimResultReason_ = 0;
        return this;
      }
    }
    static BidNotificationRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CustomNotificationRequest : pb::GeneratedMessage<CustomNotificationRequest, CustomNotificationRequest.Builder> {
    private CustomNotificationRequest() { }
    private static readonly CustomNotificationRequest defaultInstance = new CustomNotificationRequest().MakeReadOnly();
    private static readonly string[] _customNotificationRequestFieldNames = new string[] { "handle", "info", "order_id" };
    private static readonly uint[] _customNotificationRequestFieldTags = new uint[] { 10, 26, 16 };
    public static CustomNotificationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CustomNotificationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CustomNotificationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_CustomNotificationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CustomNotificationRequest, CustomNotificationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_CustomNotificationRequest__FieldAccessorTable; }
    }
    
    public const int HandleFieldNumber = 1;
    private bool hasHandle;
    private global::bnet.protocol.exchange.OrderBookHandle handle_;
    public bool HasHandle {
      get { return hasHandle; }
    }
    public global::bnet.protocol.exchange.OrderBookHandle Handle {
      get { return handle_ ?? global::bnet.protocol.exchange.OrderBookHandle.DefaultInstance; }
    }
    
    public const int OrderIdFieldNumber = 2;
    private bool hasOrderId;
    private ulong orderId_;
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public ulong OrderId {
      get { return orderId_; }
    }
    
    public const int InfoFieldNumber = 3;
    private bool hasInfo;
    private global::bnet.protocol.exchange.BlobFrom info_;
    public bool HasInfo {
      get { return hasInfo; }
    }
    public global::bnet.protocol.exchange.BlobFrom Info {
      get { return info_ ?? global::bnet.protocol.exchange.BlobFrom.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasHandle) return false;
        if (!hasOrderId) return false;
        if (!hasInfo) return false;
        if (!Handle.IsInitialized) return false;
        if (!Info.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _customNotificationRequestFieldNames;
      if (hasHandle) {
        output.WriteMessage(1, field_names[0], Handle);
      }
      if (hasOrderId) {
        output.WriteUInt64(2, field_names[2], OrderId);
      }
      if (hasInfo) {
        output.WriteMessage(3, field_names[1], Info);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Handle);
        }
        if (hasOrderId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, OrderId);
        }
        if (hasInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Info);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CustomNotificationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CustomNotificationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CustomNotificationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CustomNotificationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CustomNotificationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CustomNotificationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CustomNotificationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CustomNotificationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CustomNotificationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CustomNotificationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CustomNotificationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CustomNotificationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CustomNotificationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CustomNotificationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CustomNotificationRequest result;
      
      private CustomNotificationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CustomNotificationRequest original = result;
          result = new CustomNotificationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CustomNotificationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.CustomNotificationRequest.Descriptor; }
      }
      
      public override CustomNotificationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.CustomNotificationRequest.DefaultInstance; }
      }
      
      public override CustomNotificationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CustomNotificationRequest) {
          return MergeFrom((CustomNotificationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CustomNotificationRequest other) {
        if (other == global::bnet.protocol.exchange.CustomNotificationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasHandle) {
          MergeHandle(other.Handle);
        }
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasInfo) {
          MergeInfo(other.Info);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_customNotificationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _customNotificationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.OrderBookHandle.Builder subBuilder = global::bnet.protocol.exchange.OrderBookHandle.CreateBuilder();
              if (result.hasHandle) {
                subBuilder.MergeFrom(Handle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Handle = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasOrderId = input.ReadUInt64(ref result.orderId_);
              break;
            }
            case 26: {
              global::bnet.protocol.exchange.BlobFrom.Builder subBuilder = global::bnet.protocol.exchange.BlobFrom.CreateBuilder();
              if (result.hasInfo) {
                subBuilder.MergeFrom(Info);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Info = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasHandle {
       get { return result.hasHandle; }
      }
      public global::bnet.protocol.exchange.OrderBookHandle Handle {
        get { return result.Handle; }
        set { SetHandle(value); }
      }
      public Builder SetHandle(global::bnet.protocol.exchange.OrderBookHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHandle = true;
        result.handle_ = value;
        return this;
      }
      public Builder SetHandle(global::bnet.protocol.exchange.OrderBookHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasHandle = true;
        result.handle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeHandle(global::bnet.protocol.exchange.OrderBookHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasHandle &&
            result.handle_ != global::bnet.protocol.exchange.OrderBookHandle.DefaultInstance) {
            result.handle_ = global::bnet.protocol.exchange.OrderBookHandle.CreateBuilder(result.handle_).MergeFrom(value).BuildPartial();
        } else {
          result.handle_ = value;
        }
        result.hasHandle = true;
        return this;
      }
      public Builder ClearHandle() {
        PrepareBuilder();
        result.hasHandle = false;
        result.handle_ = null;
        return this;
      }
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      public ulong OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(ulong value) {
        PrepareBuilder();
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        PrepareBuilder();
        result.hasOrderId = false;
        result.orderId_ = 0UL;
        return this;
      }
      
      public bool HasInfo {
       get { return result.hasInfo; }
      }
      public global::bnet.protocol.exchange.BlobFrom Info {
        get { return result.Info; }
        set { SetInfo(value); }
      }
      public Builder SetInfo(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInfo = true;
        result.info_ = value;
        return this;
      }
      public Builder SetInfo(global::bnet.protocol.exchange.BlobFrom.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInfo = true;
        result.info_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInfo(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInfo &&
            result.info_ != global::bnet.protocol.exchange.BlobFrom.DefaultInstance) {
            result.info_ = global::bnet.protocol.exchange.BlobFrom.CreateBuilder(result.info_).MergeFrom(value).BuildPartial();
        } else {
          result.info_ = value;
        }
        result.hasInfo = true;
        return this;
      }
      public Builder ClearInfo() {
        PrepareBuilder();
        result.hasInfo = false;
        result.info_ = null;
        return this;
      }
    }
    static CustomNotificationRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueryOrdersByAccountForItemRequest : pb::GeneratedMessage<QueryOrdersByAccountForItemRequest, QueryOrdersByAccountForItemRequest.Builder> {
    private QueryOrdersByAccountForItemRequest() { }
    private static readonly QueryOrdersByAccountForItemRequest defaultInstance = new QueryOrdersByAccountForItemRequest().MakeReadOnly();
    private static readonly string[] _queryOrdersByAccountForItemRequestFieldNames = new string[] { "account_for_item", "bnet_account", "filter" };
    private static readonly uint[] _queryOrdersByAccountForItemRequestFieldTags = new uint[] { 10, 18, 26 };
    public static QueryOrdersByAccountForItemRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryOrdersByAccountForItemRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryOrdersByAccountForItemRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOrdersByAccountForItemRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryOrdersByAccountForItemRequest, QueryOrdersByAccountForItemRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOrdersByAccountForItemRequest__FieldAccessorTable; }
    }
    
    public const int AccountForItemFieldNumber = 1;
    private bool hasAccountForItem;
    private global::bnet.protocol.exchange.BlobFrom accountForItem_;
    public bool HasAccountForItem {
      get { return hasAccountForItem; }
    }
    public global::bnet.protocol.exchange.BlobFrom AccountForItem {
      get { return accountForItem_ ?? global::bnet.protocol.exchange.BlobFrom.DefaultInstance; }
    }
    
    public const int BnetAccountFieldNumber = 2;
    private bool hasBnetAccount;
    private global::bnet.protocol.EntityId bnetAccount_;
    public bool HasBnetAccount {
      get { return hasBnetAccount; }
    }
    public global::bnet.protocol.EntityId BnetAccount {
      get { return bnetAccount_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int FilterFieldNumber = 3;
    private bool hasFilter;
    private global::bnet.protocol.exchange.QueryOrderFilter filter_;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::bnet.protocol.exchange.QueryOrderFilter Filter {
      get { return filter_ ?? global::bnet.protocol.exchange.QueryOrderFilter.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccountForItem) return false;
        if (!hasFilter) return false;
        if (!AccountForItem.IsInitialized) return false;
        if (HasBnetAccount) {
          if (!BnetAccount.IsInitialized) return false;
        }
        if (!Filter.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryOrdersByAccountForItemRequestFieldNames;
      if (hasAccountForItem) {
        output.WriteMessage(1, field_names[0], AccountForItem);
      }
      if (hasBnetAccount) {
        output.WriteMessage(2, field_names[1], BnetAccount);
      }
      if (hasFilter) {
        output.WriteMessage(3, field_names[2], Filter);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAccountForItem) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AccountForItem);
        }
        if (hasBnetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, BnetAccount);
        }
        if (hasFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Filter);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryOrdersByAccountForItemRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOrdersByAccountForItemRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOrdersByAccountForItemRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOrdersByAccountForItemRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOrdersByAccountForItemRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOrdersByAccountForItemRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryOrdersByAccountForItemRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryOrdersByAccountForItemRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryOrdersByAccountForItemRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOrdersByAccountForItemRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryOrdersByAccountForItemRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryOrdersByAccountForItemRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryOrdersByAccountForItemRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryOrdersByAccountForItemRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryOrdersByAccountForItemRequest result;
      
      private QueryOrdersByAccountForItemRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryOrdersByAccountForItemRequest original = result;
          result = new QueryOrdersByAccountForItemRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryOrdersByAccountForItemRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryOrdersByAccountForItemRequest.Descriptor; }
      }
      
      public override QueryOrdersByAccountForItemRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryOrdersByAccountForItemRequest.DefaultInstance; }
      }
      
      public override QueryOrdersByAccountForItemRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryOrdersByAccountForItemRequest) {
          return MergeFrom((QueryOrdersByAccountForItemRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryOrdersByAccountForItemRequest other) {
        if (other == global::bnet.protocol.exchange.QueryOrdersByAccountForItemRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccountForItem) {
          MergeAccountForItem(other.AccountForItem);
        }
        if (other.HasBnetAccount) {
          MergeBnetAccount(other.BnetAccount);
        }
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryOrdersByAccountForItemRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryOrdersByAccountForItemRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.BlobFrom.Builder subBuilder = global::bnet.protocol.exchange.BlobFrom.CreateBuilder();
              if (result.hasAccountForItem) {
                subBuilder.MergeFrom(AccountForItem);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountForItem = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBnetAccount) {
                subBuilder.MergeFrom(BnetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccount = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.exchange.QueryOrderFilter.Builder subBuilder = global::bnet.protocol.exchange.QueryOrderFilter.CreateBuilder();
              if (result.hasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccountForItem {
       get { return result.hasAccountForItem; }
      }
      public global::bnet.protocol.exchange.BlobFrom AccountForItem {
        get { return result.AccountForItem; }
        set { SetAccountForItem(value); }
      }
      public Builder SetAccountForItem(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountForItem = true;
        result.accountForItem_ = value;
        return this;
      }
      public Builder SetAccountForItem(global::bnet.protocol.exchange.BlobFrom.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountForItem = true;
        result.accountForItem_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountForItem(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountForItem &&
            result.accountForItem_ != global::bnet.protocol.exchange.BlobFrom.DefaultInstance) {
            result.accountForItem_ = global::bnet.protocol.exchange.BlobFrom.CreateBuilder(result.accountForItem_).MergeFrom(value).BuildPartial();
        } else {
          result.accountForItem_ = value;
        }
        result.hasAccountForItem = true;
        return this;
      }
      public Builder ClearAccountForItem() {
        PrepareBuilder();
        result.hasAccountForItem = false;
        result.accountForItem_ = null;
        return this;
      }
      
      public bool HasBnetAccount {
       get { return result.hasBnetAccount; }
      }
      public global::bnet.protocol.EntityId BnetAccount {
        get { return result.BnetAccount; }
        set { SetBnetAccount(value); }
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = value;
        return this;
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBnetAccount &&
            result.bnetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccount_ = value;
        }
        result.hasBnetAccount = true;
        return this;
      }
      public Builder ClearBnetAccount() {
        PrepareBuilder();
        result.hasBnetAccount = false;
        result.bnetAccount_ = null;
        return this;
      }
      
      public bool HasFilter {
       get { return result.hasFilter; }
      }
      public global::bnet.protocol.exchange.QueryOrderFilter Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryOrderFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::bnet.protocol.exchange.QueryOrderFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::bnet.protocol.exchange.QueryOrderFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFilter &&
            result.filter_ != global::bnet.protocol.exchange.QueryOrderFilter.DefaultInstance) {
            result.filter_ = global::bnet.protocol.exchange.QueryOrderFilter.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = null;
        return this;
      }
    }
    static QueryOrdersByAccountForItemRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueryOrdersByAccountForItemResponse : pb::GeneratedMessage<QueryOrdersByAccountForItemResponse, QueryOrdersByAccountForItemResponse.Builder> {
    private QueryOrdersByAccountForItemResponse() { }
    private static readonly QueryOrdersByAccountForItemResponse defaultInstance = new QueryOrdersByAccountForItemResponse().MakeReadOnly();
    private static readonly string[] _queryOrdersByAccountForItemResponseFieldNames = new string[] { "orders", "total_count" };
    private static readonly uint[] _queryOrdersByAccountForItemResponseFieldTags = new uint[] { 10, 16 };
    public static QueryOrdersByAccountForItemResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryOrdersByAccountForItemResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryOrdersByAccountForItemResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOrdersByAccountForItemResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryOrdersByAccountForItemResponse, QueryOrdersByAccountForItemResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_QueryOrdersByAccountForItemResponse__FieldAccessorTable; }
    }
    
    public const int OrdersFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.OrderExtended> orders_ = new pbc::PopsicleList<global::bnet.protocol.exchange.OrderExtended>();
    public scg::IList<global::bnet.protocol.exchange.OrderExtended> OrdersList {
      get { return orders_; }
    }
    public int OrdersCount {
      get { return orders_.Count; }
    }
    public global::bnet.protocol.exchange.OrderExtended GetOrders(int index) {
      return orders_[index];
    }
    
    public const int TotalCountFieldNumber = 2;
    private bool hasTotalCount;
    private uint totalCount_;
    public bool HasTotalCount {
      get { return hasTotalCount; }
    }
    public uint TotalCount {
      get { return totalCount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTotalCount) return false;
        foreach (global::bnet.protocol.exchange.OrderExtended element in OrdersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryOrdersByAccountForItemResponseFieldNames;
      if (orders_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], orders_);
      }
      if (hasTotalCount) {
        output.WriteUInt32(2, field_names[1], TotalCount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.OrderExtended element in OrdersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasTotalCount) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, TotalCount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryOrdersByAccountForItemResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOrdersByAccountForItemResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOrdersByAccountForItemResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOrdersByAccountForItemResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOrdersByAccountForItemResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOrdersByAccountForItemResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryOrdersByAccountForItemResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryOrdersByAccountForItemResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryOrdersByAccountForItemResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOrdersByAccountForItemResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryOrdersByAccountForItemResponse MakeReadOnly() {
      orders_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryOrdersByAccountForItemResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryOrdersByAccountForItemResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryOrdersByAccountForItemResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryOrdersByAccountForItemResponse result;
      
      private QueryOrdersByAccountForItemResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryOrdersByAccountForItemResponse original = result;
          result = new QueryOrdersByAccountForItemResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryOrdersByAccountForItemResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryOrdersByAccountForItemResponse.Descriptor; }
      }
      
      public override QueryOrdersByAccountForItemResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryOrdersByAccountForItemResponse.DefaultInstance; }
      }
      
      public override QueryOrdersByAccountForItemResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryOrdersByAccountForItemResponse) {
          return MergeFrom((QueryOrdersByAccountForItemResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryOrdersByAccountForItemResponse other) {
        if (other == global::bnet.protocol.exchange.QueryOrdersByAccountForItemResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.orders_.Count != 0) {
          result.orders_.Add(other.orders_);
        }
        if (other.HasTotalCount) {
          TotalCount = other.TotalCount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryOrdersByAccountForItemResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryOrdersByAccountForItemResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.orders_, global::bnet.protocol.exchange.OrderExtended.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasTotalCount = input.ReadUInt32(ref result.totalCount_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.OrderExtended> OrdersList {
        get { return PrepareBuilder().orders_; }
      }
      public int OrdersCount {
        get { return result.OrdersCount; }
      }
      public global::bnet.protocol.exchange.OrderExtended GetOrders(int index) {
        return result.GetOrders(index);
      }
      public Builder SetOrders(int index, global::bnet.protocol.exchange.OrderExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.orders_[index] = value;
        return this;
      }
      public Builder SetOrders(int index, global::bnet.protocol.exchange.OrderExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.orders_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddOrders(global::bnet.protocol.exchange.OrderExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.orders_.Add(value);
        return this;
      }
      public Builder AddOrders(global::bnet.protocol.exchange.OrderExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.orders_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeOrders(scg::IEnumerable<global::bnet.protocol.exchange.OrderExtended> values) {
        PrepareBuilder();
        result.orders_.Add(values);
        return this;
      }
      public Builder ClearOrders() {
        PrepareBuilder();
        result.orders_.Clear();
        return this;
      }
      
      public bool HasTotalCount {
        get { return result.hasTotalCount; }
      }
      public uint TotalCount {
        get { return result.TotalCount; }
        set { SetTotalCount(value); }
      }
      public Builder SetTotalCount(uint value) {
        PrepareBuilder();
        result.hasTotalCount = true;
        result.totalCount_ = value;
        return this;
      }
      public Builder ClearTotalCount() {
        PrepareBuilder();
        result.hasTotalCount = false;
        result.totalCount_ = 0;
        return this;
      }
    }
    static QueryOrdersByAccountForItemResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetFeeDetailsRequest : pb::GeneratedMessage<GetFeeDetailsRequest, GetFeeDetailsRequest.Builder> {
    private GetFeeDetailsRequest() { }
    private static readonly GetFeeDetailsRequest defaultInstance = new GetFeeDetailsRequest().MakeReadOnly();
    private static readonly string[] _getFeeDetailsRequestFieldNames = new string[] { "bnet_account", "order_id", "partition_id" };
    private static readonly uint[] _getFeeDetailsRequestFieldTags = new uint[] { 26, 16, 10 };
    public static GetFeeDetailsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetFeeDetailsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetFeeDetailsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetFeeDetailsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetFeeDetailsRequest, GetFeeDetailsRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetFeeDetailsRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int OrderIdFieldNumber = 2;
    private bool hasOrderId;
    private ulong orderId_;
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public ulong OrderId {
      get { return orderId_; }
    }
    
    public const int BnetAccountFieldNumber = 3;
    private bool hasBnetAccount;
    private global::bnet.protocol.EntityId bnetAccount_;
    public bool HasBnetAccount {
      get { return hasBnetAccount; }
    }
    public global::bnet.protocol.EntityId BnetAccount {
      get { return bnetAccount_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOrderId) return false;
        if (!PartitionId.IsInitialized) return false;
        if (HasBnetAccount) {
          if (!BnetAccount.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getFeeDetailsRequestFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[2], PartitionId);
      }
      if (hasOrderId) {
        output.WriteUInt64(2, field_names[1], OrderId);
      }
      if (hasBnetAccount) {
        output.WriteMessage(3, field_names[0], BnetAccount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasOrderId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, OrderId);
        }
        if (hasBnetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, BnetAccount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetFeeDetailsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFeeDetailsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFeeDetailsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFeeDetailsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFeeDetailsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFeeDetailsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetFeeDetailsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetFeeDetailsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetFeeDetailsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFeeDetailsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetFeeDetailsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetFeeDetailsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetFeeDetailsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetFeeDetailsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetFeeDetailsRequest result;
      
      private GetFeeDetailsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetFeeDetailsRequest original = result;
          result = new GetFeeDetailsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetFeeDetailsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetFeeDetailsRequest.Descriptor; }
      }
      
      public override GetFeeDetailsRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetFeeDetailsRequest.DefaultInstance; }
      }
      
      public override GetFeeDetailsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetFeeDetailsRequest) {
          return MergeFrom((GetFeeDetailsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetFeeDetailsRequest other) {
        if (other == global::bnet.protocol.exchange.GetFeeDetailsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasBnetAccount) {
          MergeBnetAccount(other.BnetAccount);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getFeeDetailsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getFeeDetailsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasOrderId = input.ReadUInt64(ref result.orderId_);
              break;
            }
            case 26: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBnetAccount) {
                subBuilder.MergeFrom(BnetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccount = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      public ulong OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(ulong value) {
        PrepareBuilder();
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        PrepareBuilder();
        result.hasOrderId = false;
        result.orderId_ = 0UL;
        return this;
      }
      
      public bool HasBnetAccount {
       get { return result.hasBnetAccount; }
      }
      public global::bnet.protocol.EntityId BnetAccount {
        get { return result.BnetAccount; }
        set { SetBnetAccount(value); }
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = value;
        return this;
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBnetAccount &&
            result.bnetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccount_ = value;
        }
        result.hasBnetAccount = true;
        return this;
      }
      public Builder ClearBnetAccount() {
        PrepareBuilder();
        result.hasBnetAccount = false;
        result.bnetAccount_ = null;
        return this;
      }
    }
    static GetFeeDetailsRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetFeeDetailsResponse : pb::GeneratedMessage<GetFeeDetailsResponse, GetFeeDetailsResponse.Builder> {
    private GetFeeDetailsResponse() { }
    private static readonly GetFeeDetailsResponse defaultInstance = new GetFeeDetailsResponse().MakeReadOnly();
    private static readonly string[] _getFeeDetailsResponseFieldNames = new string[] { "fee_details_in", "fee_details_out" };
    private static readonly uint[] _getFeeDetailsResponseFieldTags = new uint[] { 10, 18 };
    public static GetFeeDetailsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetFeeDetailsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetFeeDetailsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetFeeDetailsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetFeeDetailsResponse, GetFeeDetailsResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetFeeDetailsResponse__FieldAccessorTable; }
    }
    
    public const int FeeDetailsInFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.FeeDetail> feeDetailsIn_ = new pbc::PopsicleList<global::bnet.protocol.exchange.FeeDetail>();
    public scg::IList<global::bnet.protocol.exchange.FeeDetail> FeeDetailsInList {
      get { return feeDetailsIn_; }
    }
    public int FeeDetailsInCount {
      get { return feeDetailsIn_.Count; }
    }
    public global::bnet.protocol.exchange.FeeDetail GetFeeDetailsIn(int index) {
      return feeDetailsIn_[index];
    }
    
    public const int FeeDetailsOutFieldNumber = 2;
    private pbc::PopsicleList<global::bnet.protocol.exchange.FeeDetail> feeDetailsOut_ = new pbc::PopsicleList<global::bnet.protocol.exchange.FeeDetail>();
    public scg::IList<global::bnet.protocol.exchange.FeeDetail> FeeDetailsOutList {
      get { return feeDetailsOut_; }
    }
    public int FeeDetailsOutCount {
      get { return feeDetailsOut_.Count; }
    }
    public global::bnet.protocol.exchange.FeeDetail GetFeeDetailsOut(int index) {
      return feeDetailsOut_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.exchange.FeeDetail element in FeeDetailsInList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.exchange.FeeDetail element in FeeDetailsOutList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getFeeDetailsResponseFieldNames;
      if (feeDetailsIn_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], feeDetailsIn_);
      }
      if (feeDetailsOut_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], feeDetailsOut_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.FeeDetail element in FeeDetailsInList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        foreach (global::bnet.protocol.exchange.FeeDetail element in FeeDetailsOutList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetFeeDetailsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFeeDetailsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFeeDetailsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetFeeDetailsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetFeeDetailsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFeeDetailsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetFeeDetailsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetFeeDetailsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetFeeDetailsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetFeeDetailsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetFeeDetailsResponse MakeReadOnly() {
      feeDetailsIn_.MakeReadOnly();
      feeDetailsOut_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetFeeDetailsResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetFeeDetailsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetFeeDetailsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetFeeDetailsResponse result;
      
      private GetFeeDetailsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetFeeDetailsResponse original = result;
          result = new GetFeeDetailsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetFeeDetailsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetFeeDetailsResponse.Descriptor; }
      }
      
      public override GetFeeDetailsResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetFeeDetailsResponse.DefaultInstance; }
      }
      
      public override GetFeeDetailsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetFeeDetailsResponse) {
          return MergeFrom((GetFeeDetailsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetFeeDetailsResponse other) {
        if (other == global::bnet.protocol.exchange.GetFeeDetailsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.feeDetailsIn_.Count != 0) {
          result.feeDetailsIn_.Add(other.feeDetailsIn_);
        }
        if (other.feeDetailsOut_.Count != 0) {
          result.feeDetailsOut_.Add(other.feeDetailsOut_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getFeeDetailsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getFeeDetailsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.feeDetailsIn_, global::bnet.protocol.exchange.FeeDetail.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.feeDetailsOut_, global::bnet.protocol.exchange.FeeDetail.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.FeeDetail> FeeDetailsInList {
        get { return PrepareBuilder().feeDetailsIn_; }
      }
      public int FeeDetailsInCount {
        get { return result.FeeDetailsInCount; }
      }
      public global::bnet.protocol.exchange.FeeDetail GetFeeDetailsIn(int index) {
        return result.GetFeeDetailsIn(index);
      }
      public Builder SetFeeDetailsIn(int index, global::bnet.protocol.exchange.FeeDetail value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.feeDetailsIn_[index] = value;
        return this;
      }
      public Builder SetFeeDetailsIn(int index, global::bnet.protocol.exchange.FeeDetail.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.feeDetailsIn_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFeeDetailsIn(global::bnet.protocol.exchange.FeeDetail value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.feeDetailsIn_.Add(value);
        return this;
      }
      public Builder AddFeeDetailsIn(global::bnet.protocol.exchange.FeeDetail.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.feeDetailsIn_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFeeDetailsIn(scg::IEnumerable<global::bnet.protocol.exchange.FeeDetail> values) {
        PrepareBuilder();
        result.feeDetailsIn_.Add(values);
        return this;
      }
      public Builder ClearFeeDetailsIn() {
        PrepareBuilder();
        result.feeDetailsIn_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.FeeDetail> FeeDetailsOutList {
        get { return PrepareBuilder().feeDetailsOut_; }
      }
      public int FeeDetailsOutCount {
        get { return result.FeeDetailsOutCount; }
      }
      public global::bnet.protocol.exchange.FeeDetail GetFeeDetailsOut(int index) {
        return result.GetFeeDetailsOut(index);
      }
      public Builder SetFeeDetailsOut(int index, global::bnet.protocol.exchange.FeeDetail value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.feeDetailsOut_[index] = value;
        return this;
      }
      public Builder SetFeeDetailsOut(int index, global::bnet.protocol.exchange.FeeDetail.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.feeDetailsOut_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFeeDetailsOut(global::bnet.protocol.exchange.FeeDetail value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.feeDetailsOut_.Add(value);
        return this;
      }
      public Builder AddFeeDetailsOut(global::bnet.protocol.exchange.FeeDetail.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.feeDetailsOut_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFeeDetailsOut(scg::IEnumerable<global::bnet.protocol.exchange.FeeDetail> values) {
        PrepareBuilder();
        result.feeDetailsOut_.Add(values);
        return this;
      }
      public Builder ClearFeeDetailsOut() {
        PrepareBuilder();
        result.feeDetailsOut_.Clear();
        return this;
      }
    }
    static GetFeeDetailsResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetOrderBookStatisticsRequest : pb::GeneratedMessage<GetOrderBookStatisticsRequest, GetOrderBookStatisticsRequest.Builder> {
    private GetOrderBookStatisticsRequest() { }
    private static readonly GetOrderBookStatisticsRequest defaultInstance = new GetOrderBookStatisticsRequest().MakeReadOnly();
    private static readonly string[] _getOrderBookStatisticsRequestFieldNames = new string[] { "last_days", "last_trades", "order_type", "partition_id", "quantity" };
    private static readonly uint[] _getOrderBookStatisticsRequestFieldTags = new uint[] { 40, 32, 16, 10, 24 };
    public static GetOrderBookStatisticsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetOrderBookStatisticsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetOrderBookStatisticsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetOrderBookStatisticsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetOrderBookStatisticsRequest, GetOrderBookStatisticsRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetOrderBookStatisticsRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int OrderTypeFieldNumber = 2;
    private bool hasOrderType;
    private uint orderType_;
    public bool HasOrderType {
      get { return hasOrderType; }
    }
    public uint OrderType {
      get { return orderType_; }
    }
    
    public const int QuantityFieldNumber = 3;
    private bool hasQuantity;
    private ulong quantity_;
    public bool HasQuantity {
      get { return hasQuantity; }
    }
    public ulong Quantity {
      get { return quantity_; }
    }
    
    public const int LastTradesFieldNumber = 4;
    private bool hasLastTrades;
    private uint lastTrades_;
    public bool HasLastTrades {
      get { return hasLastTrades; }
    }
    public uint LastTrades {
      get { return lastTrades_; }
    }
    
    public const int LastDaysFieldNumber = 5;
    private bool hasLastDays;
    private uint lastDays_;
    public bool HasLastDays {
      get { return hasLastDays; }
    }
    public uint LastDays {
      get { return lastDays_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOrderType) return false;
        if (!hasQuantity) return false;
        if (!hasLastTrades) return false;
        if (!hasLastDays) return false;
        if (!PartitionId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getOrderBookStatisticsRequestFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[3], PartitionId);
      }
      if (hasOrderType) {
        output.WriteUInt32(2, field_names[2], OrderType);
      }
      if (hasQuantity) {
        output.WriteUInt64(3, field_names[4], Quantity);
      }
      if (hasLastTrades) {
        output.WriteUInt32(4, field_names[1], LastTrades);
      }
      if (hasLastDays) {
        output.WriteUInt32(5, field_names[0], LastDays);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasOrderType) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, OrderType);
        }
        if (hasQuantity) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, Quantity);
        }
        if (hasLastTrades) {
          size += pb::CodedOutputStream.ComputeUInt32Size(4, LastTrades);
        }
        if (hasLastDays) {
          size += pb::CodedOutputStream.ComputeUInt32Size(5, LastDays);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetOrderBookStatisticsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetOrderBookStatisticsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetOrderBookStatisticsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetOrderBookStatisticsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetOrderBookStatisticsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetOrderBookStatisticsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetOrderBookStatisticsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetOrderBookStatisticsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetOrderBookStatisticsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetOrderBookStatisticsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetOrderBookStatisticsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetOrderBookStatisticsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetOrderBookStatisticsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetOrderBookStatisticsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetOrderBookStatisticsRequest result;
      
      private GetOrderBookStatisticsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetOrderBookStatisticsRequest original = result;
          result = new GetOrderBookStatisticsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetOrderBookStatisticsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetOrderBookStatisticsRequest.Descriptor; }
      }
      
      public override GetOrderBookStatisticsRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetOrderBookStatisticsRequest.DefaultInstance; }
      }
      
      public override GetOrderBookStatisticsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetOrderBookStatisticsRequest) {
          return MergeFrom((GetOrderBookStatisticsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetOrderBookStatisticsRequest other) {
        if (other == global::bnet.protocol.exchange.GetOrderBookStatisticsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderType) {
          OrderType = other.OrderType;
        }
        if (other.HasQuantity) {
          Quantity = other.Quantity;
        }
        if (other.HasLastTrades) {
          LastTrades = other.LastTrades;
        }
        if (other.HasLastDays) {
          LastDays = other.LastDays;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getOrderBookStatisticsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getOrderBookStatisticsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasOrderType = input.ReadUInt32(ref result.orderType_);
              break;
            }
            case 24: {
              result.hasQuantity = input.ReadUInt64(ref result.quantity_);
              break;
            }
            case 32: {
              result.hasLastTrades = input.ReadUInt32(ref result.lastTrades_);
              break;
            }
            case 40: {
              result.hasLastDays = input.ReadUInt32(ref result.lastDays_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasOrderType {
        get { return result.hasOrderType; }
      }
      public uint OrderType {
        get { return result.OrderType; }
        set { SetOrderType(value); }
      }
      public Builder SetOrderType(uint value) {
        PrepareBuilder();
        result.hasOrderType = true;
        result.orderType_ = value;
        return this;
      }
      public Builder ClearOrderType() {
        PrepareBuilder();
        result.hasOrderType = false;
        result.orderType_ = 0;
        return this;
      }
      
      public bool HasQuantity {
        get { return result.hasQuantity; }
      }
      public ulong Quantity {
        get { return result.Quantity; }
        set { SetQuantity(value); }
      }
      public Builder SetQuantity(ulong value) {
        PrepareBuilder();
        result.hasQuantity = true;
        result.quantity_ = value;
        return this;
      }
      public Builder ClearQuantity() {
        PrepareBuilder();
        result.hasQuantity = false;
        result.quantity_ = 0UL;
        return this;
      }
      
      public bool HasLastTrades {
        get { return result.hasLastTrades; }
      }
      public uint LastTrades {
        get { return result.LastTrades; }
        set { SetLastTrades(value); }
      }
      public Builder SetLastTrades(uint value) {
        PrepareBuilder();
        result.hasLastTrades = true;
        result.lastTrades_ = value;
        return this;
      }
      public Builder ClearLastTrades() {
        PrepareBuilder();
        result.hasLastTrades = false;
        result.lastTrades_ = 0;
        return this;
      }
      
      public bool HasLastDays {
        get { return result.hasLastDays; }
      }
      public uint LastDays {
        get { return result.LastDays; }
        set { SetLastDays(value); }
      }
      public Builder SetLastDays(uint value) {
        PrepareBuilder();
        result.hasLastDays = true;
        result.lastDays_ = value;
        return this;
      }
      public Builder ClearLastDays() {
        PrepareBuilder();
        result.hasLastDays = false;
        result.lastDays_ = 0;
        return this;
      }
    }
    static GetOrderBookStatisticsRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetOrderBookStatisticsResponse : pb::GeneratedMessage<GetOrderBookStatisticsResponse, GetOrderBookStatisticsResponse.Builder> {
    private GetOrderBookStatisticsResponse() { }
    private static readonly GetOrderBookStatisticsResponse defaultInstance = new GetOrderBookStatisticsResponse().MakeReadOnly();
    private static readonly string[] _getOrderBookStatisticsResponseFieldNames = new string[] { "last_days_average", "last_trades_average", "price_details" };
    private static readonly uint[] _getOrderBookStatisticsResponseFieldTags = new uint[] { 24, 16, 10 };
    public static GetOrderBookStatisticsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetOrderBookStatisticsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetOrderBookStatisticsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetOrderBookStatisticsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetOrderBookStatisticsResponse, GetOrderBookStatisticsResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetOrderBookStatisticsResponse__FieldAccessorTable; }
    }
    
    public const int PriceDetailsFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.PriceDetail> priceDetails_ = new pbc::PopsicleList<global::bnet.protocol.exchange.PriceDetail>();
    public scg::IList<global::bnet.protocol.exchange.PriceDetail> PriceDetailsList {
      get { return priceDetails_; }
    }
    public int PriceDetailsCount {
      get { return priceDetails_.Count; }
    }
    public global::bnet.protocol.exchange.PriceDetail GetPriceDetails(int index) {
      return priceDetails_[index];
    }
    
    public const int LastTradesAverageFieldNumber = 2;
    private bool hasLastTradesAverage;
    private ulong lastTradesAverage_;
    public bool HasLastTradesAverage {
      get { return hasLastTradesAverage; }
    }
    public ulong LastTradesAverage {
      get { return lastTradesAverage_; }
    }
    
    public const int LastDaysAverageFieldNumber = 3;
    private bool hasLastDaysAverage;
    private ulong lastDaysAverage_;
    public bool HasLastDaysAverage {
      get { return hasLastDaysAverage; }
    }
    public ulong LastDaysAverage {
      get { return lastDaysAverage_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasLastTradesAverage) return false;
        if (!hasLastDaysAverage) return false;
        foreach (global::bnet.protocol.exchange.PriceDetail element in PriceDetailsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getOrderBookStatisticsResponseFieldNames;
      if (priceDetails_.Count > 0) {
        output.WriteMessageArray(1, field_names[2], priceDetails_);
      }
      if (hasLastTradesAverage) {
        output.WriteUInt64(2, field_names[1], LastTradesAverage);
      }
      if (hasLastDaysAverage) {
        output.WriteUInt64(3, field_names[0], LastDaysAverage);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.PriceDetail element in PriceDetailsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasLastTradesAverage) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, LastTradesAverage);
        }
        if (hasLastDaysAverage) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, LastDaysAverage);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetOrderBookStatisticsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetOrderBookStatisticsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetOrderBookStatisticsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetOrderBookStatisticsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetOrderBookStatisticsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetOrderBookStatisticsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetOrderBookStatisticsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetOrderBookStatisticsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetOrderBookStatisticsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetOrderBookStatisticsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetOrderBookStatisticsResponse MakeReadOnly() {
      priceDetails_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetOrderBookStatisticsResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetOrderBookStatisticsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetOrderBookStatisticsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetOrderBookStatisticsResponse result;
      
      private GetOrderBookStatisticsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetOrderBookStatisticsResponse original = result;
          result = new GetOrderBookStatisticsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetOrderBookStatisticsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetOrderBookStatisticsResponse.Descriptor; }
      }
      
      public override GetOrderBookStatisticsResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetOrderBookStatisticsResponse.DefaultInstance; }
      }
      
      public override GetOrderBookStatisticsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetOrderBookStatisticsResponse) {
          return MergeFrom((GetOrderBookStatisticsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetOrderBookStatisticsResponse other) {
        if (other == global::bnet.protocol.exchange.GetOrderBookStatisticsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.priceDetails_.Count != 0) {
          result.priceDetails_.Add(other.priceDetails_);
        }
        if (other.HasLastTradesAverage) {
          LastTradesAverage = other.LastTradesAverage;
        }
        if (other.HasLastDaysAverage) {
          LastDaysAverage = other.LastDaysAverage;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getOrderBookStatisticsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getOrderBookStatisticsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.priceDetails_, global::bnet.protocol.exchange.PriceDetail.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasLastTradesAverage = input.ReadUInt64(ref result.lastTradesAverage_);
              break;
            }
            case 24: {
              result.hasLastDaysAverage = input.ReadUInt64(ref result.lastDaysAverage_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.PriceDetail> PriceDetailsList {
        get { return PrepareBuilder().priceDetails_; }
      }
      public int PriceDetailsCount {
        get { return result.PriceDetailsCount; }
      }
      public global::bnet.protocol.exchange.PriceDetail GetPriceDetails(int index) {
        return result.GetPriceDetails(index);
      }
      public Builder SetPriceDetails(int index, global::bnet.protocol.exchange.PriceDetail value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.priceDetails_[index] = value;
        return this;
      }
      public Builder SetPriceDetails(int index, global::bnet.protocol.exchange.PriceDetail.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.priceDetails_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPriceDetails(global::bnet.protocol.exchange.PriceDetail value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.priceDetails_.Add(value);
        return this;
      }
      public Builder AddPriceDetails(global::bnet.protocol.exchange.PriceDetail.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.priceDetails_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePriceDetails(scg::IEnumerable<global::bnet.protocol.exchange.PriceDetail> values) {
        PrepareBuilder();
        result.priceDetails_.Add(values);
        return this;
      }
      public Builder ClearPriceDetails() {
        PrepareBuilder();
        result.priceDetails_.Clear();
        return this;
      }
      
      public bool HasLastTradesAverage {
        get { return result.hasLastTradesAverage; }
      }
      public ulong LastTradesAverage {
        get { return result.LastTradesAverage; }
        set { SetLastTradesAverage(value); }
      }
      public Builder SetLastTradesAverage(ulong value) {
        PrepareBuilder();
        result.hasLastTradesAverage = true;
        result.lastTradesAverage_ = value;
        return this;
      }
      public Builder ClearLastTradesAverage() {
        PrepareBuilder();
        result.hasLastTradesAverage = false;
        result.lastTradesAverage_ = 0UL;
        return this;
      }
      
      public bool HasLastDaysAverage {
        get { return result.hasLastDaysAverage; }
      }
      public ulong LastDaysAverage {
        get { return result.LastDaysAverage; }
        set { SetLastDaysAverage(value); }
      }
      public Builder SetLastDaysAverage(ulong value) {
        PrepareBuilder();
        result.hasLastDaysAverage = true;
        result.lastDaysAverage_ = value;
        return this;
      }
      public Builder ClearLastDaysAverage() {
        PrepareBuilder();
        result.hasLastDaysAverage = false;
        result.lastDaysAverage_ = 0UL;
        return this;
      }
    }
    static GetOrderBookStatisticsResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetBidDetailsRequest : pb::GeneratedMessage<GetBidDetailsRequest, GetBidDetailsRequest.Builder> {
    private GetBidDetailsRequest() { }
    private static readonly GetBidDetailsRequest defaultInstance = new GetBidDetailsRequest().MakeReadOnly();
    private static readonly string[] _getBidDetailsRequestFieldNames = new string[] { "order_id", "partition_id" };
    private static readonly uint[] _getBidDetailsRequestFieldTags = new uint[] { 8, 18 };
    public static GetBidDetailsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetBidDetailsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetBidDetailsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetBidDetailsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetBidDetailsRequest, GetBidDetailsRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetBidDetailsRequest__FieldAccessorTable; }
    }
    
    public const int OrderIdFieldNumber = 1;
    private bool hasOrderId;
    private ulong orderId_;
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public ulong OrderId {
      get { return orderId_; }
    }
    
    public const int PartitionIdFieldNumber = 2;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOrderId) return false;
        if (!hasPartitionId) return false;
        if (!PartitionId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getBidDetailsRequestFieldNames;
      if (hasOrderId) {
        output.WriteUInt64(1, field_names[0], OrderId);
      }
      if (hasPartitionId) {
        output.WriteMessage(2, field_names[1], PartitionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOrderId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, OrderId);
        }
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, PartitionId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetBidDetailsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetBidDetailsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetBidDetailsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetBidDetailsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetBidDetailsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetBidDetailsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetBidDetailsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetBidDetailsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetBidDetailsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetBidDetailsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetBidDetailsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetBidDetailsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetBidDetailsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetBidDetailsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetBidDetailsRequest result;
      
      private GetBidDetailsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetBidDetailsRequest original = result;
          result = new GetBidDetailsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetBidDetailsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetBidDetailsRequest.Descriptor; }
      }
      
      public override GetBidDetailsRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetBidDetailsRequest.DefaultInstance; }
      }
      
      public override GetBidDetailsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetBidDetailsRequest) {
          return MergeFrom((GetBidDetailsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetBidDetailsRequest other) {
        if (other == global::bnet.protocol.exchange.GetBidDetailsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getBidDetailsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getBidDetailsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasOrderId = input.ReadUInt64(ref result.orderId_);
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      public ulong OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(ulong value) {
        PrepareBuilder();
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        PrepareBuilder();
        result.hasOrderId = false;
        result.orderId_ = 0UL;
        return this;
      }
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
    }
    static GetBidDetailsRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetBidDetailsResponse : pb::GeneratedMessage<GetBidDetailsResponse, GetBidDetailsResponse.Builder> {
    private GetBidDetailsResponse() { }
    private static readonly GetBidDetailsResponse defaultInstance = new GetBidDetailsResponse().MakeReadOnly();
    private static readonly string[] _getBidDetailsResponseFieldNames = new string[] { "bid" };
    private static readonly uint[] _getBidDetailsResponseFieldTags = new uint[] { 10 };
    public static GetBidDetailsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetBidDetailsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetBidDetailsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetBidDetailsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetBidDetailsResponse, GetBidDetailsResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetBidDetailsResponse__FieldAccessorTable; }
    }
    
    public const int BidFieldNumber = 1;
    private bool hasBid;
    private global::bnet.protocol.exchange.OrderExtended bid_;
    public bool HasBid {
      get { return hasBid; }
    }
    public global::bnet.protocol.exchange.OrderExtended Bid {
      get { return bid_ ?? global::bnet.protocol.exchange.OrderExtended.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBid) return false;
        if (!Bid.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getBidDetailsResponseFieldNames;
      if (hasBid) {
        output.WriteMessage(1, field_names[0], Bid);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBid) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Bid);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetBidDetailsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetBidDetailsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetBidDetailsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetBidDetailsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetBidDetailsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetBidDetailsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetBidDetailsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetBidDetailsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetBidDetailsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetBidDetailsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetBidDetailsResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetBidDetailsResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetBidDetailsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetBidDetailsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetBidDetailsResponse result;
      
      private GetBidDetailsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetBidDetailsResponse original = result;
          result = new GetBidDetailsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetBidDetailsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetBidDetailsResponse.Descriptor; }
      }
      
      public override GetBidDetailsResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetBidDetailsResponse.DefaultInstance; }
      }
      
      public override GetBidDetailsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetBidDetailsResponse) {
          return MergeFrom((GetBidDetailsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetBidDetailsResponse other) {
        if (other == global::bnet.protocol.exchange.GetBidDetailsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBid) {
          MergeBid(other.Bid);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getBidDetailsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getBidDetailsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.OrderExtended.Builder subBuilder = global::bnet.protocol.exchange.OrderExtended.CreateBuilder();
              if (result.hasBid) {
                subBuilder.MergeFrom(Bid);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Bid = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBid {
       get { return result.hasBid; }
      }
      public global::bnet.protocol.exchange.OrderExtended Bid {
        get { return result.Bid; }
        set { SetBid(value); }
      }
      public Builder SetBid(global::bnet.protocol.exchange.OrderExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBid = true;
        result.bid_ = value;
        return this;
      }
      public Builder SetBid(global::bnet.protocol.exchange.OrderExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBid = true;
        result.bid_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBid(global::bnet.protocol.exchange.OrderExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBid &&
            result.bid_ != global::bnet.protocol.exchange.OrderExtended.DefaultInstance) {
            result.bid_ = global::bnet.protocol.exchange.OrderExtended.CreateBuilder(result.bid_).MergeFrom(value).BuildPartial();
        } else {
          result.bid_ = value;
        }
        result.hasBid = true;
        return this;
      }
      public Builder ClearBid() {
        PrepareBuilder();
        result.hasBid = false;
        result.bid_ = null;
        return this;
      }
    }
    static GetBidDetailsResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetOfferDetailsRequest : pb::GeneratedMessage<GetOfferDetailsRequest, GetOfferDetailsRequest.Builder> {
    private GetOfferDetailsRequest() { }
    private static readonly GetOfferDetailsRequest defaultInstance = new GetOfferDetailsRequest().MakeReadOnly();
    private static readonly string[] _getOfferDetailsRequestFieldNames = new string[] { "order_id", "partition_id" };
    private static readonly uint[] _getOfferDetailsRequestFieldTags = new uint[] { 8, 18 };
    public static GetOfferDetailsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetOfferDetailsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetOfferDetailsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetOfferDetailsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetOfferDetailsRequest, GetOfferDetailsRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetOfferDetailsRequest__FieldAccessorTable; }
    }
    
    public const int OrderIdFieldNumber = 1;
    private bool hasOrderId;
    private ulong orderId_;
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public ulong OrderId {
      get { return orderId_; }
    }
    
    public const int PartitionIdFieldNumber = 2;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOrderId) return false;
        if (!hasPartitionId) return false;
        if (!PartitionId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getOfferDetailsRequestFieldNames;
      if (hasOrderId) {
        output.WriteUInt64(1, field_names[0], OrderId);
      }
      if (hasPartitionId) {
        output.WriteMessage(2, field_names[1], PartitionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOrderId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, OrderId);
        }
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, PartitionId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetOfferDetailsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetOfferDetailsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetOfferDetailsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetOfferDetailsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetOfferDetailsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetOfferDetailsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetOfferDetailsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetOfferDetailsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetOfferDetailsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetOfferDetailsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetOfferDetailsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetOfferDetailsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetOfferDetailsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetOfferDetailsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetOfferDetailsRequest result;
      
      private GetOfferDetailsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetOfferDetailsRequest original = result;
          result = new GetOfferDetailsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetOfferDetailsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetOfferDetailsRequest.Descriptor; }
      }
      
      public override GetOfferDetailsRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetOfferDetailsRequest.DefaultInstance; }
      }
      
      public override GetOfferDetailsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetOfferDetailsRequest) {
          return MergeFrom((GetOfferDetailsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetOfferDetailsRequest other) {
        if (other == global::bnet.protocol.exchange.GetOfferDetailsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getOfferDetailsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getOfferDetailsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasOrderId = input.ReadUInt64(ref result.orderId_);
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      public ulong OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(ulong value) {
        PrepareBuilder();
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        PrepareBuilder();
        result.hasOrderId = false;
        result.orderId_ = 0UL;
        return this;
      }
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
    }
    static GetOfferDetailsRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetOfferDetailsResponse : pb::GeneratedMessage<GetOfferDetailsResponse, GetOfferDetailsResponse.Builder> {
    private GetOfferDetailsResponse() { }
    private static readonly GetOfferDetailsResponse defaultInstance = new GetOfferDetailsResponse().MakeReadOnly();
    private static readonly string[] _getOfferDetailsResponseFieldNames = new string[] { "offer" };
    private static readonly uint[] _getOfferDetailsResponseFieldTags = new uint[] { 10 };
    public static GetOfferDetailsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetOfferDetailsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetOfferDetailsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetOfferDetailsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetOfferDetailsResponse, GetOfferDetailsResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetOfferDetailsResponse__FieldAccessorTable; }
    }
    
    public const int OfferFieldNumber = 1;
    private bool hasOffer;
    private global::bnet.protocol.exchange.OrderExtended offer_;
    public bool HasOffer {
      get { return hasOffer; }
    }
    public global::bnet.protocol.exchange.OrderExtended Offer {
      get { return offer_ ?? global::bnet.protocol.exchange.OrderExtended.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOffer) return false;
        if (!Offer.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getOfferDetailsResponseFieldNames;
      if (hasOffer) {
        output.WriteMessage(1, field_names[0], Offer);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOffer) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Offer);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetOfferDetailsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetOfferDetailsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetOfferDetailsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetOfferDetailsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetOfferDetailsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetOfferDetailsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetOfferDetailsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetOfferDetailsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetOfferDetailsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetOfferDetailsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetOfferDetailsResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetOfferDetailsResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetOfferDetailsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetOfferDetailsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetOfferDetailsResponse result;
      
      private GetOfferDetailsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetOfferDetailsResponse original = result;
          result = new GetOfferDetailsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetOfferDetailsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetOfferDetailsResponse.Descriptor; }
      }
      
      public override GetOfferDetailsResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetOfferDetailsResponse.DefaultInstance; }
      }
      
      public override GetOfferDetailsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetOfferDetailsResponse) {
          return MergeFrom((GetOfferDetailsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetOfferDetailsResponse other) {
        if (other == global::bnet.protocol.exchange.GetOfferDetailsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOffer) {
          MergeOffer(other.Offer);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getOfferDetailsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getOfferDetailsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.OrderExtended.Builder subBuilder = global::bnet.protocol.exchange.OrderExtended.CreateBuilder();
              if (result.hasOffer) {
                subBuilder.MergeFrom(Offer);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Offer = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOffer {
       get { return result.hasOffer; }
      }
      public global::bnet.protocol.exchange.OrderExtended Offer {
        get { return result.Offer; }
        set { SetOffer(value); }
      }
      public Builder SetOffer(global::bnet.protocol.exchange.OrderExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOffer = true;
        result.offer_ = value;
        return this;
      }
      public Builder SetOffer(global::bnet.protocol.exchange.OrderExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOffer = true;
        result.offer_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOffer(global::bnet.protocol.exchange.OrderExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOffer &&
            result.offer_ != global::bnet.protocol.exchange.OrderExtended.DefaultInstance) {
            result.offer_ = global::bnet.protocol.exchange.OrderExtended.CreateBuilder(result.offer_).MergeFrom(value).BuildPartial();
        } else {
          result.offer_ = value;
        }
        result.hasOffer = true;
        return this;
      }
      public Builder ClearOffer() {
        PrepareBuilder();
        result.hasOffer = false;
        result.offer_ = null;
        return this;
      }
    }
    static GetOfferDetailsResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetSystemTimeResponse : pb::GeneratedMessage<GetSystemTimeResponse, GetSystemTimeResponse.Builder> {
    private GetSystemTimeResponse() { }
    private static readonly GetSystemTimeResponse defaultInstance = new GetSystemTimeResponse().MakeReadOnly();
    private static readonly string[] _getSystemTimeResponseFieldNames = new string[] { "time" };
    private static readonly uint[] _getSystemTimeResponseFieldTags = new uint[] { 8 };
    public static GetSystemTimeResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetSystemTimeResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetSystemTimeResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetSystemTimeResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetSystemTimeResponse, GetSystemTimeResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetSystemTimeResponse__FieldAccessorTable; }
    }
    
    public const int TimeFieldNumber = 1;
    private bool hasTime;
    private ulong time_;
    public bool HasTime {
      get { return hasTime; }
    }
    public ulong Time {
      get { return time_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTime) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getSystemTimeResponseFieldNames;
      if (hasTime) {
        output.WriteUInt64(1, field_names[0], Time);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, Time);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetSystemTimeResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSystemTimeResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSystemTimeResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetSystemTimeResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetSystemTimeResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSystemTimeResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetSystemTimeResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetSystemTimeResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetSystemTimeResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetSystemTimeResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetSystemTimeResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetSystemTimeResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetSystemTimeResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetSystemTimeResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetSystemTimeResponse result;
      
      private GetSystemTimeResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetSystemTimeResponse original = result;
          result = new GetSystemTimeResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetSystemTimeResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetSystemTimeResponse.Descriptor; }
      }
      
      public override GetSystemTimeResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetSystemTimeResponse.DefaultInstance; }
      }
      
      public override GetSystemTimeResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetSystemTimeResponse) {
          return MergeFrom((GetSystemTimeResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetSystemTimeResponse other) {
        if (other == global::bnet.protocol.exchange.GetSystemTimeResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTime) {
          Time = other.Time;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getSystemTimeResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getSystemTimeResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTime = input.ReadUInt64(ref result.time_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTime {
        get { return result.hasTime; }
      }
      public ulong Time {
        get { return result.Time; }
        set { SetTime(value); }
      }
      public Builder SetTime(ulong value) {
        PrepareBuilder();
        result.hasTime = true;
        result.time_ = value;
        return this;
      }
      public Builder ClearTime() {
        PrepareBuilder();
        result.hasTime = false;
        result.time_ = 0UL;
        return this;
      }
    }
    static GetSystemTimeResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateCSTradeRequest : pb::GeneratedMessage<CreateCSTradeRequest, CreateCSTradeRequest.Builder> {
    private CreateCSTradeRequest() { }
    private static readonly CreateCSTradeRequest defaultInstance = new CreateCSTradeRequest().MakeReadOnly();
    private static readonly string[] _createCSTradeRequestFieldNames = new string[] { "account_for_item", "amount", "bnet_account", "cs_notes", "cs_user_id", "game_account", "order_book", "partition_id" };
    private static readonly uint[] _createCSTradeRequestFieldTags = new uint[] { 50, 24, 34, 58, 64, 42, 18, 10 };
    public static CreateCSTradeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateCSTradeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateCSTradeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_CreateCSTradeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateCSTradeRequest, CreateCSTradeRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_CreateCSTradeRequest__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int OrderBookFieldNumber = 2;
    private bool hasOrderBook;
    private global::bnet.protocol.exchange.OrderBook orderBook_;
    public bool HasOrderBook {
      get { return hasOrderBook; }
    }
    public global::bnet.protocol.exchange.OrderBook OrderBook {
      get { return orderBook_ ?? global::bnet.protocol.exchange.OrderBook.DefaultInstance; }
    }
    
    public const int AmountFieldNumber = 3;
    private bool hasAmount;
    private uint amount_;
    public bool HasAmount {
      get { return hasAmount; }
    }
    public uint Amount {
      get { return amount_; }
    }
    
    public const int BnetAccountFieldNumber = 4;
    private bool hasBnetAccount;
    private global::bnet.protocol.EntityId bnetAccount_;
    public bool HasBnetAccount {
      get { return hasBnetAccount; }
    }
    public global::bnet.protocol.EntityId BnetAccount {
      get { return bnetAccount_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int GameAccountFieldNumber = 5;
    private bool hasGameAccount;
    private global::bnet.protocol.EntityId gameAccount_;
    public bool HasGameAccount {
      get { return hasGameAccount; }
    }
    public global::bnet.protocol.EntityId GameAccount {
      get { return gameAccount_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int AccountForItemFieldNumber = 6;
    private bool hasAccountForItem;
    private global::bnet.protocol.exchange.BlobFrom accountForItem_;
    public bool HasAccountForItem {
      get { return hasAccountForItem; }
    }
    public global::bnet.protocol.exchange.BlobFrom AccountForItem {
      get { return accountForItem_ ?? global::bnet.protocol.exchange.BlobFrom.DefaultInstance; }
    }
    
    public const int CsNotesFieldNumber = 7;
    private bool hasCsNotes;
    private string csNotes_ = "";
    public bool HasCsNotes {
      get { return hasCsNotes; }
    }
    public string CsNotes {
      get { return csNotes_; }
    }
    
    public const int CsUserIdFieldNumber = 8;
    private bool hasCsUserId;
    private ulong csUserId_;
    public bool HasCsUserId {
      get { return hasCsUserId; }
    }
    public ulong CsUserId {
      get { return csUserId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOrderBook) return false;
        if (!hasAmount) return false;
        if (!hasBnetAccount) return false;
        if (!hasAccountForItem) return false;
        if (!hasCsNotes) return false;
        if (!hasCsUserId) return false;
        if (HasPartitionId) {
          if (!PartitionId.IsInitialized) return false;
        }
        if (!OrderBook.IsInitialized) return false;
        if (!BnetAccount.IsInitialized) return false;
        if (HasGameAccount) {
          if (!GameAccount.IsInitialized) return false;
        }
        if (!AccountForItem.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createCSTradeRequestFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[7], PartitionId);
      }
      if (hasOrderBook) {
        output.WriteMessage(2, field_names[6], OrderBook);
      }
      if (hasAmount) {
        output.WriteUInt32(3, field_names[1], Amount);
      }
      if (hasBnetAccount) {
        output.WriteMessage(4, field_names[2], BnetAccount);
      }
      if (hasGameAccount) {
        output.WriteMessage(5, field_names[5], GameAccount);
      }
      if (hasAccountForItem) {
        output.WriteMessage(6, field_names[0], AccountForItem);
      }
      if (hasCsNotes) {
        output.WriteString(7, field_names[3], CsNotes);
      }
      if (hasCsUserId) {
        output.WriteUInt64(8, field_names[4], CsUserId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasOrderBook) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, OrderBook);
        }
        if (hasAmount) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Amount);
        }
        if (hasBnetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, BnetAccount);
        }
        if (hasGameAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, GameAccount);
        }
        if (hasAccountForItem) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, AccountForItem);
        }
        if (hasCsNotes) {
          size += pb::CodedOutputStream.ComputeStringSize(7, CsNotes);
        }
        if (hasCsUserId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(8, CsUserId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateCSTradeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateCSTradeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateCSTradeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateCSTradeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateCSTradeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateCSTradeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateCSTradeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateCSTradeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateCSTradeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateCSTradeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateCSTradeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateCSTradeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateCSTradeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateCSTradeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateCSTradeRequest result;
      
      private CreateCSTradeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateCSTradeRequest original = result;
          result = new CreateCSTradeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateCSTradeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.CreateCSTradeRequest.Descriptor; }
      }
      
      public override CreateCSTradeRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.CreateCSTradeRequest.DefaultInstance; }
      }
      
      public override CreateCSTradeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateCSTradeRequest) {
          return MergeFrom((CreateCSTradeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateCSTradeRequest other) {
        if (other == global::bnet.protocol.exchange.CreateCSTradeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderBook) {
          MergeOrderBook(other.OrderBook);
        }
        if (other.HasAmount) {
          Amount = other.Amount;
        }
        if (other.HasBnetAccount) {
          MergeBnetAccount(other.BnetAccount);
        }
        if (other.HasGameAccount) {
          MergeGameAccount(other.GameAccount);
        }
        if (other.HasAccountForItem) {
          MergeAccountForItem(other.AccountForItem);
        }
        if (other.HasCsNotes) {
          CsNotes = other.CsNotes;
        }
        if (other.HasCsUserId) {
          CsUserId = other.CsUserId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createCSTradeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createCSTradeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.OrderBook.Builder subBuilder = global::bnet.protocol.exchange.OrderBook.CreateBuilder();
              if (result.hasOrderBook) {
                subBuilder.MergeFrom(OrderBook);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderBook = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasAmount = input.ReadUInt32(ref result.amount_);
              break;
            }
            case 34: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBnetAccount) {
                subBuilder.MergeFrom(BnetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccount = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasGameAccount) {
                subBuilder.MergeFrom(GameAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameAccount = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::bnet.protocol.exchange.BlobFrom.Builder subBuilder = global::bnet.protocol.exchange.BlobFrom.CreateBuilder();
              if (result.hasAccountForItem) {
                subBuilder.MergeFrom(AccountForItem);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountForItem = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              result.hasCsNotes = input.ReadString(ref result.csNotes_);
              break;
            }
            case 64: {
              result.hasCsUserId = input.ReadUInt64(ref result.csUserId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasOrderBook {
       get { return result.hasOrderBook; }
      }
      public global::bnet.protocol.exchange.OrderBook OrderBook {
        get { return result.OrderBook; }
        set { SetOrderBook(value); }
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderBook = true;
        result.orderBook_ = value;
        return this;
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrderBook = true;
        result.orderBook_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrderBook &&
            result.orderBook_ != global::bnet.protocol.exchange.OrderBook.DefaultInstance) {
            result.orderBook_ = global::bnet.protocol.exchange.OrderBook.CreateBuilder(result.orderBook_).MergeFrom(value).BuildPartial();
        } else {
          result.orderBook_ = value;
        }
        result.hasOrderBook = true;
        return this;
      }
      public Builder ClearOrderBook() {
        PrepareBuilder();
        result.hasOrderBook = false;
        result.orderBook_ = null;
        return this;
      }
      
      public bool HasAmount {
        get { return result.hasAmount; }
      }
      public uint Amount {
        get { return result.Amount; }
        set { SetAmount(value); }
      }
      public Builder SetAmount(uint value) {
        PrepareBuilder();
        result.hasAmount = true;
        result.amount_ = value;
        return this;
      }
      public Builder ClearAmount() {
        PrepareBuilder();
        result.hasAmount = false;
        result.amount_ = 0;
        return this;
      }
      
      public bool HasBnetAccount {
       get { return result.hasBnetAccount; }
      }
      public global::bnet.protocol.EntityId BnetAccount {
        get { return result.BnetAccount; }
        set { SetBnetAccount(value); }
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = value;
        return this;
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBnetAccount &&
            result.bnetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccount_ = value;
        }
        result.hasBnetAccount = true;
        return this;
      }
      public Builder ClearBnetAccount() {
        PrepareBuilder();
        result.hasBnetAccount = false;
        result.bnetAccount_ = null;
        return this;
      }
      
      public bool HasGameAccount {
       get { return result.hasGameAccount; }
      }
      public global::bnet.protocol.EntityId GameAccount {
        get { return result.GameAccount; }
        set { SetGameAccount(value); }
      }
      public Builder SetGameAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameAccount = true;
        result.gameAccount_ = value;
        return this;
      }
      public Builder SetGameAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameAccount = true;
        result.gameAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameAccount &&
            result.gameAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.gameAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.gameAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccount_ = value;
        }
        result.hasGameAccount = true;
        return this;
      }
      public Builder ClearGameAccount() {
        PrepareBuilder();
        result.hasGameAccount = false;
        result.gameAccount_ = null;
        return this;
      }
      
      public bool HasAccountForItem {
       get { return result.hasAccountForItem; }
      }
      public global::bnet.protocol.exchange.BlobFrom AccountForItem {
        get { return result.AccountForItem; }
        set { SetAccountForItem(value); }
      }
      public Builder SetAccountForItem(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountForItem = true;
        result.accountForItem_ = value;
        return this;
      }
      public Builder SetAccountForItem(global::bnet.protocol.exchange.BlobFrom.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountForItem = true;
        result.accountForItem_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountForItem(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountForItem &&
            result.accountForItem_ != global::bnet.protocol.exchange.BlobFrom.DefaultInstance) {
            result.accountForItem_ = global::bnet.protocol.exchange.BlobFrom.CreateBuilder(result.accountForItem_).MergeFrom(value).BuildPartial();
        } else {
          result.accountForItem_ = value;
        }
        result.hasAccountForItem = true;
        return this;
      }
      public Builder ClearAccountForItem() {
        PrepareBuilder();
        result.hasAccountForItem = false;
        result.accountForItem_ = null;
        return this;
      }
      
      public bool HasCsNotes {
        get { return result.hasCsNotes; }
      }
      public string CsNotes {
        get { return result.CsNotes; }
        set { SetCsNotes(value); }
      }
      public Builder SetCsNotes(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCsNotes = true;
        result.csNotes_ = value;
        return this;
      }
      public Builder ClearCsNotes() {
        PrepareBuilder();
        result.hasCsNotes = false;
        result.csNotes_ = "";
        return this;
      }
      
      public bool HasCsUserId {
        get { return result.hasCsUserId; }
      }
      public ulong CsUserId {
        get { return result.CsUserId; }
        set { SetCsUserId(value); }
      }
      public Builder SetCsUserId(ulong value) {
        PrepareBuilder();
        result.hasCsUserId = true;
        result.csUserId_ = value;
        return this;
      }
      public Builder ClearCsUserId() {
        PrepareBuilder();
        result.hasCsUserId = false;
        result.csUserId_ = 0UL;
        return this;
      }
    }
    static CreateCSTradeRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetOrderCountRequest : pb::GeneratedMessage<GetOrderCountRequest, GetOrderCountRequest.Builder> {
    private GetOrderCountRequest() { }
    private static readonly GetOrderCountRequest defaultInstance = new GetOrderCountRequest().MakeReadOnly();
    private static readonly string[] _getOrderCountRequestFieldNames = new string[] { "bnet_account", "currency", "not_closed_offer_count", "order_with_claimable_count", "source" };
    private static readonly uint[] _getOrderCountRequestFieldTags = new uint[] { 26, 10, 32, 40, 21 };
    public static GetOrderCountRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetOrderCountRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetOrderCountRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetOrderCountRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetOrderCountRequest, GetOrderCountRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetOrderCountRequest__FieldAccessorTable; }
    }
    
    public const int CurrencyFieldNumber = 1;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int SourceFieldNumber = 2;
    private bool hasSource;
    private uint source_;
    public bool HasSource {
      get { return hasSource; }
    }
    public uint Source {
      get { return source_; }
    }
    
    public const int BnetAccountFieldNumber = 3;
    private bool hasBnetAccount;
    private global::bnet.protocol.EntityId bnetAccount_;
    public bool HasBnetAccount {
      get { return hasBnetAccount; }
    }
    public global::bnet.protocol.EntityId BnetAccount {
      get { return bnetAccount_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int NotClosedOfferCountFieldNumber = 4;
    private bool hasNotClosedOfferCount;
    private bool notClosedOfferCount_;
    public bool HasNotClosedOfferCount {
      get { return hasNotClosedOfferCount; }
    }
    public bool NotClosedOfferCount {
      get { return notClosedOfferCount_; }
    }
    
    public const int OrderWithClaimableCountFieldNumber = 5;
    private bool hasOrderWithClaimableCount;
    private bool orderWithClaimableCount_;
    public bool HasOrderWithClaimableCount {
      get { return hasOrderWithClaimableCount; }
    }
    public bool OrderWithClaimableCount {
      get { return orderWithClaimableCount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasBnetAccount) {
          if (!BnetAccount.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getOrderCountRequestFieldNames;
      if (hasCurrency) {
        output.WriteString(1, field_names[1], Currency);
      }
      if (hasSource) {
        output.WriteFixed32(2, field_names[4], Source);
      }
      if (hasBnetAccount) {
        output.WriteMessage(3, field_names[0], BnetAccount);
      }
      if (hasNotClosedOfferCount) {
        output.WriteBool(4, field_names[2], NotClosedOfferCount);
      }
      if (hasOrderWithClaimableCount) {
        output.WriteBool(5, field_names[3], OrderWithClaimableCount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCurrency) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Currency);
        }
        if (hasSource) {
          size += pb::CodedOutputStream.ComputeFixed32Size(2, Source);
        }
        if (hasBnetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, BnetAccount);
        }
        if (hasNotClosedOfferCount) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, NotClosedOfferCount);
        }
        if (hasOrderWithClaimableCount) {
          size += pb::CodedOutputStream.ComputeBoolSize(5, OrderWithClaimableCount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetOrderCountRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetOrderCountRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetOrderCountRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetOrderCountRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetOrderCountRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetOrderCountRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetOrderCountRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetOrderCountRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetOrderCountRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetOrderCountRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetOrderCountRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetOrderCountRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetOrderCountRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetOrderCountRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetOrderCountRequest result;
      
      private GetOrderCountRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GetOrderCountRequest original = result;
          result = new GetOrderCountRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetOrderCountRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetOrderCountRequest.Descriptor; }
      }
      
      public override GetOrderCountRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetOrderCountRequest.DefaultInstance; }
      }
      
      public override GetOrderCountRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetOrderCountRequest) {
          return MergeFrom((GetOrderCountRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetOrderCountRequest other) {
        if (other == global::bnet.protocol.exchange.GetOrderCountRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasSource) {
          Source = other.Source;
        }
        if (other.HasBnetAccount) {
          MergeBnetAccount(other.BnetAccount);
        }
        if (other.HasNotClosedOfferCount) {
          NotClosedOfferCount = other.NotClosedOfferCount;
        }
        if (other.HasOrderWithClaimableCount) {
          OrderWithClaimableCount = other.OrderWithClaimableCount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getOrderCountRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getOrderCountRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
            case 21: {
              result.hasSource = input.ReadFixed32(ref result.source_);
              break;
            }
            case 26: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBnetAccount) {
                subBuilder.MergeFrom(BnetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccount = subBuilder.BuildPartial();
              break;
            }
            case 32: {
              result.hasNotClosedOfferCount = input.ReadBool(ref result.notClosedOfferCount_);
              break;
            }
            case 40: {
              result.hasOrderWithClaimableCount = input.ReadBool(ref result.orderWithClaimableCount_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        PrepareBuilder();
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasSource {
        get { return result.hasSource; }
      }
      public uint Source {
        get { return result.Source; }
        set { SetSource(value); }
      }
      public Builder SetSource(uint value) {
        PrepareBuilder();
        result.hasSource = true;
        result.source_ = value;
        return this;
      }
      public Builder ClearSource() {
        PrepareBuilder();
        result.hasSource = false;
        result.source_ = 0;
        return this;
      }
      
      public bool HasBnetAccount {
       get { return result.hasBnetAccount; }
      }
      public global::bnet.protocol.EntityId BnetAccount {
        get { return result.BnetAccount; }
        set { SetBnetAccount(value); }
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = value;
        return this;
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBnetAccount &&
            result.bnetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccount_ = value;
        }
        result.hasBnetAccount = true;
        return this;
      }
      public Builder ClearBnetAccount() {
        PrepareBuilder();
        result.hasBnetAccount = false;
        result.bnetAccount_ = null;
        return this;
      }
      
      public bool HasNotClosedOfferCount {
        get { return result.hasNotClosedOfferCount; }
      }
      public bool NotClosedOfferCount {
        get { return result.NotClosedOfferCount; }
        set { SetNotClosedOfferCount(value); }
      }
      public Builder SetNotClosedOfferCount(bool value) {
        PrepareBuilder();
        result.hasNotClosedOfferCount = true;
        result.notClosedOfferCount_ = value;
        return this;
      }
      public Builder ClearNotClosedOfferCount() {
        PrepareBuilder();
        result.hasNotClosedOfferCount = false;
        result.notClosedOfferCount_ = false;
        return this;
      }
      
      public bool HasOrderWithClaimableCount {
        get { return result.hasOrderWithClaimableCount; }
      }
      public bool OrderWithClaimableCount {
        get { return result.OrderWithClaimableCount; }
        set { SetOrderWithClaimableCount(value); }
      }
      public Builder SetOrderWithClaimableCount(bool value) {
        PrepareBuilder();
        result.hasOrderWithClaimableCount = true;
        result.orderWithClaimableCount_ = value;
        return this;
      }
      public Builder ClearOrderWithClaimableCount() {
        PrepareBuilder();
        result.hasOrderWithClaimableCount = false;
        result.orderWithClaimableCount_ = false;
        return this;
      }
    }
    static GetOrderCountRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GetOrderCountResponse : pb::GeneratedMessage<GetOrderCountResponse, GetOrderCountResponse.Builder> {
    private GetOrderCountResponse() { }
    private static readonly GetOrderCountResponse defaultInstance = new GetOrderCountResponse().MakeReadOnly();
    private static readonly string[] _getOrderCountResponseFieldNames = new string[] { "not_closed_offer_count", "order_with_claimable_count" };
    private static readonly uint[] _getOrderCountResponseFieldTags = new uint[] { 10, 18 };
    public static GetOrderCountResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetOrderCountResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetOrderCountResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetOrderCountResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetOrderCountResponse, GetOrderCountResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_GetOrderCountResponse__FieldAccessorTable; }
    }
    
    public const int NotClosedOfferCountFieldNumber = 1;
    private bool hasNotClosedOfferCount;
    private global::bnet.protocol.exchange.Count notClosedOfferCount_;
    public bool HasNotClosedOfferCount {
      get { return hasNotClosedOfferCount; }
    }
    public global::bnet.protocol.exchange.Count NotClosedOfferCount {
      get { return notClosedOfferCount_ ?? global::bnet.protocol.exchange.Count.DefaultInstance; }
    }
    
    public const int OrderWithClaimableCountFieldNumber = 2;
    private bool hasOrderWithClaimableCount;
    private global::bnet.protocol.exchange.Count orderWithClaimableCount_;
    public bool HasOrderWithClaimableCount {
      get { return hasOrderWithClaimableCount; }
    }
    public global::bnet.protocol.exchange.Count OrderWithClaimableCount {
      get { return orderWithClaimableCount_ ?? global::bnet.protocol.exchange.Count.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasNotClosedOfferCount) {
          if (!NotClosedOfferCount.IsInitialized) return false;
        }
        if (HasOrderWithClaimableCount) {
          if (!OrderWithClaimableCount.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _getOrderCountResponseFieldNames;
      if (hasNotClosedOfferCount) {
        output.WriteMessage(1, field_names[0], NotClosedOfferCount);
      }
      if (hasOrderWithClaimableCount) {
        output.WriteMessage(2, field_names[1], OrderWithClaimableCount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasNotClosedOfferCount) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, NotClosedOfferCount);
        }
        if (hasOrderWithClaimableCount) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, OrderWithClaimableCount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GetOrderCountResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetOrderCountResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetOrderCountResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetOrderCountResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetOrderCountResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetOrderCountResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetOrderCountResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetOrderCountResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetOrderCountResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetOrderCountResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetOrderCountResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetOrderCountResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GetOrderCountResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetOrderCountResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetOrderCountResponse result;
      
      private GetOrderCountResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GetOrderCountResponse original = result;
          result = new GetOrderCountResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetOrderCountResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.GetOrderCountResponse.Descriptor; }
      }
      
      public override GetOrderCountResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.GetOrderCountResponse.DefaultInstance; }
      }
      
      public override GetOrderCountResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetOrderCountResponse) {
          return MergeFrom((GetOrderCountResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetOrderCountResponse other) {
        if (other == global::bnet.protocol.exchange.GetOrderCountResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasNotClosedOfferCount) {
          MergeNotClosedOfferCount(other.NotClosedOfferCount);
        }
        if (other.HasOrderWithClaimableCount) {
          MergeOrderWithClaimableCount(other.OrderWithClaimableCount);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getOrderCountResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getOrderCountResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.Count.Builder subBuilder = global::bnet.protocol.exchange.Count.CreateBuilder();
              if (result.hasNotClosedOfferCount) {
                subBuilder.MergeFrom(NotClosedOfferCount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              NotClosedOfferCount = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.Count.Builder subBuilder = global::bnet.protocol.exchange.Count.CreateBuilder();
              if (result.hasOrderWithClaimableCount) {
                subBuilder.MergeFrom(OrderWithClaimableCount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderWithClaimableCount = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasNotClosedOfferCount {
       get { return result.hasNotClosedOfferCount; }
      }
      public global::bnet.protocol.exchange.Count NotClosedOfferCount {
        get { return result.NotClosedOfferCount; }
        set { SetNotClosedOfferCount(value); }
      }
      public Builder SetNotClosedOfferCount(global::bnet.protocol.exchange.Count value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNotClosedOfferCount = true;
        result.notClosedOfferCount_ = value;
        return this;
      }
      public Builder SetNotClosedOfferCount(global::bnet.protocol.exchange.Count.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasNotClosedOfferCount = true;
        result.notClosedOfferCount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeNotClosedOfferCount(global::bnet.protocol.exchange.Count value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasNotClosedOfferCount &&
            result.notClosedOfferCount_ != global::bnet.protocol.exchange.Count.DefaultInstance) {
            result.notClosedOfferCount_ = global::bnet.protocol.exchange.Count.CreateBuilder(result.notClosedOfferCount_).MergeFrom(value).BuildPartial();
        } else {
          result.notClosedOfferCount_ = value;
        }
        result.hasNotClosedOfferCount = true;
        return this;
      }
      public Builder ClearNotClosedOfferCount() {
        PrepareBuilder();
        result.hasNotClosedOfferCount = false;
        result.notClosedOfferCount_ = null;
        return this;
      }
      
      public bool HasOrderWithClaimableCount {
       get { return result.hasOrderWithClaimableCount; }
      }
      public global::bnet.protocol.exchange.Count OrderWithClaimableCount {
        get { return result.OrderWithClaimableCount; }
        set { SetOrderWithClaimableCount(value); }
      }
      public Builder SetOrderWithClaimableCount(global::bnet.protocol.exchange.Count value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderWithClaimableCount = true;
        result.orderWithClaimableCount_ = value;
        return this;
      }
      public Builder SetOrderWithClaimableCount(global::bnet.protocol.exchange.Count.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrderWithClaimableCount = true;
        result.orderWithClaimableCount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderWithClaimableCount(global::bnet.protocol.exchange.Count value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrderWithClaimableCount &&
            result.orderWithClaimableCount_ != global::bnet.protocol.exchange.Count.DefaultInstance) {
            result.orderWithClaimableCount_ = global::bnet.protocol.exchange.Count.CreateBuilder(result.orderWithClaimableCount_).MergeFrom(value).BuildPartial();
        } else {
          result.orderWithClaimableCount_ = value;
        }
        result.hasOrderWithClaimableCount = true;
        return this;
      }
      public Builder ClearOrderWithClaimableCount() {
        PrepareBuilder();
        result.hasOrderWithClaimableCount = false;
        result.orderWithClaimableCount_ = null;
        return this;
      }
    }
    static GetOrderCountResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class HistoriesForCSRequest : pb::GeneratedMessage<HistoriesForCSRequest, HistoriesForCSRequest.Builder> {
    private HistoriesForCSRequest() { }
    private static readonly HistoriesForCSRequest defaultInstance = new HistoriesForCSRequest().MakeReadOnly();
    private static readonly string[] _historiesForCSRequestFieldNames = new string[] { "bnet_account", "higher_time", "lower_time", "program" };
    private static readonly uint[] _historiesForCSRequestFieldTags = new uint[] { 10, 32, 24, 21 };
    public static HistoriesForCSRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HistoriesForCSRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HistoriesForCSRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_HistoriesForCSRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HistoriesForCSRequest, HistoriesForCSRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_HistoriesForCSRequest__FieldAccessorTable; }
    }
    
    public const int BnetAccountFieldNumber = 1;
    private bool hasBnetAccount;
    private global::bnet.protocol.EntityId bnetAccount_;
    public bool HasBnetAccount {
      get { return hasBnetAccount; }
    }
    public global::bnet.protocol.EntityId BnetAccount {
      get { return bnetAccount_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ProgramFieldNumber = 2;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int LowerTimeFieldNumber = 3;
    private bool hasLowerTime;
    private ulong lowerTime_;
    public bool HasLowerTime {
      get { return hasLowerTime; }
    }
    public ulong LowerTime {
      get { return lowerTime_; }
    }
    
    public const int HigherTimeFieldNumber = 4;
    private bool hasHigherTime;
    private ulong higherTime_;
    public bool HasHigherTime {
      get { return hasHigherTime; }
    }
    public ulong HigherTime {
      get { return higherTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBnetAccount) return false;
        if (!hasProgram) return false;
        if (!hasLowerTime) return false;
        if (!hasHigherTime) return false;
        if (!BnetAccount.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _historiesForCSRequestFieldNames;
      if (hasBnetAccount) {
        output.WriteMessage(1, field_names[0], BnetAccount);
      }
      if (hasProgram) {
        output.WriteFixed32(2, field_names[3], Program);
      }
      if (hasLowerTime) {
        output.WriteUInt64(3, field_names[2], LowerTime);
      }
      if (hasHigherTime) {
        output.WriteUInt64(4, field_names[1], HigherTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBnetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, BnetAccount);
        }
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeFixed32Size(2, Program);
        }
        if (hasLowerTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, LowerTime);
        }
        if (hasHigherTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, HigherTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static HistoriesForCSRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HistoriesForCSRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HistoriesForCSRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HistoriesForCSRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HistoriesForCSRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HistoriesForCSRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HistoriesForCSRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HistoriesForCSRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HistoriesForCSRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HistoriesForCSRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HistoriesForCSRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HistoriesForCSRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<HistoriesForCSRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HistoriesForCSRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HistoriesForCSRequest result;
      
      private HistoriesForCSRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          HistoriesForCSRequest original = result;
          result = new HistoriesForCSRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HistoriesForCSRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.HistoriesForCSRequest.Descriptor; }
      }
      
      public override HistoriesForCSRequest DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.HistoriesForCSRequest.DefaultInstance; }
      }
      
      public override HistoriesForCSRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is HistoriesForCSRequest) {
          return MergeFrom((HistoriesForCSRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(HistoriesForCSRequest other) {
        if (other == global::bnet.protocol.exchange.HistoriesForCSRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBnetAccount) {
          MergeBnetAccount(other.BnetAccount);
        }
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasLowerTime) {
          LowerTime = other.LowerTime;
        }
        if (other.HasHigherTime) {
          HigherTime = other.HigherTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_historiesForCSRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _historiesForCSRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBnetAccount) {
                subBuilder.MergeFrom(BnetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccount = subBuilder.BuildPartial();
              break;
            }
            case 21: {
              result.hasProgram = input.ReadFixed32(ref result.program_);
              break;
            }
            case 24: {
              result.hasLowerTime = input.ReadUInt64(ref result.lowerTime_);
              break;
            }
            case 32: {
              result.hasHigherTime = input.ReadUInt64(ref result.higherTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBnetAccount {
       get { return result.hasBnetAccount; }
      }
      public global::bnet.protocol.EntityId BnetAccount {
        get { return result.BnetAccount; }
        set { SetBnetAccount(value); }
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = value;
        return this;
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBnetAccount &&
            result.bnetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccount_ = value;
        }
        result.hasBnetAccount = true;
        return this;
      }
      public Builder ClearBnetAccount() {
        PrepareBuilder();
        result.hasBnetAccount = false;
        result.bnetAccount_ = null;
        return this;
      }
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public bool HasLowerTime {
        get { return result.hasLowerTime; }
      }
      public ulong LowerTime {
        get { return result.LowerTime; }
        set { SetLowerTime(value); }
      }
      public Builder SetLowerTime(ulong value) {
        PrepareBuilder();
        result.hasLowerTime = true;
        result.lowerTime_ = value;
        return this;
      }
      public Builder ClearLowerTime() {
        PrepareBuilder();
        result.hasLowerTime = false;
        result.lowerTime_ = 0UL;
        return this;
      }
      
      public bool HasHigherTime {
        get { return result.hasHigherTime; }
      }
      public ulong HigherTime {
        get { return result.HigherTime; }
        set { SetHigherTime(value); }
      }
      public Builder SetHigherTime(ulong value) {
        PrepareBuilder();
        result.hasHigherTime = true;
        result.higherTime_ = value;
        return this;
      }
      public Builder ClearHigherTime() {
        PrepareBuilder();
        result.hasHigherTime = false;
        result.higherTime_ = 0UL;
        return this;
      }
    }
    static HistoriesForCSRequest() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class HistoriesForCSResponse : pb::GeneratedMessage<HistoriesForCSResponse, HistoriesForCSResponse.Builder> {
    private HistoriesForCSResponse() { }
    private static readonly HistoriesForCSResponse defaultInstance = new HistoriesForCSResponse().MakeReadOnly();
    private static readonly string[] _historiesForCSResponseFieldNames = new string[] { "history_data" };
    private static readonly uint[] _historiesForCSResponseFieldTags = new uint[] { 10 };
    public static HistoriesForCSResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HistoriesForCSResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HistoriesForCSResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_HistoriesForCSResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HistoriesForCSResponse, HistoriesForCSResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.Proto.ExchangeService.internal__static_bnet_protocol_exchange_HistoriesForCSResponse__FieldAccessorTable; }
    }
    
    public const int HistoryDataFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.exchange.HistoryData> historyData_ = new pbc::PopsicleList<global::bnet.protocol.exchange.HistoryData>();
    public scg::IList<global::bnet.protocol.exchange.HistoryData> HistoryDataList {
      get { return historyData_; }
    }
    public int HistoryDataCount {
      get { return historyData_.Count; }
    }
    public global::bnet.protocol.exchange.HistoryData GetHistoryData(int index) {
      return historyData_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.exchange.HistoryData element in HistoryDataList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _historiesForCSResponseFieldNames;
      if (historyData_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], historyData_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.exchange.HistoryData element in HistoryDataList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static HistoriesForCSResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HistoriesForCSResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HistoriesForCSResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HistoriesForCSResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HistoriesForCSResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HistoriesForCSResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HistoriesForCSResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HistoriesForCSResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HistoriesForCSResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HistoriesForCSResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HistoriesForCSResponse MakeReadOnly() {
      historyData_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HistoriesForCSResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<HistoriesForCSResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HistoriesForCSResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HistoriesForCSResponse result;
      
      private HistoriesForCSResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          HistoriesForCSResponse original = result;
          result = new HistoriesForCSResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HistoriesForCSResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.HistoriesForCSResponse.Descriptor; }
      }
      
      public override HistoriesForCSResponse DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.HistoriesForCSResponse.DefaultInstance; }
      }
      
      public override HistoriesForCSResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is HistoriesForCSResponse) {
          return MergeFrom((HistoriesForCSResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(HistoriesForCSResponse other) {
        if (other == global::bnet.protocol.exchange.HistoriesForCSResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.historyData_.Count != 0) {
          result.historyData_.Add(other.historyData_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_historiesForCSResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _historiesForCSResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.historyData_, global::bnet.protocol.exchange.HistoryData.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.HistoryData> HistoryDataList {
        get { return PrepareBuilder().historyData_; }
      }
      public int HistoryDataCount {
        get { return result.HistoryDataCount; }
      }
      public global::bnet.protocol.exchange.HistoryData GetHistoryData(int index) {
        return result.GetHistoryData(index);
      }
      public Builder SetHistoryData(int index, global::bnet.protocol.exchange.HistoryData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.historyData_[index] = value;
        return this;
      }
      public Builder SetHistoryData(int index, global::bnet.protocol.exchange.HistoryData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.historyData_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddHistoryData(global::bnet.protocol.exchange.HistoryData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.historyData_.Add(value);
        return this;
      }
      public Builder AddHistoryData(global::bnet.protocol.exchange.HistoryData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.historyData_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeHistoryData(scg::IEnumerable<global::bnet.protocol.exchange.HistoryData> values) {
        PrepareBuilder();
        result.historyData_.Add(values);
        return this;
      }
      public Builder ClearHistoryData() {
        PrepareBuilder();
        result.historyData_.Clear();
        return this;
      }
    }
    static HistoriesForCSResponse() {
      object.ReferenceEquals(global::bnet.protocol.exchange.Proto.ExchangeService.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class ExchangeService : pb::IService {
    public abstract void CreateOrderBook(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.CreateOrderBookRequest request,
        global::System.Action<global::bnet.protocol.exchange.CreateOrderBookResponse> done);
    public abstract void PlaceOfferOnOrderBook(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest request,
        global::System.Action<global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse> done);
    public abstract void PlaceOfferCreateOrderBookIfNeeded(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest request,
        global::System.Action<global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse> done);
    public abstract void PlaceBidOnOrderBook(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest request,
        global::System.Action<global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse> done);
    public abstract void PlaceBidCreateOrderBookIfNeeded(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest request,
        global::System.Action<global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse> done);
    public abstract void QueryOffersByOrderBook(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.QueryOffersByOrderBookRequest request,
        global::System.Action<global::bnet.protocol.exchange.QueryOffersByOrderBookResponse> done);
    public abstract void QueryBidsByOrderBook(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.QueryBidsByOrderBookRequest request,
        global::System.Action<global::bnet.protocol.exchange.QueryBidsByOrderBookResponse> done);
    public abstract void QueryOffersByAccountForItem(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest request,
        global::System.Action<global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse> done);
    public abstract void QueryBidsByAccountForItem(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest request,
        global::System.Action<global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse> done);
    public abstract void QueryOrderBooksSummary(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest request,
        global::System.Action<global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse> done);
    public abstract void ReportAuthorize(
        pb::IRpcController controller,
        global::bnet.protocol.exchange_object_provider.ReportAuthorizeRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void ReportSettle(
        pb::IRpcController controller,
        global::bnet.protocol.exchange_object_provider.ReportSettleRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void ReportCancel(
        pb::IRpcController controller,
        global::bnet.protocol.exchange_object_provider.ReportCancelRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void SubscribeOrderBookStatusChange(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void UnsubscribeOrderBookStatusChange(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void SubscribeOrderUpdate(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.SubscribeOrderUpdateRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void UnsubscribeOrderUpdate(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.UnsubscribeOrderUpdateRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void GetPaymentMethods(
        pb::IRpcController controller,
        global::bnet.protocol.exchange_object_provider.GetPaymentMethodsRequest request,
        global::System.Action<global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse> done);
    public abstract void ClaimBidItem(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.ClaimRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void ClaimBidMoney(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.ClaimRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void ClaimOfferItem(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.ClaimRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void ClaimOfferMoney(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.ClaimRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void CancelBid(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.CancelRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void CancelOffer(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.CancelRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void GetConfiguration(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.GetConfigurationRequest request,
        global::System.Action<global::bnet.protocol.exchange.GetConfigurationResponse> done);
    public abstract void GetBidFeeEstimation(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.GetBidFeeEstimationRequest request,
        global::System.Action<global::bnet.protocol.exchange.GetFeeEstimationResponse> done);
    public abstract void GetOfferFeeEstimation(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.GetOfferFeeEstimationRequest request,
        global::System.Action<global::bnet.protocol.exchange.GetFeeEstimationResponse> done);
    public abstract void QueryOrdersByAccountForItem(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.QueryOrdersByAccountForItemRequest request,
        global::System.Action<global::bnet.protocol.exchange.QueryOrdersByAccountForItemResponse> done);
    public abstract void ReportAuthorizeRiskVerdict(
        pb::IRpcController controller,
        global::bnet.protocol.exchange_risk.ReportAuthorizeRiskVerdictRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void ReportSettleRiskVerdict(
        pb::IRpcController controller,
        global::bnet.protocol.exchange_risk.ReportSettleRiskVerdictRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void DelaySettleRiskVerdict(
        pb::IRpcController controller,
        global::bnet.protocol.exchange_risk.DelaySettleRiskVerdictRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void GetFeeDetails(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.GetFeeDetailsRequest request,
        global::System.Action<global::bnet.protocol.exchange.GetFeeDetailsResponse> done);
    public abstract void GetOrderBookStatistics(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.GetOrderBookStatisticsRequest request,
        global::System.Action<global::bnet.protocol.exchange.GetOrderBookStatisticsResponse> done);
    public abstract void GetBidDetails(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.GetBidDetailsRequest request,
        global::System.Action<global::bnet.protocol.exchange.GetBidDetailsResponse> done);
    public abstract void GetOfferDetails(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.GetOfferDetailsRequest request,
        global::System.Action<global::bnet.protocol.exchange.GetOfferDetailsResponse> done);
    public abstract void GetSystemTime(
        pb::IRpcController controller,
        global::bnet.protocol.NoData request,
        global::System.Action<global::bnet.protocol.exchange.GetSystemTimeResponse> done);
    public abstract void CreateCSTrade(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.CreateCSTradeRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void RefundBid(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.RefundRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void ReportRefund(
        pb::IRpcController controller,
        global::bnet.protocol.exchange_object_provider.ReportRefundRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void GetOrderCount(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.GetOrderCountRequest request,
        global::System.Action<global::bnet.protocol.exchange.GetOrderCountResponse> done);
    public abstract void SubscribeAdvancedOrderUpdate(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.SubscribeAdvancedOrderUpdateRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void UnsubscribeAdvancedOrderUpdate(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.UnsubscribeAdvancedOrderUpdateRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void SettleHistoriesForCS(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.HistoriesForCSRequest request,
        global::System.Action<global::bnet.protocol.exchange.HistoriesForCSResponse> done);
    public abstract void CancelHistoriesForCS(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.HistoriesForCSRequest request,
        global::System.Action<global::bnet.protocol.exchange.HistoriesForCSResponse> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.ExchangeService.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.CreateOrderBook(controller, (global::bnet.protocol.exchange.CreateOrderBookRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.CreateOrderBookResponse>(
              done));
          return;
        case 1:
          this.PlaceOfferOnOrderBook(controller, (global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse>(
              done));
          return;
        case 2:
          this.PlaceOfferCreateOrderBookIfNeeded(controller, (global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse>(
              done));
          return;
        case 3:
          this.PlaceBidOnOrderBook(controller, (global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse>(
              done));
          return;
        case 4:
          this.PlaceBidCreateOrderBookIfNeeded(controller, (global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse>(
              done));
          return;
        case 5:
          this.QueryOffersByOrderBook(controller, (global::bnet.protocol.exchange.QueryOffersByOrderBookRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.QueryOffersByOrderBookResponse>(
              done));
          return;
        case 6:
          this.QueryBidsByOrderBook(controller, (global::bnet.protocol.exchange.QueryBidsByOrderBookRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.QueryBidsByOrderBookResponse>(
              done));
          return;
        case 7:
          this.QueryOffersByAccountForItem(controller, (global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse>(
              done));
          return;
        case 8:
          this.QueryBidsByAccountForItem(controller, (global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse>(
              done));
          return;
        case 9:
          this.QueryOrderBooksSummary(controller, (global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse>(
              done));
          return;
        case 10:
          this.ReportAuthorize(controller, (global::bnet.protocol.exchange_object_provider.ReportAuthorizeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 11:
          this.ReportSettle(controller, (global::bnet.protocol.exchange_object_provider.ReportSettleRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 12:
          this.ReportCancel(controller, (global::bnet.protocol.exchange_object_provider.ReportCancelRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 13:
          this.SubscribeOrderBookStatusChange(controller, (global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 14:
          this.UnsubscribeOrderBookStatusChange(controller, (global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 15:
          this.SubscribeOrderUpdate(controller, (global::bnet.protocol.exchange.SubscribeOrderUpdateRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 16:
          this.UnsubscribeOrderUpdate(controller, (global::bnet.protocol.exchange.UnsubscribeOrderUpdateRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 17:
          this.GetPaymentMethods(controller, (global::bnet.protocol.exchange_object_provider.GetPaymentMethodsRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse>(
              done));
          return;
        case 18:
          this.ClaimBidItem(controller, (global::bnet.protocol.exchange.ClaimRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 19:
          this.ClaimBidMoney(controller, (global::bnet.protocol.exchange.ClaimRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 20:
          this.ClaimOfferItem(controller, (global::bnet.protocol.exchange.ClaimRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 21:
          this.ClaimOfferMoney(controller, (global::bnet.protocol.exchange.ClaimRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 22:
          this.CancelBid(controller, (global::bnet.protocol.exchange.CancelRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 23:
          this.CancelOffer(controller, (global::bnet.protocol.exchange.CancelRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 24:
          this.GetConfiguration(controller, (global::bnet.protocol.exchange.GetConfigurationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.GetConfigurationResponse>(
              done));
          return;
        case 25:
          this.GetBidFeeEstimation(controller, (global::bnet.protocol.exchange.GetBidFeeEstimationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.GetFeeEstimationResponse>(
              done));
          return;
        case 26:
          this.GetOfferFeeEstimation(controller, (global::bnet.protocol.exchange.GetOfferFeeEstimationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.GetFeeEstimationResponse>(
              done));
          return;
        case 27:
          this.QueryOrdersByAccountForItem(controller, (global::bnet.protocol.exchange.QueryOrdersByAccountForItemRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.QueryOrdersByAccountForItemResponse>(
              done));
          return;
        case 28:
          this.ReportAuthorizeRiskVerdict(controller, (global::bnet.protocol.exchange_risk.ReportAuthorizeRiskVerdictRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 29:
          this.ReportSettleRiskVerdict(controller, (global::bnet.protocol.exchange_risk.ReportSettleRiskVerdictRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 30:
          this.DelaySettleRiskVerdict(controller, (global::bnet.protocol.exchange_risk.DelaySettleRiskVerdictRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 31:
          this.GetFeeDetails(controller, (global::bnet.protocol.exchange.GetFeeDetailsRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.GetFeeDetailsResponse>(
              done));
          return;
        case 32:
          this.GetOrderBookStatistics(controller, (global::bnet.protocol.exchange.GetOrderBookStatisticsRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.GetOrderBookStatisticsResponse>(
              done));
          return;
        case 33:
          this.GetBidDetails(controller, (global::bnet.protocol.exchange.GetBidDetailsRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.GetBidDetailsResponse>(
              done));
          return;
        case 34:
          this.GetOfferDetails(controller, (global::bnet.protocol.exchange.GetOfferDetailsRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.GetOfferDetailsResponse>(
              done));
          return;
        case 35:
          this.GetSystemTime(controller, (global::bnet.protocol.NoData) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.GetSystemTimeResponse>(
              done));
          return;
        case 36:
          this.CreateCSTrade(controller, (global::bnet.protocol.exchange.CreateCSTradeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 37:
          this.RefundBid(controller, (global::bnet.protocol.exchange.RefundRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 38:
          this.ReportRefund(controller, (global::bnet.protocol.exchange_object_provider.ReportRefundRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 39:
          this.GetOrderCount(controller, (global::bnet.protocol.exchange.GetOrderCountRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.GetOrderCountResponse>(
              done));
          return;
        case 40:
          this.SubscribeAdvancedOrderUpdate(controller, (global::bnet.protocol.exchange.SubscribeAdvancedOrderUpdateRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 41:
          this.UnsubscribeAdvancedOrderUpdate(controller, (global::bnet.protocol.exchange.UnsubscribeAdvancedOrderUpdateRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 42:
          this.SettleHistoriesForCS(controller, (global::bnet.protocol.exchange.HistoriesForCSRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.HistoriesForCSResponse>(
              done));
          return;
        case 43:
          this.CancelHistoriesForCS(controller, (global::bnet.protocol.exchange.HistoriesForCSRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.exchange.HistoriesForCSResponse>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.exchange.CreateOrderBookRequest.DefaultInstance;
        case 1:
          return global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest.DefaultInstance;
        case 2:
          return global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest.DefaultInstance;
        case 3:
          return global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest.DefaultInstance;
        case 4:
          return global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest.DefaultInstance;
        case 5:
          return global::bnet.protocol.exchange.QueryOffersByOrderBookRequest.DefaultInstance;
        case 6:
          return global::bnet.protocol.exchange.QueryBidsByOrderBookRequest.DefaultInstance;
        case 7:
          return global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest.DefaultInstance;
        case 8:
          return global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest.DefaultInstance;
        case 9:
          return global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest.DefaultInstance;
        case 10:
          return global::bnet.protocol.exchange_object_provider.ReportAuthorizeRequest.DefaultInstance;
        case 11:
          return global::bnet.protocol.exchange_object_provider.ReportSettleRequest.DefaultInstance;
        case 12:
          return global::bnet.protocol.exchange_object_provider.ReportCancelRequest.DefaultInstance;
        case 13:
          return global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest.DefaultInstance;
        case 14:
          return global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest.DefaultInstance;
        case 15:
          return global::bnet.protocol.exchange.SubscribeOrderUpdateRequest.DefaultInstance;
        case 16:
          return global::bnet.protocol.exchange.UnsubscribeOrderUpdateRequest.DefaultInstance;
        case 17:
          return global::bnet.protocol.exchange_object_provider.GetPaymentMethodsRequest.DefaultInstance;
        case 18:
          return global::bnet.protocol.exchange.ClaimRequest.DefaultInstance;
        case 19:
          return global::bnet.protocol.exchange.ClaimRequest.DefaultInstance;
        case 20:
          return global::bnet.protocol.exchange.ClaimRequest.DefaultInstance;
        case 21:
          return global::bnet.protocol.exchange.ClaimRequest.DefaultInstance;
        case 22:
          return global::bnet.protocol.exchange.CancelRequest.DefaultInstance;
        case 23:
          return global::bnet.protocol.exchange.CancelRequest.DefaultInstance;
        case 24:
          return global::bnet.protocol.exchange.GetConfigurationRequest.DefaultInstance;
        case 25:
          return global::bnet.protocol.exchange.GetBidFeeEstimationRequest.DefaultInstance;
        case 26:
          return global::bnet.protocol.exchange.GetOfferFeeEstimationRequest.DefaultInstance;
        case 27:
          return global::bnet.protocol.exchange.QueryOrdersByAccountForItemRequest.DefaultInstance;
        case 28:
          return global::bnet.protocol.exchange_risk.ReportAuthorizeRiskVerdictRequest.DefaultInstance;
        case 29:
          return global::bnet.protocol.exchange_risk.ReportSettleRiskVerdictRequest.DefaultInstance;
        case 30:
          return global::bnet.protocol.exchange_risk.DelaySettleRiskVerdictRequest.DefaultInstance;
        case 31:
          return global::bnet.protocol.exchange.GetFeeDetailsRequest.DefaultInstance;
        case 32:
          return global::bnet.protocol.exchange.GetOrderBookStatisticsRequest.DefaultInstance;
        case 33:
          return global::bnet.protocol.exchange.GetBidDetailsRequest.DefaultInstance;
        case 34:
          return global::bnet.protocol.exchange.GetOfferDetailsRequest.DefaultInstance;
        case 35:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 36:
          return global::bnet.protocol.exchange.CreateCSTradeRequest.DefaultInstance;
        case 37:
          return global::bnet.protocol.exchange.RefundRequest.DefaultInstance;
        case 38:
          return global::bnet.protocol.exchange_object_provider.ReportRefundRequest.DefaultInstance;
        case 39:
          return global::bnet.protocol.exchange.GetOrderCountRequest.DefaultInstance;
        case 40:
          return global::bnet.protocol.exchange.SubscribeAdvancedOrderUpdateRequest.DefaultInstance;
        case 41:
          return global::bnet.protocol.exchange.UnsubscribeAdvancedOrderUpdateRequest.DefaultInstance;
        case 42:
          return global::bnet.protocol.exchange.HistoriesForCSRequest.DefaultInstance;
        case 43:
          return global::bnet.protocol.exchange.HistoriesForCSRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.exchange.CreateOrderBookResponse.DefaultInstance;
        case 1:
          return global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse.DefaultInstance;
        case 2:
          return global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse.DefaultInstance;
        case 3:
          return global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse.DefaultInstance;
        case 4:
          return global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse.DefaultInstance;
        case 5:
          return global::bnet.protocol.exchange.QueryOffersByOrderBookResponse.DefaultInstance;
        case 6:
          return global::bnet.protocol.exchange.QueryBidsByOrderBookResponse.DefaultInstance;
        case 7:
          return global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse.DefaultInstance;
        case 8:
          return global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse.DefaultInstance;
        case 9:
          return global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse.DefaultInstance;
        case 10:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 11:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 12:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 13:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 14:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 15:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 16:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 17:
          return global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse.DefaultInstance;
        case 18:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 19:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 20:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 21:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 22:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 23:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 24:
          return global::bnet.protocol.exchange.GetConfigurationResponse.DefaultInstance;
        case 25:
          return global::bnet.protocol.exchange.GetFeeEstimationResponse.DefaultInstance;
        case 26:
          return global::bnet.protocol.exchange.GetFeeEstimationResponse.DefaultInstance;
        case 27:
          return global::bnet.protocol.exchange.QueryOrdersByAccountForItemResponse.DefaultInstance;
        case 28:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 29:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 30:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 31:
          return global::bnet.protocol.exchange.GetFeeDetailsResponse.DefaultInstance;
        case 32:
          return global::bnet.protocol.exchange.GetOrderBookStatisticsResponse.DefaultInstance;
        case 33:
          return global::bnet.protocol.exchange.GetBidDetailsResponse.DefaultInstance;
        case 34:
          return global::bnet.protocol.exchange.GetOfferDetailsResponse.DefaultInstance;
        case 35:
          return global::bnet.protocol.exchange.GetSystemTimeResponse.DefaultInstance;
        case 36:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 37:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 38:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 39:
          return global::bnet.protocol.exchange.GetOrderCountResponse.DefaultInstance;
        case 40:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 41:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 42:
          return global::bnet.protocol.exchange.HistoriesForCSResponse.DefaultInstance;
        case 43:
          return global::bnet.protocol.exchange.HistoriesForCSResponse.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bnet.protocol.exchange.ExchangeService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void CreateOrderBook(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.CreateOrderBookRequest request,
          global::System.Action<global::bnet.protocol.exchange.CreateOrderBookResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.exchange.CreateOrderBookResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.CreateOrderBookResponse, global::bnet.protocol.exchange.CreateOrderBookResponse.Builder>(done, global::bnet.protocol.exchange.CreateOrderBookResponse.DefaultInstance));
      }
      
      public override void PlaceOfferOnOrderBook(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.PlaceOfferOnOrderBookRequest request,
          global::System.Action<global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse, global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse.Builder>(done, global::bnet.protocol.exchange.PlaceOfferOnOrderBookResponse.DefaultInstance));
      }
      
      public override void PlaceOfferCreateOrderBookIfNeeded(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededRequest request,
          global::System.Action<global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse, global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse.Builder>(done, global::bnet.protocol.exchange.PlaceOfferCreateOrderBookIfNeededResponse.DefaultInstance));
      }
      
      public override void PlaceBidOnOrderBook(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.PlaceBidOnOrderBookRequest request,
          global::System.Action<global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse, global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse.Builder>(done, global::bnet.protocol.exchange.PlaceBidOnOrderBookResponse.DefaultInstance));
      }
      
      public override void PlaceBidCreateOrderBookIfNeeded(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededRequest request,
          global::System.Action<global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse, global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse.Builder>(done, global::bnet.protocol.exchange.PlaceBidCreateOrderBookIfNeededResponse.DefaultInstance));
      }
      
      public override void QueryOffersByOrderBook(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.QueryOffersByOrderBookRequest request,
          global::System.Action<global::bnet.protocol.exchange.QueryOffersByOrderBookResponse> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bnet.protocol.exchange.QueryOffersByOrderBookResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.QueryOffersByOrderBookResponse, global::bnet.protocol.exchange.QueryOffersByOrderBookResponse.Builder>(done, global::bnet.protocol.exchange.QueryOffersByOrderBookResponse.DefaultInstance));
      }
      
      public override void QueryBidsByOrderBook(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.QueryBidsByOrderBookRequest request,
          global::System.Action<global::bnet.protocol.exchange.QueryBidsByOrderBookResponse> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bnet.protocol.exchange.QueryBidsByOrderBookResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.QueryBidsByOrderBookResponse, global::bnet.protocol.exchange.QueryBidsByOrderBookResponse.Builder>(done, global::bnet.protocol.exchange.QueryBidsByOrderBookResponse.DefaultInstance));
      }
      
      public override void QueryOffersByAccountForItem(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.QueryOffersByAccountForItemRequest request,
          global::System.Action<global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse> done) {
        channel.CallMethod(Descriptor.Methods[7],
            controller, request, global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse, global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse.Builder>(done, global::bnet.protocol.exchange.QueryOffersByAccountForItemResponse.DefaultInstance));
      }
      
      public override void QueryBidsByAccountForItem(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.QueryBidsByAccountForItemRequest request,
          global::System.Action<global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse> done) {
        channel.CallMethod(Descriptor.Methods[8],
            controller, request, global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse, global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse.Builder>(done, global::bnet.protocol.exchange.QueryBidsByAccountForItemResponse.DefaultInstance));
      }
      
      public override void QueryOrderBooksSummary(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.QueryOrderBooksSummaryRequest request,
          global::System.Action<global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse> done) {
        channel.CallMethod(Descriptor.Methods[9],
            controller, request, global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse, global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse.Builder>(done, global::bnet.protocol.exchange.QueryOrderBooksSummaryResponse.DefaultInstance));
      }
      
      public override void ReportAuthorize(
          pb::IRpcController controller,
          global::bnet.protocol.exchange_object_provider.ReportAuthorizeRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[10],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void ReportSettle(
          pb::IRpcController controller,
          global::bnet.protocol.exchange_object_provider.ReportSettleRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[11],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void ReportCancel(
          pb::IRpcController controller,
          global::bnet.protocol.exchange_object_provider.ReportCancelRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[12],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void SubscribeOrderBookStatusChange(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.SubscribeOrderBookStatusChangeRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[13],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void UnsubscribeOrderBookStatusChange(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.UnsubscribeOrderBookStatusChangeRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[14],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void SubscribeOrderUpdate(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.SubscribeOrderUpdateRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[15],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void UnsubscribeOrderUpdate(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.UnsubscribeOrderUpdateRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[16],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void GetPaymentMethods(
          pb::IRpcController controller,
          global::bnet.protocol.exchange_object_provider.GetPaymentMethodsRequest request,
          global::System.Action<global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse> done) {
        channel.CallMethod(Descriptor.Methods[17],
            controller, request, global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse, global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse.Builder>(done, global::bnet.protocol.exchange_object_provider.GetPaymentMethodsResponse.DefaultInstance));
      }
      
      public override void ClaimBidItem(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.ClaimRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[18],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void ClaimBidMoney(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.ClaimRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[19],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void ClaimOfferItem(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.ClaimRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[20],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void ClaimOfferMoney(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.ClaimRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[21],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void CancelBid(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.CancelRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[22],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void CancelOffer(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.CancelRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[23],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void GetConfiguration(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.GetConfigurationRequest request,
          global::System.Action<global::bnet.protocol.exchange.GetConfigurationResponse> done) {
        channel.CallMethod(Descriptor.Methods[24],
            controller, request, global::bnet.protocol.exchange.GetConfigurationResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.GetConfigurationResponse, global::bnet.protocol.exchange.GetConfigurationResponse.Builder>(done, global::bnet.protocol.exchange.GetConfigurationResponse.DefaultInstance));
      }
      
      public override void GetBidFeeEstimation(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.GetBidFeeEstimationRequest request,
          global::System.Action<global::bnet.protocol.exchange.GetFeeEstimationResponse> done) {
        channel.CallMethod(Descriptor.Methods[25],
            controller, request, global::bnet.protocol.exchange.GetFeeEstimationResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.GetFeeEstimationResponse, global::bnet.protocol.exchange.GetFeeEstimationResponse.Builder>(done, global::bnet.protocol.exchange.GetFeeEstimationResponse.DefaultInstance));
      }
      
      public override void GetOfferFeeEstimation(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.GetOfferFeeEstimationRequest request,
          global::System.Action<global::bnet.protocol.exchange.GetFeeEstimationResponse> done) {
        channel.CallMethod(Descriptor.Methods[26],
            controller, request, global::bnet.protocol.exchange.GetFeeEstimationResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.GetFeeEstimationResponse, global::bnet.protocol.exchange.GetFeeEstimationResponse.Builder>(done, global::bnet.protocol.exchange.GetFeeEstimationResponse.DefaultInstance));
      }
      
      public override void QueryOrdersByAccountForItem(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.QueryOrdersByAccountForItemRequest request,
          global::System.Action<global::bnet.protocol.exchange.QueryOrdersByAccountForItemResponse> done) {
        channel.CallMethod(Descriptor.Methods[27],
            controller, request, global::bnet.protocol.exchange.QueryOrdersByAccountForItemResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.QueryOrdersByAccountForItemResponse, global::bnet.protocol.exchange.QueryOrdersByAccountForItemResponse.Builder>(done, global::bnet.protocol.exchange.QueryOrdersByAccountForItemResponse.DefaultInstance));
      }
      
      public override void ReportAuthorizeRiskVerdict(
          pb::IRpcController controller,
          global::bnet.protocol.exchange_risk.ReportAuthorizeRiskVerdictRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[28],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void ReportSettleRiskVerdict(
          pb::IRpcController controller,
          global::bnet.protocol.exchange_risk.ReportSettleRiskVerdictRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[29],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void DelaySettleRiskVerdict(
          pb::IRpcController controller,
          global::bnet.protocol.exchange_risk.DelaySettleRiskVerdictRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[30],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void GetFeeDetails(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.GetFeeDetailsRequest request,
          global::System.Action<global::bnet.protocol.exchange.GetFeeDetailsResponse> done) {
        channel.CallMethod(Descriptor.Methods[31],
            controller, request, global::bnet.protocol.exchange.GetFeeDetailsResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.GetFeeDetailsResponse, global::bnet.protocol.exchange.GetFeeDetailsResponse.Builder>(done, global::bnet.protocol.exchange.GetFeeDetailsResponse.DefaultInstance));
      }
      
      public override void GetOrderBookStatistics(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.GetOrderBookStatisticsRequest request,
          global::System.Action<global::bnet.protocol.exchange.GetOrderBookStatisticsResponse> done) {
        channel.CallMethod(Descriptor.Methods[32],
            controller, request, global::bnet.protocol.exchange.GetOrderBookStatisticsResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.GetOrderBookStatisticsResponse, global::bnet.protocol.exchange.GetOrderBookStatisticsResponse.Builder>(done, global::bnet.protocol.exchange.GetOrderBookStatisticsResponse.DefaultInstance));
      }
      
      public override void GetBidDetails(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.GetBidDetailsRequest request,
          global::System.Action<global::bnet.protocol.exchange.GetBidDetailsResponse> done) {
        channel.CallMethod(Descriptor.Methods[33],
            controller, request, global::bnet.protocol.exchange.GetBidDetailsResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.GetBidDetailsResponse, global::bnet.protocol.exchange.GetBidDetailsResponse.Builder>(done, global::bnet.protocol.exchange.GetBidDetailsResponse.DefaultInstance));
      }
      
      public override void GetOfferDetails(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.GetOfferDetailsRequest request,
          global::System.Action<global::bnet.protocol.exchange.GetOfferDetailsResponse> done) {
        channel.CallMethod(Descriptor.Methods[34],
            controller, request, global::bnet.protocol.exchange.GetOfferDetailsResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.GetOfferDetailsResponse, global::bnet.protocol.exchange.GetOfferDetailsResponse.Builder>(done, global::bnet.protocol.exchange.GetOfferDetailsResponse.DefaultInstance));
      }
      
      public override void GetSystemTime(
          pb::IRpcController controller,
          global::bnet.protocol.NoData request,
          global::System.Action<global::bnet.protocol.exchange.GetSystemTimeResponse> done) {
        channel.CallMethod(Descriptor.Methods[35],
            controller, request, global::bnet.protocol.exchange.GetSystemTimeResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.GetSystemTimeResponse, global::bnet.protocol.exchange.GetSystemTimeResponse.Builder>(done, global::bnet.protocol.exchange.GetSystemTimeResponse.DefaultInstance));
      }
      
      public override void CreateCSTrade(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.CreateCSTradeRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[36],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void RefundBid(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.RefundRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[37],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void ReportRefund(
          pb::IRpcController controller,
          global::bnet.protocol.exchange_object_provider.ReportRefundRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[38],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void GetOrderCount(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.GetOrderCountRequest request,
          global::System.Action<global::bnet.protocol.exchange.GetOrderCountResponse> done) {
        channel.CallMethod(Descriptor.Methods[39],
            controller, request, global::bnet.protocol.exchange.GetOrderCountResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.GetOrderCountResponse, global::bnet.protocol.exchange.GetOrderCountResponse.Builder>(done, global::bnet.protocol.exchange.GetOrderCountResponse.DefaultInstance));
      }
      
      public override void SubscribeAdvancedOrderUpdate(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.SubscribeAdvancedOrderUpdateRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[40],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void UnsubscribeAdvancedOrderUpdate(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.UnsubscribeAdvancedOrderUpdateRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[41],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void SettleHistoriesForCS(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.HistoriesForCSRequest request,
          global::System.Action<global::bnet.protocol.exchange.HistoriesForCSResponse> done) {
        channel.CallMethod(Descriptor.Methods[42],
            controller, request, global::bnet.protocol.exchange.HistoriesForCSResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.HistoriesForCSResponse, global::bnet.protocol.exchange.HistoriesForCSResponse.Builder>(done, global::bnet.protocol.exchange.HistoriesForCSResponse.DefaultInstance));
      }
      
      public override void CancelHistoriesForCS(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.HistoriesForCSRequest request,
          global::System.Action<global::bnet.protocol.exchange.HistoriesForCSResponse> done) {
        channel.CallMethod(Descriptor.Methods[43],
            controller, request, global::bnet.protocol.exchange.HistoriesForCSResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.exchange.HistoriesForCSResponse, global::bnet.protocol.exchange.HistoriesForCSResponse.Builder>(done, global::bnet.protocol.exchange.HistoriesForCSResponse.DefaultInstance));
      }
    }
  }
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class ExchangeNotify : pb::IService {
    public abstract void NotifyOrderBookStatusChange(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.OrderBookNotificationRequest request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyOfferUpdate(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.OfferNotificationRequest request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyBidUpdate(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.BidNotificationRequest request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyCustomMessage(
        pb::IRpcController controller,
        global::bnet.protocol.exchange.CustomNotificationRequest request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.ExchangeService.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.NotifyOrderBookStatusChange(controller, (global::bnet.protocol.exchange.OrderBookNotificationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 1:
          this.NotifyOfferUpdate(controller, (global::bnet.protocol.exchange.OfferNotificationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 2:
          this.NotifyBidUpdate(controller, (global::bnet.protocol.exchange.BidNotificationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 3:
          this.NotifyCustomMessage(controller, (global::bnet.protocol.exchange.CustomNotificationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.exchange.OrderBookNotificationRequest.DefaultInstance;
        case 1:
          return global::bnet.protocol.exchange.OfferNotificationRequest.DefaultInstance;
        case 2:
          return global::bnet.protocol.exchange.BidNotificationRequest.DefaultInstance;
        case 3:
          return global::bnet.protocol.exchange.CustomNotificationRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 1:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 2:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 3:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bnet.protocol.exchange.ExchangeNotify {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void NotifyOrderBookStatusChange(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.OrderBookNotificationRequest request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyOfferUpdate(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.OfferNotificationRequest request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyBidUpdate(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.BidNotificationRequest request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyCustomMessage(
          pb::IRpcController controller,
          global::bnet.protocol.exchange.CustomNotificationRequest request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
