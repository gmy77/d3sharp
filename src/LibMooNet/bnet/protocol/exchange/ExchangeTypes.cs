// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.exchange {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class ExchangeTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_OrderBook__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBook, global::bnet.protocol.exchange.OrderBook.Builder> internal__static_bnet_protocol_exchange_OrderBook__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_OrderBookHandle__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBookHandle, global::bnet.protocol.exchange.OrderBookHandle.Builder> internal__static_bnet_protocol_exchange_OrderBookHandle__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_OrderBookNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBookNotification, global::bnet.protocol.exchange.OrderBookNotification.Builder> internal__static_bnet_protocol_exchange_OrderBookNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_OrderBookSummary__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBookSummary, global::bnet.protocol.exchange.OrderBookSummary.Builder> internal__static_bnet_protocol_exchange_OrderBookSummary__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_Order__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Order, global::bnet.protocol.exchange.Order.Builder> internal__static_bnet_protocol_exchange_Order__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_Extension__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Extension, global::bnet.protocol.exchange.Extension.Builder> internal__static_bnet_protocol_exchange_Extension__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_Offer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Offer, global::bnet.protocol.exchange.Offer.Builder> internal__static_bnet_protocol_exchange_Offer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_OfferExtended__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OfferExtended, global::bnet.protocol.exchange.OfferExtended.Builder> internal__static_bnet_protocol_exchange_OfferExtended__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_OfferCreation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OfferCreation, global::bnet.protocol.exchange.OfferCreation.Builder> internal__static_bnet_protocol_exchange_OfferCreation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_Bid__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Bid, global::bnet.protocol.exchange.Bid.Builder> internal__static_bnet_protocol_exchange_Bid__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_BidExtended__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.BidExtended, global::bnet.protocol.exchange.BidExtended.Builder> internal__static_bnet_protocol_exchange_BidExtended__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_BidCreation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.BidCreation, global::bnet.protocol.exchange.BidCreation.Builder> internal__static_bnet_protocol_exchange_BidCreation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_OrderExtended__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderExtended, global::bnet.protocol.exchange.OrderExtended.Builder> internal__static_bnet_protocol_exchange_OrderExtended__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryFilterByOrderId__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryFilterByOrderId, global::bnet.protocol.exchange.QueryFilterByOrderId.Builder> internal__static_bnet_protocol_exchange_QueryFilterByOrderId__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryFilterByCreatedTime__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryFilterByCreatedTime, global::bnet.protocol.exchange.QueryFilterByCreatedTime.Builder> internal__static_bnet_protocol_exchange_QueryFilterByCreatedTime__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_QueryOrderFilter__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOrderFilter, global::bnet.protocol.exchange.QueryOrderFilter.Builder> internal__static_bnet_protocol_exchange_QueryOrderFilter__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_CurrencyConfig__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CurrencyConfig, global::bnet.protocol.exchange.CurrencyConfig.Builder> internal__static_bnet_protocol_exchange_CurrencyConfig__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_SpecialistConfig__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.SpecialistConfig, global::bnet.protocol.exchange.SpecialistConfig.Builder> internal__static_bnet_protocol_exchange_SpecialistConfig__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_FeeEstimationData__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.FeeEstimationData, global::bnet.protocol.exchange.FeeEstimationData.Builder> internal__static_bnet_protocol_exchange_FeeEstimationData__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_FeeDetail__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.FeeDetail, global::bnet.protocol.exchange.FeeDetail.Builder> internal__static_bnet_protocol_exchange_FeeDetail__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_PriceDetail__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PriceDetail, global::bnet.protocol.exchange.PriceDetail.Builder> internal__static_bnet_protocol_exchange_PriceDetail__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_Count__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Count, global::bnet.protocol.exchange.Count.Builder> internal__static_bnet_protocol_exchange_Count__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_AdvancedSubscription__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.AdvancedSubscription, global::bnet.protocol.exchange.AdvancedSubscription.Builder> internal__static_bnet_protocol_exchange_AdvancedSubscription__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_exchange_HistoryData__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.HistoryData, global::bnet.protocol.exchange.HistoryData.Builder> internal__static_bnet_protocol_exchange_HistoryData__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ExchangeTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChlibmV0L2V4Y2hhbmdlX3R5cGVzLnByb3RvEhZibmV0LnByb3RvY29sLmV4" + 
          "Y2hhbmdlGhFibmV0L2VudGl0eS5wcm90bxoTYm5ldC9leGNoYW5nZS5wcm90" + 
          "byKkAQoJT3JkZXJCb29rEjIKBm9iamVjdBgBIAIoCzIiLmJuZXQucHJvdG9j" + 
          "b2wuZXhjaGFuZ2UuQmxvYk9mVHlwZRIPCgdwcm9ncmFtGAIgAigHEhUKDWNv" + 
          "bXBhdGliaWxpdHkYAyACKA0SEAoIY3VycmVuY3kYBCACKAkSEgoKc3BlY2lh" + 
          "bGlzdBgFIAIoBRIVCg1hbGxvd2VkX3JlYWxtGAYgAigNImMKD09yZGVyQm9v" + 
          "a0hhbmRsZRI5CgxwYXJ0aXRpb25faWQYASACKAsyIy5ibmV0LnByb3RvY29s" + 
          "LmV4Y2hhbmdlLlBhcnRpdGlvbklkEhUKDW9yZGVyX2Jvb2tfaWQYAiACKAQi" + 
          "qgIKFU9yZGVyQm9va05vdGlmaWNhdGlvbhI1CgpvcmRlcl9ib29rGAEgAigL" + 
          "MiEuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5PcmRlckJvb2sSOQoMcGFydGl0" + 
          "aW9uX2lkGAIgAigLMiMuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5QYXJ0aXRp" + 
          "b25JZBIVCg1vcmRlcl9ib29rX2lkGAMgAigEEhoKD3RyYWRlX25vd19wcmlj" + 
          "ZRgEIAEoBDoBMBIYCg13aW5uaW5nX3ByaWNlGAUgASgEOgEwEg4KBnN0YXR1" + 
          "cxgGIAIoDRITCgt1cGRhdGVfdGltZRgHIAIoBBIWCgtjbG9zZWRfdGltZRgI" + 
          "IAEoBDoBMBIVCg1maWxsZWRfYW1vdW50GAkgAigEIvsCChBPcmRlckJvb2tT" + 
          "dW1tYXJ5EjkKDHBhcnRpdGlvbl9pZBgBIAIoCzIjLmJuZXQucHJvdG9jb2wu" + 
          "ZXhjaGFuZ2UuUGFydGl0aW9uSWQSFQoNb3JkZXJfYm9va19pZBgCIAIoBBIO" + 
          "CgZyZXN1bHQYAyACKA0SNQoKb3JkZXJfYm9vaxgEIAEoCzIhLmJuZXQucHJv" + 
          "dG9jb2wuZXhjaGFuZ2UuT3JkZXJCb29rEg4KBmFtb3VudBgFIAEoBBIYChBi" + 
          "ZXN0X29mZmVyX3ByaWNlGAYgASgEEhYKDmJlc3RfYmlkX3ByaWNlGAcgASgE" + 
          "EhAKCGVuZF90aW1lGAggASgEEg4KBnN0YXR1cxgJIAEoBRIUCgxjcmVhdGVk" + 
          "X3RpbWUYCiABKAQSEwoLYWN0aXZlX3RpbWUYCyABKAQSEwoLY2xvc2VkX3Rp" + 
          "bWUYDCABKAQSDgoGcmVhc29uGA0gASgNEhoKEm91dF9iaWRfdW5pdF9wcmlj" + 
          "ZRgOIAEoBCLNAgoFT3JkZXISDgoGYW1vdW50GAEgAigNEhIKCnN0YXJ0X3Rp" + 
          "bWUYAiABKAQSEAoIZW5kX3RpbWUYAyABKAQSOwoRYWNjb3VudF9mb3JfbW9u" + 
          "ZXkYBCABKAsyIC5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkJsb2JGcm9tEjoK" + 
          "EGFjY291bnRfZm9yX2l0ZW0YBSABKAsyIC5ibmV0LnByb3RvY29sLmV4Y2hh" + 
          "bmdlLkJsb2JGcm9tEi0KDGJuZXRfYWNjb3VudBgGIAEoCzIXLmJuZXQucHJv" + 
          "dG9jb2wuRW50aXR5SWQSLQoMZ2FtZV9hY2NvdW50GAcgASgLMhcuYm5ldC5w" + 
          "cm90b2NvbC5FbnRpdHlJZBI3CgpzZXNzaW9uX2lkGAggASgLMiMuYm5ldC5w" + 
          "cm90b2NvbC5leGNoYW5nZS5QYXJ0aXRpb25JZCKqBAoJRXh0ZW5zaW9uEjkK" + 
          "DHBhcnRpdGlvbl9pZBgBIAIoCzIjLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2Uu" + 
          "UGFydGl0aW9uSWQSFQoNb3JkZXJfYm9va19pZBgCIAIoBBIQCghvcmRlcl9p" + 
          "ZBgDIAIoBBIVCg1maWxsZWRfYW1vdW50GAQgASgEEhQKDG9yZGVyX3N0YXR1" + 
          "cxgFIAEoBRIXCg9hdXRob3JpemVkX3RpbWUYBiABKAQSFAoMY3JlYXRlZF90" + 
          "aW1lGAcgASgEEhMKC2Nsb3NlZF90aW1lGAggASgEEg4KBnJlYXNvbhgJIAEo" + 
          "DRI1CgpvcmRlcl9ib29rGAogASgLMiEuYm5ldC5wcm90b2NvbC5leGNoYW5n" + 
          "ZS5PcmRlckJvb2sSGQoRb3JkZXJfYm9va19zdGF0dXMYCyABKAQSFgoObW9u" + 
          "ZXlfdG9fY2xhaW0YDCABKAQSFgoOaXRlbXNfdG9fY2xhaW0YDSABKAQSGwoM" + 
          "cmlza19kZWxheWVkGA4gASgIOgVmYWxzZRIZChFmYWlsX29yZGVyX2FjdGlv" + 
          "bhgPIAEoDRIYChBmYWlsX29iamVjdF90eXBlGBAgASgNEhcKD2ZhaWxfZXJy" + 
          "b3JfY29kZRgRIAEoDRIdChVmYWlsX2V4dHJhX2Vycm9yX2NvZGUYEiABKA0S" + 
          "EAoIcmVmdW5kZWQYEyABKAQSGgoSZmlsbGVkX2Z1bmRfYW1vdW50GBQgASgE" + 
          "InwKBU9mZmVyEiwKBW9yZGVyGAEgAigLMh0uYm5ldC5wcm90b2NvbC5leGNo" + 
          "YW5nZS5PcmRlchIXCg90cmFkZV9ub3dfcHJpY2UYAiABKAQSFQoNcmVzZXJ2" + 
          "ZV9wcmljZRgDIAEoBBIVCg1vdXRfYmlkX3ByaWNlGAQgASgEIpIBCg1PZmZl" + 
          "ckV4dGVuZGVkEiwKBW9mZmVyGAEgAigLMh0uYm5ldC5wcm90b2NvbC5leGNo" + 
          "YW5nZS5PZmZlchI0CglleHRlbnNpb24YAiACKAsyIS5ibmV0LnByb3RvY29s" + 
          "LmV4Y2hhbmdlLkV4dGVuc2lvbhIdChVjdXJyZW50X3dpbm5pbmdfcHJpY2UY" + 
          "AyABKAQitQEKDU9mZmVyQ3JlYXRpb24SLAoFb2ZmZXIYASACKAsyHS5ibmV0" + 
          "LnByb3RvY29sLmV4Y2hhbmdlLk9mZmVyEhgKEGF1Y3Rpb25fZHVyYXRpb24Y" + 
          "AiABKAQSGwoTYXVjdGlvbl9zdGFydF9kZWxheRgDIAEoBBI/Cg9iaWxsaW5n" + 
          "X2FkZHJlc3MYBCABKAsyJi5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkJpbGxp" + 
          "bmdBZGRyZXNzImcKA0JpZBIsCgVvcmRlchgBIAIoCzIdLmJuZXQucHJvdG9j" + 
          "b2wuZXhjaGFuZ2UuT3JkZXISGgoSY3VycmVudF91bml0X3ByaWNlGAIgASgE" + 
          "EhYKDm1heF91bml0X3ByaWNlGAMgASgEIooCCgtCaWRFeHRlbmRlZBIoCgNi" + 
          "aWQYASACKAsyGy5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkJpZBI0CglleHRl" + 
          "bnNpb24YAiACKAsyIS5ibmV0LnByb3RvY29sLmV4Y2hhbmdlLkV4dGVuc2lv" + 
          "bhIbChNvZmZlcl9vdXRfYmlkX3ByaWNlGAMgASgEEh0KFW9mZmVyX3RyYWRl" + 
          "X25vd19wcmljZRgEIAEoBBIjChtvZmZlcl9jdXJyZW50X3dpbm5pbmdfcHJp" + 
          "Y2UYBSABKAQSHgoWYmlkX2N1cnJlbnRfdW5pdF9wcmljZRgGIAEoBBIaChJi" + 
          "aWRfbWF4X3VuaXRfcHJpY2UYByABKAQizAEKC0JpZENyZWF0aW9uEigKA2Jp" + 
          "ZBgBIAIoCzIbLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuQmlkEhgKEGF1Y3Rp" + 
          "b25fZHVyYXRpb24YAiABKAQSGwoTYXVjdGlvbl9zdGFydF9kZWxheRgDIAEo" + 
          "BBI/Cg9iaWxsaW5nX2FkZHJlc3MYBCABKAsyJi5ibmV0LnByb3RvY29sLmV4" + 
          "Y2hhbmdlLkJpbGxpbmdBZGRyZXNzEhsKDGZpbGxfb3Jfa2lsbBgFIAEoCDoF" + 
          "ZmFsc2UinQEKDU9yZGVyRXh0ZW5kZWQSEgoKb3JkZXJfdHlwZRgBIAIoDRI5" + 
          "CgxiaWRfZXh0ZW5kZWQYAiABKAsyIy5ibmV0LnByb3RvY29sLmV4Y2hhbmdl" + 
          "LkJpZEV4dGVuZGVkEj0KDm9mZmVyX2V4dGVuZGVkGAMgASgLMiUuYm5ldC5w" + 
          "cm90b2NvbC5leGNoYW5nZS5PZmZlckV4dGVuZGVkIlMKFFF1ZXJ5RmlsdGVy" + 
          "QnlPcmRlcklkEhIKCm1heF9yZXN1bHQYASACKA0SFAoMcmVmX29yZGVyX2lk" + 
          "GAIgASgEEhEKCXJlZl9wcmljZRgDIAEoBCJaChhRdWVyeUZpbHRlckJ5Q3Jl" + 
          "YXRlZFRpbWUSEgoKbWF4X3Jlc3VsdBgBIAIoDRIYChByZWZfY3JlYXRlZF90" + 
          "aW1lGAIgASgEEhAKCGN1cnJlbmN5GAMgASgJIvYBChBRdWVyeU9yZGVyRmls" + 
          "dGVyEhAKCGN1cnJlbmN5GAEgASgJEhIKCnNwZWNpYWxpc3QYAiABKA0SEgoK" + 
          "b3JkZXJfdHlwZRgDIAEoDRIUCgljbGFpbWFibGUYBCABKA06ATASGQoRb3Jk" + 
          "ZXJfc3RhdHVzX21hc2sYBSABKA0SFQoGcm9sbHVwGAYgASgIOgVmYWxzZRJF" + 
          "Cgt0aW1lX2ZpbHRlchgHIAIoCzIwLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2Uu" + 
          "UXVlcnlGaWx0ZXJCeUNyZWF0ZWRUaW1lEhkKEW9yZGVyX2Jvb2tfc3RhdHVz" + 
          "GAggASgNIpcBCg5DdXJyZW5jeUNvbmZpZxIQCghjdXJyZW5jeRgBIAIoCRIR" + 
          "Cgl0aWNrX3NpemUYAiABKAQSFgoObWluX3VuaXRfcHJpY2UYAyABKAQSFgoO" + 
          "bWF4X3VuaXRfcHJpY2UYBCABKAQSFwoPbWluX3RvdGFsX3ByaWNlGAUgASgE" + 
          "EhcKD21heF90b3RhbF9wcmljZRgGIAEoBCKvAwoQU3BlY2lhbGlzdENvbmZp" + 
          "ZxISCgpzcGVjaWFsaXN0GAEgAigFEh0KEWF1Y3Rpb25fZHVyYXRpb25zGAIg" + 
          "AygEQgIQARIgChRhdWN0aW9uX3N0YXJ0X2RlbGF5cxgDIAMoBEICEAESJAoc" + 
          "YW50aV9zbmlwaW5nX2V4dGVuc2lvbl9kZWxheRgEIAEoBBIbChBtYXhfaXRl" + 
          "bXNfYW1vdW50GAUgASgEOgEwEiAKGHN0YXJ0aW5nX3VuaXRfcHJpY2VfcnVs" + 
          "ZRgGIAEoBRIgChhyZXNlcnZlZF91bml0X3ByaWNlX3J1bGUYByABKAUSIQoZ" + 
          "dHJhZGVfbm93X3VuaXRfcHJpY2VfcnVsZRgIIAEoBRIfChdjdXJyZW50X3Vu" + 
          "aXRfcHJpY2VfcnVsZRgJIAEoBRIfChdtYXhpbXVtX3VuaXRfcHJpY2VfcnVs" + 
          "ZRgKIAEoBRI/Cg9jdXJyZW5jeV9jb25maWcYCyADKAsyJi5ibmV0LnByb3Rv" + 
          "Y29sLmV4Y2hhbmdlLkN1cnJlbmN5Q29uZmlnEhkKEWZpbGxfb3Jfa2lsbF9y" + 
          "dWxlGAwgASgFIvUBChFGZWVFc3RpbWF0aW9uRGF0YRIPCgdwcm9ncmFtGAEg" + 
          "AigHEhIKCnNwZWNpYWxpc3QYAiACKAUSEAoIY3VycmVuY3kYAyACKAkSDgoG" + 
          "c291cmNlGAQgAigHEhQKDG1vbmV5X2Ftb3VudBgFIAIoBBITCgtpdGVtX2Ft" + 
          "b3VudBgGIAIoBBItCgxibmV0X2FjY291bnQYByABKAsyFy5ibmV0LnByb3Rv" + 
          "Y29sLkVudGl0eUlkEj8KD2JpbGxpbmdfYWRkcmVzcxgIIAEoCzImLmJuZXQu" + 
          "cHJvdG9jb2wuZXhjaGFuZ2UuQmlsbGluZ0FkZHJlc3MioQMKCUZlZURldGFp" + 
          "bBIOCgZyb3dudW0YASACKAQSGgoSZmVlX2F1dGhfZGV0YWlsX2lkGAIgAigE" + 
          "Eg4KBmZlZV9pZBgDIAEoBBISCgpmZWVfYW1vdW50GAQgASgEEhcKD2Rpc2Nv" + 
          "dW50X2Ftb3VudBgFIAEoBBIUCgxmZWVfZ3JvdXBfaWQYBiABKAQSFgoOZmVl" + 
          "X2dyb3VwX25hbWUYByABKAkSFwoPZmxhdF9mZWVfYW1vdW50GAggASgEEhgK" + 
          "EHNjYWxpbmdfZmVlX3JhdGUYCSABKAISFgoObWF4X2ZlZV9hbW91bnQYCiAB" + 
          "KAQSFwoPZmVlX2Rlc2NyaXB0aW9uGAsgASgJEg4KBmlzX3RheBgMIAIoCBIW" + 
          "Cg5jb3Vwb25fYm9va19pZBgNIAEoBBITCgtjb3Vwb25fdHlwZRgOIAEoBBIa" + 
          "ChJjb3Vwb25fZGVzY3JpcHRpb24YDyABKAkSHwoXbGVmdF9vdmVyX2NvdXBv" + 
          "bl9jcmVkaXQYECABKAQSHwoXbGVmdF9vdmVyX2NvdXBvbl9jaGFyZ2UYESAB" + 
          "KAQiMgoLUHJpY2VEZXRhaWwSEwoLdHJhZGVfcHJpY2UYASACKAQSDgoGYW1v" + 
          "dW50GAIgAigEIiUKBUNvdW50Eg0KBWNvdW50GAEgAigNEg0KBWxpbWl0GAIg" + 
          "ASgNIkYKFEFkdmFuY2VkU3Vic2NyaXB0aW9uEg8KB3Byb2dyYW0YASACKAcS" + 
          "DQoFZXZlbnQYAiACKA0SDgoGcmVhc29uGAMgAygNIoMHCgtIaXN0b3J5RGF0" + 
          "YRIVCg1vcmRlcl9ib29rX2lkGAEgAigEEjkKDHBhcnRpdGlvbl9pZBgCIAIo" + 
          "CzIjLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuUGFydGl0aW9uSWQSEQoJYWN0" + 
          "aW9uX2lkGAMgAigEEhgKEHBhcmVudF9zZXR0bGVfaWQYBCABKAQSFgoOcGFy" + 
          "ZW50X3NldHRsZWQYBSABKAgSGQoRYXV0aG9yaXplZF9hbW91bnQYBiACKAQS" + 
          "HQoVYXV0aG9yaXplZF9mZWVfYW1vdW50GAcgASgEEg4KBmFtb3VudBgIIAIo" + 
          "BBISCgpmZWVfYW1vdW50GAkgASgEEhAKCGRlZmVycmVkGAogAigIEhkKEWhh" + 
          "c19iZWVuX2RlZmVycmVkGAsgAigIEhAKCHByb2dyZXNzGAwgAigEEg8KB2Ny" + 
          "ZWF0ZWQYDSACKAQSFgoOcmlza19jb21wbGV0ZWQYDiABKAQSEwoLcmlza19y" + 
          "ZXN1bHQYDyABKAQSFAoMcmlza192ZXJkaWN0GBAgASgEEhEKCWNvbXBsZXRl" + 
          "ZBgRIAEoBBITCgtyZXN1bHRfY29kZRgSIAEoBBI6ChBhY2NvdW50X2Zvcl9p" + 
          "dGVtGBMgAigLMiAuYm5ldC5wcm90b2NvbC5leGNoYW5nZS5CbG9iRnJvbRI7" + 
          "ChFhY2NvdW50X2Zvcl9tb25leRgUIAIoCzIgLmJuZXQucHJvdG9jb2wuZXhj" + 
          "aGFuZ2UuQmxvYkZyb20SEgoKb3JkZXJfdHlwZRgVIAIoDRIQCghvcmRlcl9p" + 
          "ZBgWIAIoBBIPCgdhdXRoX2lkGBcgAigEEhgKEGF1dGhfb2JqZWN0X3R5cGUY" + 
          "GCACKA0SFwoPdHJhbnNfZGlyZWN0aW9uGBkgAigJEh4KFmF1dGhfY29tcGxl" + 
          "dGVfcHJvZ3Jlc3MYGiACKAQSHAoUYXV0aF9maWxsZWRfcHJvZ3Jlc3MYGyAC" + 
          "KAQSGwoTYXV0aF90b3RhbF9wcm9ncmVzcxgcIAIoBBI7CgthdXRoX2hhbmRs" + 
          "ZRgdIAIoCzImLmJuZXQucHJvdG9jb2wuZXhjaGFuZ2UuQmxvYkZyb21PZlR5" + 
          "cGUSFQoNYXV0aF9kZWZlcnJlZBgeIAIoCBIyCgV0b2tlbhgfIAIoCzIjLmJu" + 
          "ZXQucHJvdG9jb2wuZXhjaGFuZ2UuUGFydGl0aW9uSWQ=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bnet_protocol_exchange_OrderBook__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bnet_protocol_exchange_OrderBook__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBook, global::bnet.protocol.exchange.OrderBook.Builder>(internal__static_bnet_protocol_exchange_OrderBook__Descriptor,
                new string[] { "Object", "Program", "Compatibility", "Currency", "Specialist", "AllowedRealm", });
        internal__static_bnet_protocol_exchange_OrderBookHandle__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bnet_protocol_exchange_OrderBookHandle__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBookHandle, global::bnet.protocol.exchange.OrderBookHandle.Builder>(internal__static_bnet_protocol_exchange_OrderBookHandle__Descriptor,
                new string[] { "PartitionId", "OrderBookId", });
        internal__static_bnet_protocol_exchange_OrderBookNotification__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bnet_protocol_exchange_OrderBookNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBookNotification, global::bnet.protocol.exchange.OrderBookNotification.Builder>(internal__static_bnet_protocol_exchange_OrderBookNotification__Descriptor,
                new string[] { "OrderBook", "PartitionId", "OrderBookId", "TradeNowPrice", "WinningPrice", "Status", "UpdateTime", "ClosedTime", "FilledAmount", });
        internal__static_bnet_protocol_exchange_OrderBookSummary__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bnet_protocol_exchange_OrderBookSummary__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderBookSummary, global::bnet.protocol.exchange.OrderBookSummary.Builder>(internal__static_bnet_protocol_exchange_OrderBookSummary__Descriptor,
                new string[] { "PartitionId", "OrderBookId", "Result", "OrderBook", "Amount", "BestOfferPrice", "BestBidPrice", "EndTime", "Status", "CreatedTime", "ActiveTime", "ClosedTime", "Reason", "OutBidUnitPrice", });
        internal__static_bnet_protocol_exchange_Order__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bnet_protocol_exchange_Order__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Order, global::bnet.protocol.exchange.Order.Builder>(internal__static_bnet_protocol_exchange_Order__Descriptor,
                new string[] { "Amount", "StartTime", "EndTime", "AccountForMoney", "AccountForItem", "BnetAccount", "GameAccount", "SessionId", });
        internal__static_bnet_protocol_exchange_Extension__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bnet_protocol_exchange_Extension__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Extension, global::bnet.protocol.exchange.Extension.Builder>(internal__static_bnet_protocol_exchange_Extension__Descriptor,
                new string[] { "PartitionId", "OrderBookId", "OrderId", "FilledAmount", "OrderStatus", "AuthorizedTime", "CreatedTime", "ClosedTime", "Reason", "OrderBook", "OrderBookStatus", "MoneyToClaim", "ItemsToClaim", "RiskDelayed", "FailOrderAction", "FailObjectType", "FailErrorCode", "FailExtraErrorCode", "Refunded", "FilledFundAmount", });
        internal__static_bnet_protocol_exchange_Offer__Descriptor = Descriptor.MessageTypes[6];
        internal__static_bnet_protocol_exchange_Offer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Offer, global::bnet.protocol.exchange.Offer.Builder>(internal__static_bnet_protocol_exchange_Offer__Descriptor,
                new string[] { "Order", "TradeNowPrice", "ReservePrice", "OutBidPrice", });
        internal__static_bnet_protocol_exchange_OfferExtended__Descriptor = Descriptor.MessageTypes[7];
        internal__static_bnet_protocol_exchange_OfferExtended__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OfferExtended, global::bnet.protocol.exchange.OfferExtended.Builder>(internal__static_bnet_protocol_exchange_OfferExtended__Descriptor,
                new string[] { "Offer", "Extension", "CurrentWinningPrice", });
        internal__static_bnet_protocol_exchange_OfferCreation__Descriptor = Descriptor.MessageTypes[8];
        internal__static_bnet_protocol_exchange_OfferCreation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OfferCreation, global::bnet.protocol.exchange.OfferCreation.Builder>(internal__static_bnet_protocol_exchange_OfferCreation__Descriptor,
                new string[] { "Offer", "AuctionDuration", "AuctionStartDelay", "BillingAddress", });
        internal__static_bnet_protocol_exchange_Bid__Descriptor = Descriptor.MessageTypes[9];
        internal__static_bnet_protocol_exchange_Bid__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Bid, global::bnet.protocol.exchange.Bid.Builder>(internal__static_bnet_protocol_exchange_Bid__Descriptor,
                new string[] { "Order", "CurrentUnitPrice", "MaxUnitPrice", });
        internal__static_bnet_protocol_exchange_BidExtended__Descriptor = Descriptor.MessageTypes[10];
        internal__static_bnet_protocol_exchange_BidExtended__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.BidExtended, global::bnet.protocol.exchange.BidExtended.Builder>(internal__static_bnet_protocol_exchange_BidExtended__Descriptor,
                new string[] { "Bid", "Extension", "OfferOutBidPrice", "OfferTradeNowPrice", "OfferCurrentWinningPrice", "BidCurrentUnitPrice", "BidMaxUnitPrice", });
        internal__static_bnet_protocol_exchange_BidCreation__Descriptor = Descriptor.MessageTypes[11];
        internal__static_bnet_protocol_exchange_BidCreation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.BidCreation, global::bnet.protocol.exchange.BidCreation.Builder>(internal__static_bnet_protocol_exchange_BidCreation__Descriptor,
                new string[] { "Bid", "AuctionDuration", "AuctionStartDelay", "BillingAddress", "FillOrKill", });
        internal__static_bnet_protocol_exchange_OrderExtended__Descriptor = Descriptor.MessageTypes[12];
        internal__static_bnet_protocol_exchange_OrderExtended__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.OrderExtended, global::bnet.protocol.exchange.OrderExtended.Builder>(internal__static_bnet_protocol_exchange_OrderExtended__Descriptor,
                new string[] { "OrderType", "BidExtended", "OfferExtended", });
        internal__static_bnet_protocol_exchange_QueryFilterByOrderId__Descriptor = Descriptor.MessageTypes[13];
        internal__static_bnet_protocol_exchange_QueryFilterByOrderId__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryFilterByOrderId, global::bnet.protocol.exchange.QueryFilterByOrderId.Builder>(internal__static_bnet_protocol_exchange_QueryFilterByOrderId__Descriptor,
                new string[] { "MaxResult", "RefOrderId", "RefPrice", });
        internal__static_bnet_protocol_exchange_QueryFilterByCreatedTime__Descriptor = Descriptor.MessageTypes[14];
        internal__static_bnet_protocol_exchange_QueryFilterByCreatedTime__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryFilterByCreatedTime, global::bnet.protocol.exchange.QueryFilterByCreatedTime.Builder>(internal__static_bnet_protocol_exchange_QueryFilterByCreatedTime__Descriptor,
                new string[] { "MaxResult", "RefCreatedTime", "Currency", });
        internal__static_bnet_protocol_exchange_QueryOrderFilter__Descriptor = Descriptor.MessageTypes[15];
        internal__static_bnet_protocol_exchange_QueryOrderFilter__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.QueryOrderFilter, global::bnet.protocol.exchange.QueryOrderFilter.Builder>(internal__static_bnet_protocol_exchange_QueryOrderFilter__Descriptor,
                new string[] { "Currency", "Specialist", "OrderType", "Claimable", "OrderStatusMask", "Rollup", "TimeFilter", "OrderBookStatus", });
        internal__static_bnet_protocol_exchange_CurrencyConfig__Descriptor = Descriptor.MessageTypes[16];
        internal__static_bnet_protocol_exchange_CurrencyConfig__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.CurrencyConfig, global::bnet.protocol.exchange.CurrencyConfig.Builder>(internal__static_bnet_protocol_exchange_CurrencyConfig__Descriptor,
                new string[] { "Currency", "TickSize", "MinUnitPrice", "MaxUnitPrice", "MinTotalPrice", "MaxTotalPrice", });
        internal__static_bnet_protocol_exchange_SpecialistConfig__Descriptor = Descriptor.MessageTypes[17];
        internal__static_bnet_protocol_exchange_SpecialistConfig__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.SpecialistConfig, global::bnet.protocol.exchange.SpecialistConfig.Builder>(internal__static_bnet_protocol_exchange_SpecialistConfig__Descriptor,
                new string[] { "Specialist", "AuctionDurations", "AuctionStartDelays", "AntiSnipingExtensionDelay", "MaxItemsAmount", "StartingUnitPriceRule", "ReservedUnitPriceRule", "TradeNowUnitPriceRule", "CurrentUnitPriceRule", "MaximumUnitPriceRule", "CurrencyConfig", "FillOrKillRule", });
        internal__static_bnet_protocol_exchange_FeeEstimationData__Descriptor = Descriptor.MessageTypes[18];
        internal__static_bnet_protocol_exchange_FeeEstimationData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.FeeEstimationData, global::bnet.protocol.exchange.FeeEstimationData.Builder>(internal__static_bnet_protocol_exchange_FeeEstimationData__Descriptor,
                new string[] { "Program", "Specialist", "Currency", "Source", "MoneyAmount", "ItemAmount", "BnetAccount", "BillingAddress", });
        internal__static_bnet_protocol_exchange_FeeDetail__Descriptor = Descriptor.MessageTypes[19];
        internal__static_bnet_protocol_exchange_FeeDetail__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.FeeDetail, global::bnet.protocol.exchange.FeeDetail.Builder>(internal__static_bnet_protocol_exchange_FeeDetail__Descriptor,
                new string[] { "Rownum", "FeeAuthDetailId", "FeeId", "FeeAmount", "DiscountAmount", "FeeGroupId", "FeeGroupName", "FlatFeeAmount", "ScalingFeeRate", "MaxFeeAmount", "FeeDescription", "IsTax", "CouponBookId", "CouponType", "CouponDescription", "LeftOverCouponCredit", "LeftOverCouponCharge", });
        internal__static_bnet_protocol_exchange_PriceDetail__Descriptor = Descriptor.MessageTypes[20];
        internal__static_bnet_protocol_exchange_PriceDetail__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.PriceDetail, global::bnet.protocol.exchange.PriceDetail.Builder>(internal__static_bnet_protocol_exchange_PriceDetail__Descriptor,
                new string[] { "TradePrice", "Amount", });
        internal__static_bnet_protocol_exchange_Count__Descriptor = Descriptor.MessageTypes[21];
        internal__static_bnet_protocol_exchange_Count__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.Count, global::bnet.protocol.exchange.Count.Builder>(internal__static_bnet_protocol_exchange_Count__Descriptor,
                new string[] { "Count_", "Limit", });
        internal__static_bnet_protocol_exchange_AdvancedSubscription__Descriptor = Descriptor.MessageTypes[22];
        internal__static_bnet_protocol_exchange_AdvancedSubscription__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.AdvancedSubscription, global::bnet.protocol.exchange.AdvancedSubscription.Builder>(internal__static_bnet_protocol_exchange_AdvancedSubscription__Descriptor,
                new string[] { "Program", "Event", "Reason", });
        internal__static_bnet_protocol_exchange_HistoryData__Descriptor = Descriptor.MessageTypes[23];
        internal__static_bnet_protocol_exchange_HistoryData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.exchange.HistoryData, global::bnet.protocol.exchange.HistoryData.Builder>(internal__static_bnet_protocol_exchange_HistoryData__Descriptor,
                new string[] { "OrderBookId", "PartitionId", "ActionId", "ParentSettleId", "ParentSettled", "AuthorizedAmount", "AuthorizedFeeAmount", "Amount", "FeeAmount", "Deferred", "HasBeenDeferred", "Progress", "Created", "RiskCompleted", "RiskResult", "RiskVerdict", "Completed", "ResultCode", "AccountForItem", "AccountForMoney", "OrderType", "OrderId", "AuthId", "AuthObjectType", "TransDirection", "AuthCompleteProgress", "AuthFilledProgress", "AuthTotalProgress", "AuthHandle", "AuthDeferred", "Token", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bnet.protocol.Entity.Descriptor, 
          global::bnet.protocol.exchange.Exchange.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class OrderBook : pb::GeneratedMessage<OrderBook, OrderBook.Builder> {
    private OrderBook() { }
    private static readonly OrderBook defaultInstance = new OrderBook().MakeReadOnly();
    private static readonly string[] _orderBookFieldNames = new string[] { "allowed_realm", "compatibility", "currency", "object", "program", "specialist" };
    private static readonly uint[] _orderBookFieldTags = new uint[] { 48, 24, 34, 10, 21, 40 };
    public static OrderBook DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderBook DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderBook ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OrderBook__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderBook, OrderBook.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OrderBook__FieldAccessorTable; }
    }
    
    public const int ObjectFieldNumber = 1;
    private bool hasObject;
    private global::bnet.protocol.exchange.BlobOfType object_;
    public bool HasObject {
      get { return hasObject; }
    }
    public global::bnet.protocol.exchange.BlobOfType Object {
      get { return object_ ?? global::bnet.protocol.exchange.BlobOfType.DefaultInstance; }
    }
    
    public const int ProgramFieldNumber = 2;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int CompatibilityFieldNumber = 3;
    private bool hasCompatibility;
    private uint compatibility_;
    public bool HasCompatibility {
      get { return hasCompatibility; }
    }
    public uint Compatibility {
      get { return compatibility_; }
    }
    
    public const int CurrencyFieldNumber = 4;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int SpecialistFieldNumber = 5;
    private bool hasSpecialist;
    private int specialist_;
    public bool HasSpecialist {
      get { return hasSpecialist; }
    }
    public int Specialist {
      get { return specialist_; }
    }
    
    public const int AllowedRealmFieldNumber = 6;
    private bool hasAllowedRealm;
    private uint allowedRealm_;
    public bool HasAllowedRealm {
      get { return hasAllowedRealm; }
    }
    public uint AllowedRealm {
      get { return allowedRealm_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasObject) return false;
        if (!hasProgram) return false;
        if (!hasCompatibility) return false;
        if (!hasCurrency) return false;
        if (!hasSpecialist) return false;
        if (!hasAllowedRealm) return false;
        if (!Object.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _orderBookFieldNames;
      if (hasObject) {
        output.WriteMessage(1, field_names[3], Object);
      }
      if (hasProgram) {
        output.WriteFixed32(2, field_names[4], Program);
      }
      if (hasCompatibility) {
        output.WriteUInt32(3, field_names[1], Compatibility);
      }
      if (hasCurrency) {
        output.WriteString(4, field_names[2], Currency);
      }
      if (hasSpecialist) {
        output.WriteInt32(5, field_names[5], Specialist);
      }
      if (hasAllowedRealm) {
        output.WriteUInt32(6, field_names[0], AllowedRealm);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasObject) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Object);
        }
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeFixed32Size(2, Program);
        }
        if (hasCompatibility) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Compatibility);
        }
        if (hasCurrency) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Currency);
        }
        if (hasSpecialist) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, Specialist);
        }
        if (hasAllowedRealm) {
          size += pb::CodedOutputStream.ComputeUInt32Size(6, AllowedRealm);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static OrderBook ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBook ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBook ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBook ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBook ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBook ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderBook ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderBook ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderBook ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBook ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderBook MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderBook prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderBook, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderBook cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderBook result;
      
      private OrderBook PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderBook original = result;
          result = new OrderBook();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderBook MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.OrderBook.Descriptor; }
      }
      
      public override OrderBook DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.OrderBook.DefaultInstance; }
      }
      
      public override OrderBook BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderBook) {
          return MergeFrom((OrderBook) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderBook other) {
        if (other == global::bnet.protocol.exchange.OrderBook.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasObject) {
          MergeObject(other.Object);
        }
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasCompatibility) {
          Compatibility = other.Compatibility;
        }
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasSpecialist) {
          Specialist = other.Specialist;
        }
        if (other.HasAllowedRealm) {
          AllowedRealm = other.AllowedRealm;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderBookFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderBookFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.BlobOfType.Builder subBuilder = global::bnet.protocol.exchange.BlobOfType.CreateBuilder();
              if (result.hasObject) {
                subBuilder.MergeFrom(Object);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Object = subBuilder.BuildPartial();
              break;
            }
            case 21: {
              result.hasProgram = input.ReadFixed32(ref result.program_);
              break;
            }
            case 24: {
              result.hasCompatibility = input.ReadUInt32(ref result.compatibility_);
              break;
            }
            case 34: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
            case 40: {
              result.hasSpecialist = input.ReadInt32(ref result.specialist_);
              break;
            }
            case 48: {
              result.hasAllowedRealm = input.ReadUInt32(ref result.allowedRealm_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasObject {
       get { return result.hasObject; }
      }
      public global::bnet.protocol.exchange.BlobOfType Object {
        get { return result.Object; }
        set { SetObject(value); }
      }
      public Builder SetObject(global::bnet.protocol.exchange.BlobOfType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasObject = true;
        result.object_ = value;
        return this;
      }
      public Builder SetObject(global::bnet.protocol.exchange.BlobOfType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasObject = true;
        result.object_ = builderForValue.Build();
        return this;
      }
      public Builder MergeObject(global::bnet.protocol.exchange.BlobOfType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasObject &&
            result.object_ != global::bnet.protocol.exchange.BlobOfType.DefaultInstance) {
            result.object_ = global::bnet.protocol.exchange.BlobOfType.CreateBuilder(result.object_).MergeFrom(value).BuildPartial();
        } else {
          result.object_ = value;
        }
        result.hasObject = true;
        return this;
      }
      public Builder ClearObject() {
        PrepareBuilder();
        result.hasObject = false;
        result.object_ = null;
        return this;
      }
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public bool HasCompatibility {
        get { return result.hasCompatibility; }
      }
      public uint Compatibility {
        get { return result.Compatibility; }
        set { SetCompatibility(value); }
      }
      public Builder SetCompatibility(uint value) {
        PrepareBuilder();
        result.hasCompatibility = true;
        result.compatibility_ = value;
        return this;
      }
      public Builder ClearCompatibility() {
        PrepareBuilder();
        result.hasCompatibility = false;
        result.compatibility_ = 0;
        return this;
      }
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        PrepareBuilder();
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasSpecialist {
        get { return result.hasSpecialist; }
      }
      public int Specialist {
        get { return result.Specialist; }
        set { SetSpecialist(value); }
      }
      public Builder SetSpecialist(int value) {
        PrepareBuilder();
        result.hasSpecialist = true;
        result.specialist_ = value;
        return this;
      }
      public Builder ClearSpecialist() {
        PrepareBuilder();
        result.hasSpecialist = false;
        result.specialist_ = 0;
        return this;
      }
      
      public bool HasAllowedRealm {
        get { return result.hasAllowedRealm; }
      }
      public uint AllowedRealm {
        get { return result.AllowedRealm; }
        set { SetAllowedRealm(value); }
      }
      public Builder SetAllowedRealm(uint value) {
        PrepareBuilder();
        result.hasAllowedRealm = true;
        result.allowedRealm_ = value;
        return this;
      }
      public Builder ClearAllowedRealm() {
        PrepareBuilder();
        result.hasAllowedRealm = false;
        result.allowedRealm_ = 0;
        return this;
      }
    }
    static OrderBook() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class OrderBookHandle : pb::GeneratedMessage<OrderBookHandle, OrderBookHandle.Builder> {
    private OrderBookHandle() { }
    private static readonly OrderBookHandle defaultInstance = new OrderBookHandle().MakeReadOnly();
    private static readonly string[] _orderBookHandleFieldNames = new string[] { "order_book_id", "partition_id" };
    private static readonly uint[] _orderBookHandleFieldTags = new uint[] { 16, 10 };
    public static OrderBookHandle DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderBookHandle DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderBookHandle ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OrderBookHandle__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderBookHandle, OrderBookHandle.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OrderBookHandle__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int OrderBookIdFieldNumber = 2;
    private bool hasOrderBookId;
    private ulong orderBookId_;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOrderBookId) return false;
        if (!PartitionId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _orderBookHandleFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[1], PartitionId);
      }
      if (hasOrderBookId) {
        output.WriteUInt64(2, field_names[0], OrderBookId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, OrderBookId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static OrderBookHandle ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBookHandle ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBookHandle ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBookHandle ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBookHandle ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBookHandle ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderBookHandle ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderBookHandle ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderBookHandle ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBookHandle ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderBookHandle MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderBookHandle prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderBookHandle, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderBookHandle cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderBookHandle result;
      
      private OrderBookHandle PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderBookHandle original = result;
          result = new OrderBookHandle();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderBookHandle MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.OrderBookHandle.Descriptor; }
      }
      
      public override OrderBookHandle DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.OrderBookHandle.DefaultInstance; }
      }
      
      public override OrderBookHandle BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderBookHandle) {
          return MergeFrom((OrderBookHandle) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderBookHandle other) {
        if (other == global::bnet.protocol.exchange.OrderBookHandle.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderBookHandleFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderBookHandleFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasOrderBookId = input.ReadUInt64(ref result.orderBookId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasOrderBookId {
        get { return result.hasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        PrepareBuilder();
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        PrepareBuilder();
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
    }
    static OrderBookHandle() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class OrderBookNotification : pb::GeneratedMessage<OrderBookNotification, OrderBookNotification.Builder> {
    private OrderBookNotification() { }
    private static readonly OrderBookNotification defaultInstance = new OrderBookNotification().MakeReadOnly();
    private static readonly string[] _orderBookNotificationFieldNames = new string[] { "closed_time", "filled_amount", "order_book", "order_book_id", "partition_id", "status", "trade_now_price", "update_time", "winning_price" };
    private static readonly uint[] _orderBookNotificationFieldTags = new uint[] { 64, 72, 10, 24, 18, 48, 32, 56, 40 };
    public static OrderBookNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderBookNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderBookNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OrderBookNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderBookNotification, OrderBookNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OrderBookNotification__FieldAccessorTable; }
    }
    
    public const int OrderBookFieldNumber = 1;
    private bool hasOrderBook;
    private global::bnet.protocol.exchange.OrderBook orderBook_;
    public bool HasOrderBook {
      get { return hasOrderBook; }
    }
    public global::bnet.protocol.exchange.OrderBook OrderBook {
      get { return orderBook_ ?? global::bnet.protocol.exchange.OrderBook.DefaultInstance; }
    }
    
    public const int PartitionIdFieldNumber = 2;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int OrderBookIdFieldNumber = 3;
    private bool hasOrderBookId;
    private ulong orderBookId_;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public const int TradeNowPriceFieldNumber = 4;
    private bool hasTradeNowPrice;
    private ulong tradeNowPrice_;
    public bool HasTradeNowPrice {
      get { return hasTradeNowPrice; }
    }
    public ulong TradeNowPrice {
      get { return tradeNowPrice_; }
    }
    
    public const int WinningPriceFieldNumber = 5;
    private bool hasWinningPrice;
    private ulong winningPrice_;
    public bool HasWinningPrice {
      get { return hasWinningPrice; }
    }
    public ulong WinningPrice {
      get { return winningPrice_; }
    }
    
    public const int StatusFieldNumber = 6;
    private bool hasStatus;
    private uint status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public uint Status {
      get { return status_; }
    }
    
    public const int UpdateTimeFieldNumber = 7;
    private bool hasUpdateTime;
    private ulong updateTime_;
    public bool HasUpdateTime {
      get { return hasUpdateTime; }
    }
    public ulong UpdateTime {
      get { return updateTime_; }
    }
    
    public const int ClosedTimeFieldNumber = 8;
    private bool hasClosedTime;
    private ulong closedTime_;
    public bool HasClosedTime {
      get { return hasClosedTime; }
    }
    public ulong ClosedTime {
      get { return closedTime_; }
    }
    
    public const int FilledAmountFieldNumber = 9;
    private bool hasFilledAmount;
    private ulong filledAmount_;
    public bool HasFilledAmount {
      get { return hasFilledAmount; }
    }
    public ulong FilledAmount {
      get { return filledAmount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOrderBook) return false;
        if (!hasPartitionId) return false;
        if (!hasOrderBookId) return false;
        if (!hasStatus) return false;
        if (!hasUpdateTime) return false;
        if (!hasFilledAmount) return false;
        if (!OrderBook.IsInitialized) return false;
        if (!PartitionId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _orderBookNotificationFieldNames;
      if (hasOrderBook) {
        output.WriteMessage(1, field_names[2], OrderBook);
      }
      if (hasPartitionId) {
        output.WriteMessage(2, field_names[4], PartitionId);
      }
      if (hasOrderBookId) {
        output.WriteUInt64(3, field_names[3], OrderBookId);
      }
      if (hasTradeNowPrice) {
        output.WriteUInt64(4, field_names[6], TradeNowPrice);
      }
      if (hasWinningPrice) {
        output.WriteUInt64(5, field_names[8], WinningPrice);
      }
      if (hasStatus) {
        output.WriteUInt32(6, field_names[5], Status);
      }
      if (hasUpdateTime) {
        output.WriteUInt64(7, field_names[7], UpdateTime);
      }
      if (hasClosedTime) {
        output.WriteUInt64(8, field_names[0], ClosedTime);
      }
      if (hasFilledAmount) {
        output.WriteUInt64(9, field_names[1], FilledAmount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOrderBook) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, OrderBook);
        }
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, PartitionId);
        }
        if (hasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, OrderBookId);
        }
        if (hasTradeNowPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, TradeNowPrice);
        }
        if (hasWinningPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(5, WinningPrice);
        }
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeUInt32Size(6, Status);
        }
        if (hasUpdateTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(7, UpdateTime);
        }
        if (hasClosedTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(8, ClosedTime);
        }
        if (hasFilledAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(9, FilledAmount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static OrderBookNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBookNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBookNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBookNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBookNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBookNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderBookNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderBookNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderBookNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBookNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderBookNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderBookNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderBookNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderBookNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderBookNotification result;
      
      private OrderBookNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderBookNotification original = result;
          result = new OrderBookNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderBookNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.OrderBookNotification.Descriptor; }
      }
      
      public override OrderBookNotification DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.OrderBookNotification.DefaultInstance; }
      }
      
      public override OrderBookNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderBookNotification) {
          return MergeFrom((OrderBookNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderBookNotification other) {
        if (other == global::bnet.protocol.exchange.OrderBookNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrderBook) {
          MergeOrderBook(other.OrderBook);
        }
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        if (other.HasTradeNowPrice) {
          TradeNowPrice = other.TradeNowPrice;
        }
        if (other.HasWinningPrice) {
          WinningPrice = other.WinningPrice;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasUpdateTime) {
          UpdateTime = other.UpdateTime;
        }
        if (other.HasClosedTime) {
          ClosedTime = other.ClosedTime;
        }
        if (other.HasFilledAmount) {
          FilledAmount = other.FilledAmount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderBookNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderBookNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.OrderBook.Builder subBuilder = global::bnet.protocol.exchange.OrderBook.CreateBuilder();
              if (result.hasOrderBook) {
                subBuilder.MergeFrom(OrderBook);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderBook = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasOrderBookId = input.ReadUInt64(ref result.orderBookId_);
              break;
            }
            case 32: {
              result.hasTradeNowPrice = input.ReadUInt64(ref result.tradeNowPrice_);
              break;
            }
            case 40: {
              result.hasWinningPrice = input.ReadUInt64(ref result.winningPrice_);
              break;
            }
            case 48: {
              result.hasStatus = input.ReadUInt32(ref result.status_);
              break;
            }
            case 56: {
              result.hasUpdateTime = input.ReadUInt64(ref result.updateTime_);
              break;
            }
            case 64: {
              result.hasClosedTime = input.ReadUInt64(ref result.closedTime_);
              break;
            }
            case 72: {
              result.hasFilledAmount = input.ReadUInt64(ref result.filledAmount_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrderBook {
       get { return result.hasOrderBook; }
      }
      public global::bnet.protocol.exchange.OrderBook OrderBook {
        get { return result.OrderBook; }
        set { SetOrderBook(value); }
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderBook = true;
        result.orderBook_ = value;
        return this;
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrderBook = true;
        result.orderBook_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrderBook &&
            result.orderBook_ != global::bnet.protocol.exchange.OrderBook.DefaultInstance) {
            result.orderBook_ = global::bnet.protocol.exchange.OrderBook.CreateBuilder(result.orderBook_).MergeFrom(value).BuildPartial();
        } else {
          result.orderBook_ = value;
        }
        result.hasOrderBook = true;
        return this;
      }
      public Builder ClearOrderBook() {
        PrepareBuilder();
        result.hasOrderBook = false;
        result.orderBook_ = null;
        return this;
      }
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasOrderBookId {
        get { return result.hasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        PrepareBuilder();
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        PrepareBuilder();
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
      
      public bool HasTradeNowPrice {
        get { return result.hasTradeNowPrice; }
      }
      public ulong TradeNowPrice {
        get { return result.TradeNowPrice; }
        set { SetTradeNowPrice(value); }
      }
      public Builder SetTradeNowPrice(ulong value) {
        PrepareBuilder();
        result.hasTradeNowPrice = true;
        result.tradeNowPrice_ = value;
        return this;
      }
      public Builder ClearTradeNowPrice() {
        PrepareBuilder();
        result.hasTradeNowPrice = false;
        result.tradeNowPrice_ = 0UL;
        return this;
      }
      
      public bool HasWinningPrice {
        get { return result.hasWinningPrice; }
      }
      public ulong WinningPrice {
        get { return result.WinningPrice; }
        set { SetWinningPrice(value); }
      }
      public Builder SetWinningPrice(ulong value) {
        PrepareBuilder();
        result.hasWinningPrice = true;
        result.winningPrice_ = value;
        return this;
      }
      public Builder ClearWinningPrice() {
        PrepareBuilder();
        result.hasWinningPrice = false;
        result.winningPrice_ = 0UL;
        return this;
      }
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      public uint Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(uint value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      public bool HasUpdateTime {
        get { return result.hasUpdateTime; }
      }
      public ulong UpdateTime {
        get { return result.UpdateTime; }
        set { SetUpdateTime(value); }
      }
      public Builder SetUpdateTime(ulong value) {
        PrepareBuilder();
        result.hasUpdateTime = true;
        result.updateTime_ = value;
        return this;
      }
      public Builder ClearUpdateTime() {
        PrepareBuilder();
        result.hasUpdateTime = false;
        result.updateTime_ = 0UL;
        return this;
      }
      
      public bool HasClosedTime {
        get { return result.hasClosedTime; }
      }
      public ulong ClosedTime {
        get { return result.ClosedTime; }
        set { SetClosedTime(value); }
      }
      public Builder SetClosedTime(ulong value) {
        PrepareBuilder();
        result.hasClosedTime = true;
        result.closedTime_ = value;
        return this;
      }
      public Builder ClearClosedTime() {
        PrepareBuilder();
        result.hasClosedTime = false;
        result.closedTime_ = 0UL;
        return this;
      }
      
      public bool HasFilledAmount {
        get { return result.hasFilledAmount; }
      }
      public ulong FilledAmount {
        get { return result.FilledAmount; }
        set { SetFilledAmount(value); }
      }
      public Builder SetFilledAmount(ulong value) {
        PrepareBuilder();
        result.hasFilledAmount = true;
        result.filledAmount_ = value;
        return this;
      }
      public Builder ClearFilledAmount() {
        PrepareBuilder();
        result.hasFilledAmount = false;
        result.filledAmount_ = 0UL;
        return this;
      }
    }
    static OrderBookNotification() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class OrderBookSummary : pb::GeneratedMessage<OrderBookSummary, OrderBookSummary.Builder> {
    private OrderBookSummary() { }
    private static readonly OrderBookSummary defaultInstance = new OrderBookSummary().MakeReadOnly();
    private static readonly string[] _orderBookSummaryFieldNames = new string[] { "active_time", "amount", "best_bid_price", "best_offer_price", "closed_time", "created_time", "end_time", "order_book", "order_book_id", "out_bid_unit_price", "partition_id", "reason", "result", "status" };
    private static readonly uint[] _orderBookSummaryFieldTags = new uint[] { 88, 40, 56, 48, 96, 80, 64, 34, 16, 112, 10, 104, 24, 72 };
    public static OrderBookSummary DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderBookSummary DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderBookSummary ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OrderBookSummary__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderBookSummary, OrderBookSummary.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OrderBookSummary__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int OrderBookIdFieldNumber = 2;
    private bool hasOrderBookId;
    private ulong orderBookId_;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public const int ResultFieldNumber = 3;
    private bool hasResult;
    private uint result_;
    public bool HasResult {
      get { return hasResult; }
    }
    public uint Result {
      get { return result_; }
    }
    
    public const int OrderBookFieldNumber = 4;
    private bool hasOrderBook;
    private global::bnet.protocol.exchange.OrderBook orderBook_;
    public bool HasOrderBook {
      get { return hasOrderBook; }
    }
    public global::bnet.protocol.exchange.OrderBook OrderBook {
      get { return orderBook_ ?? global::bnet.protocol.exchange.OrderBook.DefaultInstance; }
    }
    
    public const int AmountFieldNumber = 5;
    private bool hasAmount;
    private ulong amount_;
    public bool HasAmount {
      get { return hasAmount; }
    }
    public ulong Amount {
      get { return amount_; }
    }
    
    public const int BestOfferPriceFieldNumber = 6;
    private bool hasBestOfferPrice;
    private ulong bestOfferPrice_;
    public bool HasBestOfferPrice {
      get { return hasBestOfferPrice; }
    }
    public ulong BestOfferPrice {
      get { return bestOfferPrice_; }
    }
    
    public const int BestBidPriceFieldNumber = 7;
    private bool hasBestBidPrice;
    private ulong bestBidPrice_;
    public bool HasBestBidPrice {
      get { return hasBestBidPrice; }
    }
    public ulong BestBidPrice {
      get { return bestBidPrice_; }
    }
    
    public const int EndTimeFieldNumber = 8;
    private bool hasEndTime;
    private ulong endTime_;
    public bool HasEndTime {
      get { return hasEndTime; }
    }
    public ulong EndTime {
      get { return endTime_; }
    }
    
    public const int StatusFieldNumber = 9;
    private bool hasStatus;
    private int status_;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public int Status {
      get { return status_; }
    }
    
    public const int CreatedTimeFieldNumber = 10;
    private bool hasCreatedTime;
    private ulong createdTime_;
    public bool HasCreatedTime {
      get { return hasCreatedTime; }
    }
    public ulong CreatedTime {
      get { return createdTime_; }
    }
    
    public const int ActiveTimeFieldNumber = 11;
    private bool hasActiveTime;
    private ulong activeTime_;
    public bool HasActiveTime {
      get { return hasActiveTime; }
    }
    public ulong ActiveTime {
      get { return activeTime_; }
    }
    
    public const int ClosedTimeFieldNumber = 12;
    private bool hasClosedTime;
    private ulong closedTime_;
    public bool HasClosedTime {
      get { return hasClosedTime; }
    }
    public ulong ClosedTime {
      get { return closedTime_; }
    }
    
    public const int ReasonFieldNumber = 13;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public const int OutBidUnitPriceFieldNumber = 14;
    private bool hasOutBidUnitPrice;
    private ulong outBidUnitPrice_;
    public bool HasOutBidUnitPrice {
      get { return hasOutBidUnitPrice; }
    }
    public ulong OutBidUnitPrice {
      get { return outBidUnitPrice_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOrderBookId) return false;
        if (!hasResult) return false;
        if (!PartitionId.IsInitialized) return false;
        if (HasOrderBook) {
          if (!OrderBook.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _orderBookSummaryFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[10], PartitionId);
      }
      if (hasOrderBookId) {
        output.WriteUInt64(2, field_names[8], OrderBookId);
      }
      if (hasResult) {
        output.WriteUInt32(3, field_names[12], Result);
      }
      if (hasOrderBook) {
        output.WriteMessage(4, field_names[7], OrderBook);
      }
      if (hasAmount) {
        output.WriteUInt64(5, field_names[1], Amount);
      }
      if (hasBestOfferPrice) {
        output.WriteUInt64(6, field_names[3], BestOfferPrice);
      }
      if (hasBestBidPrice) {
        output.WriteUInt64(7, field_names[2], BestBidPrice);
      }
      if (hasEndTime) {
        output.WriteUInt64(8, field_names[6], EndTime);
      }
      if (hasStatus) {
        output.WriteInt32(9, field_names[13], Status);
      }
      if (hasCreatedTime) {
        output.WriteUInt64(10, field_names[5], CreatedTime);
      }
      if (hasActiveTime) {
        output.WriteUInt64(11, field_names[0], ActiveTime);
      }
      if (hasClosedTime) {
        output.WriteUInt64(12, field_names[4], ClosedTime);
      }
      if (hasReason) {
        output.WriteUInt32(13, field_names[11], Reason);
      }
      if (hasOutBidUnitPrice) {
        output.WriteUInt64(14, field_names[9], OutBidUnitPrice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, OrderBookId);
        }
        if (hasResult) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Result);
        }
        if (hasOrderBook) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, OrderBook);
        }
        if (hasAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(5, Amount);
        }
        if (hasBestOfferPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(6, BestOfferPrice);
        }
        if (hasBestBidPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(7, BestBidPrice);
        }
        if (hasEndTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(8, EndTime);
        }
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeInt32Size(9, Status);
        }
        if (hasCreatedTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(10, CreatedTime);
        }
        if (hasActiveTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(11, ActiveTime);
        }
        if (hasClosedTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(12, ClosedTime);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeUInt32Size(13, Reason);
        }
        if (hasOutBidUnitPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(14, OutBidUnitPrice);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static OrderBookSummary ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBookSummary ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBookSummary ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderBookSummary ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderBookSummary ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBookSummary ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderBookSummary ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderBookSummary ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderBookSummary ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderBookSummary ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderBookSummary MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderBookSummary prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderBookSummary, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderBookSummary cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderBookSummary result;
      
      private OrderBookSummary PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderBookSummary original = result;
          result = new OrderBookSummary();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderBookSummary MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.OrderBookSummary.Descriptor; }
      }
      
      public override OrderBookSummary DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.OrderBookSummary.DefaultInstance; }
      }
      
      public override OrderBookSummary BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderBookSummary) {
          return MergeFrom((OrderBookSummary) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderBookSummary other) {
        if (other == global::bnet.protocol.exchange.OrderBookSummary.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasOrderBook) {
          MergeOrderBook(other.OrderBook);
        }
        if (other.HasAmount) {
          Amount = other.Amount;
        }
        if (other.HasBestOfferPrice) {
          BestOfferPrice = other.BestOfferPrice;
        }
        if (other.HasBestBidPrice) {
          BestBidPrice = other.BestBidPrice;
        }
        if (other.HasEndTime) {
          EndTime = other.EndTime;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasCreatedTime) {
          CreatedTime = other.CreatedTime;
        }
        if (other.HasActiveTime) {
          ActiveTime = other.ActiveTime;
        }
        if (other.HasClosedTime) {
          ClosedTime = other.ClosedTime;
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        if (other.HasOutBidUnitPrice) {
          OutBidUnitPrice = other.OutBidUnitPrice;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderBookSummaryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderBookSummaryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasOrderBookId = input.ReadUInt64(ref result.orderBookId_);
              break;
            }
            case 24: {
              result.hasResult = input.ReadUInt32(ref result.result_);
              break;
            }
            case 34: {
              global::bnet.protocol.exchange.OrderBook.Builder subBuilder = global::bnet.protocol.exchange.OrderBook.CreateBuilder();
              if (result.hasOrderBook) {
                subBuilder.MergeFrom(OrderBook);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderBook = subBuilder.BuildPartial();
              break;
            }
            case 40: {
              result.hasAmount = input.ReadUInt64(ref result.amount_);
              break;
            }
            case 48: {
              result.hasBestOfferPrice = input.ReadUInt64(ref result.bestOfferPrice_);
              break;
            }
            case 56: {
              result.hasBestBidPrice = input.ReadUInt64(ref result.bestBidPrice_);
              break;
            }
            case 64: {
              result.hasEndTime = input.ReadUInt64(ref result.endTime_);
              break;
            }
            case 72: {
              result.hasStatus = input.ReadInt32(ref result.status_);
              break;
            }
            case 80: {
              result.hasCreatedTime = input.ReadUInt64(ref result.createdTime_);
              break;
            }
            case 88: {
              result.hasActiveTime = input.ReadUInt64(ref result.activeTime_);
              break;
            }
            case 96: {
              result.hasClosedTime = input.ReadUInt64(ref result.closedTime_);
              break;
            }
            case 104: {
              result.hasReason = input.ReadUInt32(ref result.reason_);
              break;
            }
            case 112: {
              result.hasOutBidUnitPrice = input.ReadUInt64(ref result.outBidUnitPrice_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasOrderBookId {
        get { return result.hasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        PrepareBuilder();
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        PrepareBuilder();
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
      
      public bool HasResult {
        get { return result.hasResult; }
      }
      public uint Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(uint value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = 0;
        return this;
      }
      
      public bool HasOrderBook {
       get { return result.hasOrderBook; }
      }
      public global::bnet.protocol.exchange.OrderBook OrderBook {
        get { return result.OrderBook; }
        set { SetOrderBook(value); }
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderBook = true;
        result.orderBook_ = value;
        return this;
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrderBook = true;
        result.orderBook_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrderBook &&
            result.orderBook_ != global::bnet.protocol.exchange.OrderBook.DefaultInstance) {
            result.orderBook_ = global::bnet.protocol.exchange.OrderBook.CreateBuilder(result.orderBook_).MergeFrom(value).BuildPartial();
        } else {
          result.orderBook_ = value;
        }
        result.hasOrderBook = true;
        return this;
      }
      public Builder ClearOrderBook() {
        PrepareBuilder();
        result.hasOrderBook = false;
        result.orderBook_ = null;
        return this;
      }
      
      public bool HasAmount {
        get { return result.hasAmount; }
      }
      public ulong Amount {
        get { return result.Amount; }
        set { SetAmount(value); }
      }
      public Builder SetAmount(ulong value) {
        PrepareBuilder();
        result.hasAmount = true;
        result.amount_ = value;
        return this;
      }
      public Builder ClearAmount() {
        PrepareBuilder();
        result.hasAmount = false;
        result.amount_ = 0UL;
        return this;
      }
      
      public bool HasBestOfferPrice {
        get { return result.hasBestOfferPrice; }
      }
      public ulong BestOfferPrice {
        get { return result.BestOfferPrice; }
        set { SetBestOfferPrice(value); }
      }
      public Builder SetBestOfferPrice(ulong value) {
        PrepareBuilder();
        result.hasBestOfferPrice = true;
        result.bestOfferPrice_ = value;
        return this;
      }
      public Builder ClearBestOfferPrice() {
        PrepareBuilder();
        result.hasBestOfferPrice = false;
        result.bestOfferPrice_ = 0UL;
        return this;
      }
      
      public bool HasBestBidPrice {
        get { return result.hasBestBidPrice; }
      }
      public ulong BestBidPrice {
        get { return result.BestBidPrice; }
        set { SetBestBidPrice(value); }
      }
      public Builder SetBestBidPrice(ulong value) {
        PrepareBuilder();
        result.hasBestBidPrice = true;
        result.bestBidPrice_ = value;
        return this;
      }
      public Builder ClearBestBidPrice() {
        PrepareBuilder();
        result.hasBestBidPrice = false;
        result.bestBidPrice_ = 0UL;
        return this;
      }
      
      public bool HasEndTime {
        get { return result.hasEndTime; }
      }
      public ulong EndTime {
        get { return result.EndTime; }
        set { SetEndTime(value); }
      }
      public Builder SetEndTime(ulong value) {
        PrepareBuilder();
        result.hasEndTime = true;
        result.endTime_ = value;
        return this;
      }
      public Builder ClearEndTime() {
        PrepareBuilder();
        result.hasEndTime = false;
        result.endTime_ = 0UL;
        return this;
      }
      
      public bool HasStatus {
        get { return result.hasStatus; }
      }
      public int Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(int value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      public bool HasCreatedTime {
        get { return result.hasCreatedTime; }
      }
      public ulong CreatedTime {
        get { return result.CreatedTime; }
        set { SetCreatedTime(value); }
      }
      public Builder SetCreatedTime(ulong value) {
        PrepareBuilder();
        result.hasCreatedTime = true;
        result.createdTime_ = value;
        return this;
      }
      public Builder ClearCreatedTime() {
        PrepareBuilder();
        result.hasCreatedTime = false;
        result.createdTime_ = 0UL;
        return this;
      }
      
      public bool HasActiveTime {
        get { return result.hasActiveTime; }
      }
      public ulong ActiveTime {
        get { return result.ActiveTime; }
        set { SetActiveTime(value); }
      }
      public Builder SetActiveTime(ulong value) {
        PrepareBuilder();
        result.hasActiveTime = true;
        result.activeTime_ = value;
        return this;
      }
      public Builder ClearActiveTime() {
        PrepareBuilder();
        result.hasActiveTime = false;
        result.activeTime_ = 0UL;
        return this;
      }
      
      public bool HasClosedTime {
        get { return result.hasClosedTime; }
      }
      public ulong ClosedTime {
        get { return result.ClosedTime; }
        set { SetClosedTime(value); }
      }
      public Builder SetClosedTime(ulong value) {
        PrepareBuilder();
        result.hasClosedTime = true;
        result.closedTime_ = value;
        return this;
      }
      public Builder ClearClosedTime() {
        PrepareBuilder();
        result.hasClosedTime = false;
        result.closedTime_ = 0UL;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
      
      public bool HasOutBidUnitPrice {
        get { return result.hasOutBidUnitPrice; }
      }
      public ulong OutBidUnitPrice {
        get { return result.OutBidUnitPrice; }
        set { SetOutBidUnitPrice(value); }
      }
      public Builder SetOutBidUnitPrice(ulong value) {
        PrepareBuilder();
        result.hasOutBidUnitPrice = true;
        result.outBidUnitPrice_ = value;
        return this;
      }
      public Builder ClearOutBidUnitPrice() {
        PrepareBuilder();
        result.hasOutBidUnitPrice = false;
        result.outBidUnitPrice_ = 0UL;
        return this;
      }
    }
    static OrderBookSummary() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Order : pb::GeneratedMessage<Order, Order.Builder> {
    private Order() { }
    private static readonly Order defaultInstance = new Order().MakeReadOnly();
    private static readonly string[] _orderFieldNames = new string[] { "account_for_item", "account_for_money", "amount", "bnet_account", "end_time", "game_account", "session_id", "start_time" };
    private static readonly uint[] _orderFieldTags = new uint[] { 42, 34, 8, 50, 24, 58, 66, 16 };
    public static Order DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Order DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Order ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Order__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Order, Order.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Order__FieldAccessorTable; }
    }
    
    public const int AmountFieldNumber = 1;
    private bool hasAmount;
    private uint amount_;
    public bool HasAmount {
      get { return hasAmount; }
    }
    public uint Amount {
      get { return amount_; }
    }
    
    public const int StartTimeFieldNumber = 2;
    private bool hasStartTime;
    private ulong startTime_;
    public bool HasStartTime {
      get { return hasStartTime; }
    }
    public ulong StartTime {
      get { return startTime_; }
    }
    
    public const int EndTimeFieldNumber = 3;
    private bool hasEndTime;
    private ulong endTime_;
    public bool HasEndTime {
      get { return hasEndTime; }
    }
    public ulong EndTime {
      get { return endTime_; }
    }
    
    public const int AccountForMoneyFieldNumber = 4;
    private bool hasAccountForMoney;
    private global::bnet.protocol.exchange.BlobFrom accountForMoney_;
    public bool HasAccountForMoney {
      get { return hasAccountForMoney; }
    }
    public global::bnet.protocol.exchange.BlobFrom AccountForMoney {
      get { return accountForMoney_ ?? global::bnet.protocol.exchange.BlobFrom.DefaultInstance; }
    }
    
    public const int AccountForItemFieldNumber = 5;
    private bool hasAccountForItem;
    private global::bnet.protocol.exchange.BlobFrom accountForItem_;
    public bool HasAccountForItem {
      get { return hasAccountForItem; }
    }
    public global::bnet.protocol.exchange.BlobFrom AccountForItem {
      get { return accountForItem_ ?? global::bnet.protocol.exchange.BlobFrom.DefaultInstance; }
    }
    
    public const int BnetAccountFieldNumber = 6;
    private bool hasBnetAccount;
    private global::bnet.protocol.EntityId bnetAccount_;
    public bool HasBnetAccount {
      get { return hasBnetAccount; }
    }
    public global::bnet.protocol.EntityId BnetAccount {
      get { return bnetAccount_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int GameAccountFieldNumber = 7;
    private bool hasGameAccount;
    private global::bnet.protocol.EntityId gameAccount_;
    public bool HasGameAccount {
      get { return hasGameAccount; }
    }
    public global::bnet.protocol.EntityId GameAccount {
      get { return gameAccount_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int SessionIdFieldNumber = 8;
    private bool hasSessionId;
    private global::bnet.protocol.exchange.PartitionId sessionId_;
    public bool HasSessionId {
      get { return hasSessionId; }
    }
    public global::bnet.protocol.exchange.PartitionId SessionId {
      get { return sessionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAmount) return false;
        if (HasAccountForMoney) {
          if (!AccountForMoney.IsInitialized) return false;
        }
        if (HasAccountForItem) {
          if (!AccountForItem.IsInitialized) return false;
        }
        if (HasBnetAccount) {
          if (!BnetAccount.IsInitialized) return false;
        }
        if (HasGameAccount) {
          if (!GameAccount.IsInitialized) return false;
        }
        if (HasSessionId) {
          if (!SessionId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _orderFieldNames;
      if (hasAmount) {
        output.WriteUInt32(1, field_names[2], Amount);
      }
      if (hasStartTime) {
        output.WriteUInt64(2, field_names[7], StartTime);
      }
      if (hasEndTime) {
        output.WriteUInt64(3, field_names[4], EndTime);
      }
      if (hasAccountForMoney) {
        output.WriteMessage(4, field_names[1], AccountForMoney);
      }
      if (hasAccountForItem) {
        output.WriteMessage(5, field_names[0], AccountForItem);
      }
      if (hasBnetAccount) {
        output.WriteMessage(6, field_names[3], BnetAccount);
      }
      if (hasGameAccount) {
        output.WriteMessage(7, field_names[5], GameAccount);
      }
      if (hasSessionId) {
        output.WriteMessage(8, field_names[6], SessionId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAmount) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, Amount);
        }
        if (hasStartTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, StartTime);
        }
        if (hasEndTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, EndTime);
        }
        if (hasAccountForMoney) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, AccountForMoney);
        }
        if (hasAccountForItem) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, AccountForItem);
        }
        if (hasBnetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, BnetAccount);
        }
        if (hasGameAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, GameAccount);
        }
        if (hasSessionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(8, SessionId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Order ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Order ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Order ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Order ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Order ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Order ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Order ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Order ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Order ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Order ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Order MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Order prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Order, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Order cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Order result;
      
      private Order PrepareBuilder() {
        if (resultIsReadOnly) {
          Order original = result;
          result = new Order();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Order MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.Order.Descriptor; }
      }
      
      public override Order DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.Order.DefaultInstance; }
      }
      
      public override Order BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Order) {
          return MergeFrom((Order) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Order other) {
        if (other == global::bnet.protocol.exchange.Order.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAmount) {
          Amount = other.Amount;
        }
        if (other.HasStartTime) {
          StartTime = other.StartTime;
        }
        if (other.HasEndTime) {
          EndTime = other.EndTime;
        }
        if (other.HasAccountForMoney) {
          MergeAccountForMoney(other.AccountForMoney);
        }
        if (other.HasAccountForItem) {
          MergeAccountForItem(other.AccountForItem);
        }
        if (other.HasBnetAccount) {
          MergeBnetAccount(other.BnetAccount);
        }
        if (other.HasGameAccount) {
          MergeGameAccount(other.GameAccount);
        }
        if (other.HasSessionId) {
          MergeSessionId(other.SessionId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasAmount = input.ReadUInt32(ref result.amount_);
              break;
            }
            case 16: {
              result.hasStartTime = input.ReadUInt64(ref result.startTime_);
              break;
            }
            case 24: {
              result.hasEndTime = input.ReadUInt64(ref result.endTime_);
              break;
            }
            case 34: {
              global::bnet.protocol.exchange.BlobFrom.Builder subBuilder = global::bnet.protocol.exchange.BlobFrom.CreateBuilder();
              if (result.hasAccountForMoney) {
                subBuilder.MergeFrom(AccountForMoney);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountForMoney = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::bnet.protocol.exchange.BlobFrom.Builder subBuilder = global::bnet.protocol.exchange.BlobFrom.CreateBuilder();
              if (result.hasAccountForItem) {
                subBuilder.MergeFrom(AccountForItem);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountForItem = subBuilder.BuildPartial();
              break;
            }
            case 50: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBnetAccount) {
                subBuilder.MergeFrom(BnetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccount = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasGameAccount) {
                subBuilder.MergeFrom(GameAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameAccount = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasSessionId) {
                subBuilder.MergeFrom(SessionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SessionId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAmount {
        get { return result.hasAmount; }
      }
      public uint Amount {
        get { return result.Amount; }
        set { SetAmount(value); }
      }
      public Builder SetAmount(uint value) {
        PrepareBuilder();
        result.hasAmount = true;
        result.amount_ = value;
        return this;
      }
      public Builder ClearAmount() {
        PrepareBuilder();
        result.hasAmount = false;
        result.amount_ = 0;
        return this;
      }
      
      public bool HasStartTime {
        get { return result.hasStartTime; }
      }
      public ulong StartTime {
        get { return result.StartTime; }
        set { SetStartTime(value); }
      }
      public Builder SetStartTime(ulong value) {
        PrepareBuilder();
        result.hasStartTime = true;
        result.startTime_ = value;
        return this;
      }
      public Builder ClearStartTime() {
        PrepareBuilder();
        result.hasStartTime = false;
        result.startTime_ = 0UL;
        return this;
      }
      
      public bool HasEndTime {
        get { return result.hasEndTime; }
      }
      public ulong EndTime {
        get { return result.EndTime; }
        set { SetEndTime(value); }
      }
      public Builder SetEndTime(ulong value) {
        PrepareBuilder();
        result.hasEndTime = true;
        result.endTime_ = value;
        return this;
      }
      public Builder ClearEndTime() {
        PrepareBuilder();
        result.hasEndTime = false;
        result.endTime_ = 0UL;
        return this;
      }
      
      public bool HasAccountForMoney {
       get { return result.hasAccountForMoney; }
      }
      public global::bnet.protocol.exchange.BlobFrom AccountForMoney {
        get { return result.AccountForMoney; }
        set { SetAccountForMoney(value); }
      }
      public Builder SetAccountForMoney(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountForMoney = true;
        result.accountForMoney_ = value;
        return this;
      }
      public Builder SetAccountForMoney(global::bnet.protocol.exchange.BlobFrom.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountForMoney = true;
        result.accountForMoney_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountForMoney(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountForMoney &&
            result.accountForMoney_ != global::bnet.protocol.exchange.BlobFrom.DefaultInstance) {
            result.accountForMoney_ = global::bnet.protocol.exchange.BlobFrom.CreateBuilder(result.accountForMoney_).MergeFrom(value).BuildPartial();
        } else {
          result.accountForMoney_ = value;
        }
        result.hasAccountForMoney = true;
        return this;
      }
      public Builder ClearAccountForMoney() {
        PrepareBuilder();
        result.hasAccountForMoney = false;
        result.accountForMoney_ = null;
        return this;
      }
      
      public bool HasAccountForItem {
       get { return result.hasAccountForItem; }
      }
      public global::bnet.protocol.exchange.BlobFrom AccountForItem {
        get { return result.AccountForItem; }
        set { SetAccountForItem(value); }
      }
      public Builder SetAccountForItem(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountForItem = true;
        result.accountForItem_ = value;
        return this;
      }
      public Builder SetAccountForItem(global::bnet.protocol.exchange.BlobFrom.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountForItem = true;
        result.accountForItem_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountForItem(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountForItem &&
            result.accountForItem_ != global::bnet.protocol.exchange.BlobFrom.DefaultInstance) {
            result.accountForItem_ = global::bnet.protocol.exchange.BlobFrom.CreateBuilder(result.accountForItem_).MergeFrom(value).BuildPartial();
        } else {
          result.accountForItem_ = value;
        }
        result.hasAccountForItem = true;
        return this;
      }
      public Builder ClearAccountForItem() {
        PrepareBuilder();
        result.hasAccountForItem = false;
        result.accountForItem_ = null;
        return this;
      }
      
      public bool HasBnetAccount {
       get { return result.hasBnetAccount; }
      }
      public global::bnet.protocol.EntityId BnetAccount {
        get { return result.BnetAccount; }
        set { SetBnetAccount(value); }
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = value;
        return this;
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBnetAccount &&
            result.bnetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccount_ = value;
        }
        result.hasBnetAccount = true;
        return this;
      }
      public Builder ClearBnetAccount() {
        PrepareBuilder();
        result.hasBnetAccount = false;
        result.bnetAccount_ = null;
        return this;
      }
      
      public bool HasGameAccount {
       get { return result.hasGameAccount; }
      }
      public global::bnet.protocol.EntityId GameAccount {
        get { return result.GameAccount; }
        set { SetGameAccount(value); }
      }
      public Builder SetGameAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameAccount = true;
        result.gameAccount_ = value;
        return this;
      }
      public Builder SetGameAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameAccount = true;
        result.gameAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameAccount &&
            result.gameAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.gameAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.gameAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccount_ = value;
        }
        result.hasGameAccount = true;
        return this;
      }
      public Builder ClearGameAccount() {
        PrepareBuilder();
        result.hasGameAccount = false;
        result.gameAccount_ = null;
        return this;
      }
      
      public bool HasSessionId {
       get { return result.hasSessionId; }
      }
      public global::bnet.protocol.exchange.PartitionId SessionId {
        get { return result.SessionId; }
        set { SetSessionId(value); }
      }
      public Builder SetSessionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSessionId = true;
        result.sessionId_ = value;
        return this;
      }
      public Builder SetSessionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSessionId = true;
        result.sessionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSessionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSessionId &&
            result.sessionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.sessionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.sessionId_).MergeFrom(value).BuildPartial();
        } else {
          result.sessionId_ = value;
        }
        result.hasSessionId = true;
        return this;
      }
      public Builder ClearSessionId() {
        PrepareBuilder();
        result.hasSessionId = false;
        result.sessionId_ = null;
        return this;
      }
    }
    static Order() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Extension : pb::GeneratedMessage<Extension, Extension.Builder> {
    private Extension() { }
    private static readonly Extension defaultInstance = new Extension().MakeReadOnly();
    private static readonly string[] _extensionFieldNames = new string[] { "authorized_time", "closed_time", "created_time", "fail_error_code", "fail_extra_error_code", "fail_object_type", "fail_order_action", "filled_amount", "filled_fund_amount", "items_to_claim", "money_to_claim", "order_book", "order_book_id", "order_book_status", "order_id", "order_status", "partition_id", "reason", "refunded", "risk_delayed" };
    private static readonly uint[] _extensionFieldTags = new uint[] { 48, 64, 56, 136, 144, 128, 120, 32, 160, 104, 96, 82, 16, 88, 24, 40, 10, 72, 152, 112 };
    public static Extension DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Extension DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Extension ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Extension__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Extension, Extension.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Extension__FieldAccessorTable; }
    }
    
    public const int PartitionIdFieldNumber = 1;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int OrderBookIdFieldNumber = 2;
    private bool hasOrderBookId;
    private ulong orderBookId_;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public const int OrderIdFieldNumber = 3;
    private bool hasOrderId;
    private ulong orderId_;
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public ulong OrderId {
      get { return orderId_; }
    }
    
    public const int FilledAmountFieldNumber = 4;
    private bool hasFilledAmount;
    private ulong filledAmount_;
    public bool HasFilledAmount {
      get { return hasFilledAmount; }
    }
    public ulong FilledAmount {
      get { return filledAmount_; }
    }
    
    public const int OrderStatusFieldNumber = 5;
    private bool hasOrderStatus;
    private int orderStatus_;
    public bool HasOrderStatus {
      get { return hasOrderStatus; }
    }
    public int OrderStatus {
      get { return orderStatus_; }
    }
    
    public const int AuthorizedTimeFieldNumber = 6;
    private bool hasAuthorizedTime;
    private ulong authorizedTime_;
    public bool HasAuthorizedTime {
      get { return hasAuthorizedTime; }
    }
    public ulong AuthorizedTime {
      get { return authorizedTime_; }
    }
    
    public const int CreatedTimeFieldNumber = 7;
    private bool hasCreatedTime;
    private ulong createdTime_;
    public bool HasCreatedTime {
      get { return hasCreatedTime; }
    }
    public ulong CreatedTime {
      get { return createdTime_; }
    }
    
    public const int ClosedTimeFieldNumber = 8;
    private bool hasClosedTime;
    private ulong closedTime_;
    public bool HasClosedTime {
      get { return hasClosedTime; }
    }
    public ulong ClosedTime {
      get { return closedTime_; }
    }
    
    public const int ReasonFieldNumber = 9;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public const int OrderBookFieldNumber = 10;
    private bool hasOrderBook;
    private global::bnet.protocol.exchange.OrderBook orderBook_;
    public bool HasOrderBook {
      get { return hasOrderBook; }
    }
    public global::bnet.protocol.exchange.OrderBook OrderBook {
      get { return orderBook_ ?? global::bnet.protocol.exchange.OrderBook.DefaultInstance; }
    }
    
    public const int OrderBookStatusFieldNumber = 11;
    private bool hasOrderBookStatus;
    private ulong orderBookStatus_;
    public bool HasOrderBookStatus {
      get { return hasOrderBookStatus; }
    }
    public ulong OrderBookStatus {
      get { return orderBookStatus_; }
    }
    
    public const int MoneyToClaimFieldNumber = 12;
    private bool hasMoneyToClaim;
    private ulong moneyToClaim_;
    public bool HasMoneyToClaim {
      get { return hasMoneyToClaim; }
    }
    public ulong MoneyToClaim {
      get { return moneyToClaim_; }
    }
    
    public const int ItemsToClaimFieldNumber = 13;
    private bool hasItemsToClaim;
    private ulong itemsToClaim_;
    public bool HasItemsToClaim {
      get { return hasItemsToClaim; }
    }
    public ulong ItemsToClaim {
      get { return itemsToClaim_; }
    }
    
    public const int RiskDelayedFieldNumber = 14;
    private bool hasRiskDelayed;
    private bool riskDelayed_;
    public bool HasRiskDelayed {
      get { return hasRiskDelayed; }
    }
    public bool RiskDelayed {
      get { return riskDelayed_; }
    }
    
    public const int FailOrderActionFieldNumber = 15;
    private bool hasFailOrderAction;
    private uint failOrderAction_;
    public bool HasFailOrderAction {
      get { return hasFailOrderAction; }
    }
    public uint FailOrderAction {
      get { return failOrderAction_; }
    }
    
    public const int FailObjectTypeFieldNumber = 16;
    private bool hasFailObjectType;
    private uint failObjectType_;
    public bool HasFailObjectType {
      get { return hasFailObjectType; }
    }
    public uint FailObjectType {
      get { return failObjectType_; }
    }
    
    public const int FailErrorCodeFieldNumber = 17;
    private bool hasFailErrorCode;
    private uint failErrorCode_;
    public bool HasFailErrorCode {
      get { return hasFailErrorCode; }
    }
    public uint FailErrorCode {
      get { return failErrorCode_; }
    }
    
    public const int FailExtraErrorCodeFieldNumber = 18;
    private bool hasFailExtraErrorCode;
    private uint failExtraErrorCode_;
    public bool HasFailExtraErrorCode {
      get { return hasFailExtraErrorCode; }
    }
    public uint FailExtraErrorCode {
      get { return failExtraErrorCode_; }
    }
    
    public const int RefundedFieldNumber = 19;
    private bool hasRefunded;
    private ulong refunded_;
    public bool HasRefunded {
      get { return hasRefunded; }
    }
    public ulong Refunded {
      get { return refunded_; }
    }
    
    public const int FilledFundAmountFieldNumber = 20;
    private bool hasFilledFundAmount;
    private ulong filledFundAmount_;
    public bool HasFilledFundAmount {
      get { return hasFilledFundAmount; }
    }
    public ulong FilledFundAmount {
      get { return filledFundAmount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPartitionId) return false;
        if (!hasOrderBookId) return false;
        if (!hasOrderId) return false;
        if (!PartitionId.IsInitialized) return false;
        if (HasOrderBook) {
          if (!OrderBook.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _extensionFieldNames;
      if (hasPartitionId) {
        output.WriteMessage(1, field_names[16], PartitionId);
      }
      if (hasOrderBookId) {
        output.WriteUInt64(2, field_names[12], OrderBookId);
      }
      if (hasOrderId) {
        output.WriteUInt64(3, field_names[14], OrderId);
      }
      if (hasFilledAmount) {
        output.WriteUInt64(4, field_names[7], FilledAmount);
      }
      if (hasOrderStatus) {
        output.WriteInt32(5, field_names[15], OrderStatus);
      }
      if (hasAuthorizedTime) {
        output.WriteUInt64(6, field_names[0], AuthorizedTime);
      }
      if (hasCreatedTime) {
        output.WriteUInt64(7, field_names[2], CreatedTime);
      }
      if (hasClosedTime) {
        output.WriteUInt64(8, field_names[1], ClosedTime);
      }
      if (hasReason) {
        output.WriteUInt32(9, field_names[17], Reason);
      }
      if (hasOrderBook) {
        output.WriteMessage(10, field_names[11], OrderBook);
      }
      if (hasOrderBookStatus) {
        output.WriteUInt64(11, field_names[13], OrderBookStatus);
      }
      if (hasMoneyToClaim) {
        output.WriteUInt64(12, field_names[10], MoneyToClaim);
      }
      if (hasItemsToClaim) {
        output.WriteUInt64(13, field_names[9], ItemsToClaim);
      }
      if (hasRiskDelayed) {
        output.WriteBool(14, field_names[19], RiskDelayed);
      }
      if (hasFailOrderAction) {
        output.WriteUInt32(15, field_names[6], FailOrderAction);
      }
      if (hasFailObjectType) {
        output.WriteUInt32(16, field_names[5], FailObjectType);
      }
      if (hasFailErrorCode) {
        output.WriteUInt32(17, field_names[3], FailErrorCode);
      }
      if (hasFailExtraErrorCode) {
        output.WriteUInt32(18, field_names[4], FailExtraErrorCode);
      }
      if (hasRefunded) {
        output.WriteUInt64(19, field_names[18], Refunded);
      }
      if (hasFilledFundAmount) {
        output.WriteUInt64(20, field_names[8], FilledFundAmount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, PartitionId);
        }
        if (hasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, OrderBookId);
        }
        if (hasOrderId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, OrderId);
        }
        if (hasFilledAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, FilledAmount);
        }
        if (hasOrderStatus) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, OrderStatus);
        }
        if (hasAuthorizedTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(6, AuthorizedTime);
        }
        if (hasCreatedTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(7, CreatedTime);
        }
        if (hasClosedTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(8, ClosedTime);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeUInt32Size(9, Reason);
        }
        if (hasOrderBook) {
          size += pb::CodedOutputStream.ComputeMessageSize(10, OrderBook);
        }
        if (hasOrderBookStatus) {
          size += pb::CodedOutputStream.ComputeUInt64Size(11, OrderBookStatus);
        }
        if (hasMoneyToClaim) {
          size += pb::CodedOutputStream.ComputeUInt64Size(12, MoneyToClaim);
        }
        if (hasItemsToClaim) {
          size += pb::CodedOutputStream.ComputeUInt64Size(13, ItemsToClaim);
        }
        if (hasRiskDelayed) {
          size += pb::CodedOutputStream.ComputeBoolSize(14, RiskDelayed);
        }
        if (hasFailOrderAction) {
          size += pb::CodedOutputStream.ComputeUInt32Size(15, FailOrderAction);
        }
        if (hasFailObjectType) {
          size += pb::CodedOutputStream.ComputeUInt32Size(16, FailObjectType);
        }
        if (hasFailErrorCode) {
          size += pb::CodedOutputStream.ComputeUInt32Size(17, FailErrorCode);
        }
        if (hasFailExtraErrorCode) {
          size += pb::CodedOutputStream.ComputeUInt32Size(18, FailExtraErrorCode);
        }
        if (hasRefunded) {
          size += pb::CodedOutputStream.ComputeUInt64Size(19, Refunded);
        }
        if (hasFilledFundAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(20, FilledFundAmount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Extension ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Extension ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Extension ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Extension ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Extension ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Extension ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Extension ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Extension ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Extension ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Extension ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Extension MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Extension prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Extension, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Extension cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Extension result;
      
      private Extension PrepareBuilder() {
        if (resultIsReadOnly) {
          Extension original = result;
          result = new Extension();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Extension MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.Extension.Descriptor; }
      }
      
      public override Extension DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.Extension.DefaultInstance; }
      }
      
      public override Extension BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Extension) {
          return MergeFrom((Extension) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Extension other) {
        if (other == global::bnet.protocol.exchange.Extension.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasFilledAmount) {
          FilledAmount = other.FilledAmount;
        }
        if (other.HasOrderStatus) {
          OrderStatus = other.OrderStatus;
        }
        if (other.HasAuthorizedTime) {
          AuthorizedTime = other.AuthorizedTime;
        }
        if (other.HasCreatedTime) {
          CreatedTime = other.CreatedTime;
        }
        if (other.HasClosedTime) {
          ClosedTime = other.ClosedTime;
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        if (other.HasOrderBook) {
          MergeOrderBook(other.OrderBook);
        }
        if (other.HasOrderBookStatus) {
          OrderBookStatus = other.OrderBookStatus;
        }
        if (other.HasMoneyToClaim) {
          MoneyToClaim = other.MoneyToClaim;
        }
        if (other.HasItemsToClaim) {
          ItemsToClaim = other.ItemsToClaim;
        }
        if (other.HasRiskDelayed) {
          RiskDelayed = other.RiskDelayed;
        }
        if (other.HasFailOrderAction) {
          FailOrderAction = other.FailOrderAction;
        }
        if (other.HasFailObjectType) {
          FailObjectType = other.FailObjectType;
        }
        if (other.HasFailErrorCode) {
          FailErrorCode = other.FailErrorCode;
        }
        if (other.HasFailExtraErrorCode) {
          FailExtraErrorCode = other.FailExtraErrorCode;
        }
        if (other.HasRefunded) {
          Refunded = other.Refunded;
        }
        if (other.HasFilledFundAmount) {
          FilledFundAmount = other.FilledFundAmount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_extensionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _extensionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasOrderBookId = input.ReadUInt64(ref result.orderBookId_);
              break;
            }
            case 24: {
              result.hasOrderId = input.ReadUInt64(ref result.orderId_);
              break;
            }
            case 32: {
              result.hasFilledAmount = input.ReadUInt64(ref result.filledAmount_);
              break;
            }
            case 40: {
              result.hasOrderStatus = input.ReadInt32(ref result.orderStatus_);
              break;
            }
            case 48: {
              result.hasAuthorizedTime = input.ReadUInt64(ref result.authorizedTime_);
              break;
            }
            case 56: {
              result.hasCreatedTime = input.ReadUInt64(ref result.createdTime_);
              break;
            }
            case 64: {
              result.hasClosedTime = input.ReadUInt64(ref result.closedTime_);
              break;
            }
            case 72: {
              result.hasReason = input.ReadUInt32(ref result.reason_);
              break;
            }
            case 82: {
              global::bnet.protocol.exchange.OrderBook.Builder subBuilder = global::bnet.protocol.exchange.OrderBook.CreateBuilder();
              if (result.hasOrderBook) {
                subBuilder.MergeFrom(OrderBook);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OrderBook = subBuilder.BuildPartial();
              break;
            }
            case 88: {
              result.hasOrderBookStatus = input.ReadUInt64(ref result.orderBookStatus_);
              break;
            }
            case 96: {
              result.hasMoneyToClaim = input.ReadUInt64(ref result.moneyToClaim_);
              break;
            }
            case 104: {
              result.hasItemsToClaim = input.ReadUInt64(ref result.itemsToClaim_);
              break;
            }
            case 112: {
              result.hasRiskDelayed = input.ReadBool(ref result.riskDelayed_);
              break;
            }
            case 120: {
              result.hasFailOrderAction = input.ReadUInt32(ref result.failOrderAction_);
              break;
            }
            case 128: {
              result.hasFailObjectType = input.ReadUInt32(ref result.failObjectType_);
              break;
            }
            case 136: {
              result.hasFailErrorCode = input.ReadUInt32(ref result.failErrorCode_);
              break;
            }
            case 144: {
              result.hasFailExtraErrorCode = input.ReadUInt32(ref result.failExtraErrorCode_);
              break;
            }
            case 152: {
              result.hasRefunded = input.ReadUInt64(ref result.refunded_);
              break;
            }
            case 160: {
              result.hasFilledFundAmount = input.ReadUInt64(ref result.filledFundAmount_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasOrderBookId {
        get { return result.hasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        PrepareBuilder();
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        PrepareBuilder();
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      public ulong OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(ulong value) {
        PrepareBuilder();
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        PrepareBuilder();
        result.hasOrderId = false;
        result.orderId_ = 0UL;
        return this;
      }
      
      public bool HasFilledAmount {
        get { return result.hasFilledAmount; }
      }
      public ulong FilledAmount {
        get { return result.FilledAmount; }
        set { SetFilledAmount(value); }
      }
      public Builder SetFilledAmount(ulong value) {
        PrepareBuilder();
        result.hasFilledAmount = true;
        result.filledAmount_ = value;
        return this;
      }
      public Builder ClearFilledAmount() {
        PrepareBuilder();
        result.hasFilledAmount = false;
        result.filledAmount_ = 0UL;
        return this;
      }
      
      public bool HasOrderStatus {
        get { return result.hasOrderStatus; }
      }
      public int OrderStatus {
        get { return result.OrderStatus; }
        set { SetOrderStatus(value); }
      }
      public Builder SetOrderStatus(int value) {
        PrepareBuilder();
        result.hasOrderStatus = true;
        result.orderStatus_ = value;
        return this;
      }
      public Builder ClearOrderStatus() {
        PrepareBuilder();
        result.hasOrderStatus = false;
        result.orderStatus_ = 0;
        return this;
      }
      
      public bool HasAuthorizedTime {
        get { return result.hasAuthorizedTime; }
      }
      public ulong AuthorizedTime {
        get { return result.AuthorizedTime; }
        set { SetAuthorizedTime(value); }
      }
      public Builder SetAuthorizedTime(ulong value) {
        PrepareBuilder();
        result.hasAuthorizedTime = true;
        result.authorizedTime_ = value;
        return this;
      }
      public Builder ClearAuthorizedTime() {
        PrepareBuilder();
        result.hasAuthorizedTime = false;
        result.authorizedTime_ = 0UL;
        return this;
      }
      
      public bool HasCreatedTime {
        get { return result.hasCreatedTime; }
      }
      public ulong CreatedTime {
        get { return result.CreatedTime; }
        set { SetCreatedTime(value); }
      }
      public Builder SetCreatedTime(ulong value) {
        PrepareBuilder();
        result.hasCreatedTime = true;
        result.createdTime_ = value;
        return this;
      }
      public Builder ClearCreatedTime() {
        PrepareBuilder();
        result.hasCreatedTime = false;
        result.createdTime_ = 0UL;
        return this;
      }
      
      public bool HasClosedTime {
        get { return result.hasClosedTime; }
      }
      public ulong ClosedTime {
        get { return result.ClosedTime; }
        set { SetClosedTime(value); }
      }
      public Builder SetClosedTime(ulong value) {
        PrepareBuilder();
        result.hasClosedTime = true;
        result.closedTime_ = value;
        return this;
      }
      public Builder ClearClosedTime() {
        PrepareBuilder();
        result.hasClosedTime = false;
        result.closedTime_ = 0UL;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
      
      public bool HasOrderBook {
       get { return result.hasOrderBook; }
      }
      public global::bnet.protocol.exchange.OrderBook OrderBook {
        get { return result.OrderBook; }
        set { SetOrderBook(value); }
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrderBook = true;
        result.orderBook_ = value;
        return this;
      }
      public Builder SetOrderBook(global::bnet.protocol.exchange.OrderBook.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrderBook = true;
        result.orderBook_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrderBook(global::bnet.protocol.exchange.OrderBook value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrderBook &&
            result.orderBook_ != global::bnet.protocol.exchange.OrderBook.DefaultInstance) {
            result.orderBook_ = global::bnet.protocol.exchange.OrderBook.CreateBuilder(result.orderBook_).MergeFrom(value).BuildPartial();
        } else {
          result.orderBook_ = value;
        }
        result.hasOrderBook = true;
        return this;
      }
      public Builder ClearOrderBook() {
        PrepareBuilder();
        result.hasOrderBook = false;
        result.orderBook_ = null;
        return this;
      }
      
      public bool HasOrderBookStatus {
        get { return result.hasOrderBookStatus; }
      }
      public ulong OrderBookStatus {
        get { return result.OrderBookStatus; }
        set { SetOrderBookStatus(value); }
      }
      public Builder SetOrderBookStatus(ulong value) {
        PrepareBuilder();
        result.hasOrderBookStatus = true;
        result.orderBookStatus_ = value;
        return this;
      }
      public Builder ClearOrderBookStatus() {
        PrepareBuilder();
        result.hasOrderBookStatus = false;
        result.orderBookStatus_ = 0UL;
        return this;
      }
      
      public bool HasMoneyToClaim {
        get { return result.hasMoneyToClaim; }
      }
      public ulong MoneyToClaim {
        get { return result.MoneyToClaim; }
        set { SetMoneyToClaim(value); }
      }
      public Builder SetMoneyToClaim(ulong value) {
        PrepareBuilder();
        result.hasMoneyToClaim = true;
        result.moneyToClaim_ = value;
        return this;
      }
      public Builder ClearMoneyToClaim() {
        PrepareBuilder();
        result.hasMoneyToClaim = false;
        result.moneyToClaim_ = 0UL;
        return this;
      }
      
      public bool HasItemsToClaim {
        get { return result.hasItemsToClaim; }
      }
      public ulong ItemsToClaim {
        get { return result.ItemsToClaim; }
        set { SetItemsToClaim(value); }
      }
      public Builder SetItemsToClaim(ulong value) {
        PrepareBuilder();
        result.hasItemsToClaim = true;
        result.itemsToClaim_ = value;
        return this;
      }
      public Builder ClearItemsToClaim() {
        PrepareBuilder();
        result.hasItemsToClaim = false;
        result.itemsToClaim_ = 0UL;
        return this;
      }
      
      public bool HasRiskDelayed {
        get { return result.hasRiskDelayed; }
      }
      public bool RiskDelayed {
        get { return result.RiskDelayed; }
        set { SetRiskDelayed(value); }
      }
      public Builder SetRiskDelayed(bool value) {
        PrepareBuilder();
        result.hasRiskDelayed = true;
        result.riskDelayed_ = value;
        return this;
      }
      public Builder ClearRiskDelayed() {
        PrepareBuilder();
        result.hasRiskDelayed = false;
        result.riskDelayed_ = false;
        return this;
      }
      
      public bool HasFailOrderAction {
        get { return result.hasFailOrderAction; }
      }
      public uint FailOrderAction {
        get { return result.FailOrderAction; }
        set { SetFailOrderAction(value); }
      }
      public Builder SetFailOrderAction(uint value) {
        PrepareBuilder();
        result.hasFailOrderAction = true;
        result.failOrderAction_ = value;
        return this;
      }
      public Builder ClearFailOrderAction() {
        PrepareBuilder();
        result.hasFailOrderAction = false;
        result.failOrderAction_ = 0;
        return this;
      }
      
      public bool HasFailObjectType {
        get { return result.hasFailObjectType; }
      }
      public uint FailObjectType {
        get { return result.FailObjectType; }
        set { SetFailObjectType(value); }
      }
      public Builder SetFailObjectType(uint value) {
        PrepareBuilder();
        result.hasFailObjectType = true;
        result.failObjectType_ = value;
        return this;
      }
      public Builder ClearFailObjectType() {
        PrepareBuilder();
        result.hasFailObjectType = false;
        result.failObjectType_ = 0;
        return this;
      }
      
      public bool HasFailErrorCode {
        get { return result.hasFailErrorCode; }
      }
      public uint FailErrorCode {
        get { return result.FailErrorCode; }
        set { SetFailErrorCode(value); }
      }
      public Builder SetFailErrorCode(uint value) {
        PrepareBuilder();
        result.hasFailErrorCode = true;
        result.failErrorCode_ = value;
        return this;
      }
      public Builder ClearFailErrorCode() {
        PrepareBuilder();
        result.hasFailErrorCode = false;
        result.failErrorCode_ = 0;
        return this;
      }
      
      public bool HasFailExtraErrorCode {
        get { return result.hasFailExtraErrorCode; }
      }
      public uint FailExtraErrorCode {
        get { return result.FailExtraErrorCode; }
        set { SetFailExtraErrorCode(value); }
      }
      public Builder SetFailExtraErrorCode(uint value) {
        PrepareBuilder();
        result.hasFailExtraErrorCode = true;
        result.failExtraErrorCode_ = value;
        return this;
      }
      public Builder ClearFailExtraErrorCode() {
        PrepareBuilder();
        result.hasFailExtraErrorCode = false;
        result.failExtraErrorCode_ = 0;
        return this;
      }
      
      public bool HasRefunded {
        get { return result.hasRefunded; }
      }
      public ulong Refunded {
        get { return result.Refunded; }
        set { SetRefunded(value); }
      }
      public Builder SetRefunded(ulong value) {
        PrepareBuilder();
        result.hasRefunded = true;
        result.refunded_ = value;
        return this;
      }
      public Builder ClearRefunded() {
        PrepareBuilder();
        result.hasRefunded = false;
        result.refunded_ = 0UL;
        return this;
      }
      
      public bool HasFilledFundAmount {
        get { return result.hasFilledFundAmount; }
      }
      public ulong FilledFundAmount {
        get { return result.FilledFundAmount; }
        set { SetFilledFundAmount(value); }
      }
      public Builder SetFilledFundAmount(ulong value) {
        PrepareBuilder();
        result.hasFilledFundAmount = true;
        result.filledFundAmount_ = value;
        return this;
      }
      public Builder ClearFilledFundAmount() {
        PrepareBuilder();
        result.hasFilledFundAmount = false;
        result.filledFundAmount_ = 0UL;
        return this;
      }
    }
    static Extension() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Offer : pb::GeneratedMessage<Offer, Offer.Builder> {
    private Offer() { }
    private static readonly Offer defaultInstance = new Offer().MakeReadOnly();
    private static readonly string[] _offerFieldNames = new string[] { "order", "out_bid_price", "reserve_price", "trade_now_price" };
    private static readonly uint[] _offerFieldTags = new uint[] { 10, 32, 24, 16 };
    public static Offer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Offer DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Offer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Offer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Offer, Offer.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Offer__FieldAccessorTable; }
    }
    
    public const int OrderFieldNumber = 1;
    private bool hasOrder;
    private global::bnet.protocol.exchange.Order order_;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public global::bnet.protocol.exchange.Order Order {
      get { return order_ ?? global::bnet.protocol.exchange.Order.DefaultInstance; }
    }
    
    public const int TradeNowPriceFieldNumber = 2;
    private bool hasTradeNowPrice;
    private ulong tradeNowPrice_;
    public bool HasTradeNowPrice {
      get { return hasTradeNowPrice; }
    }
    public ulong TradeNowPrice {
      get { return tradeNowPrice_; }
    }
    
    public const int ReservePriceFieldNumber = 3;
    private bool hasReservePrice;
    private ulong reservePrice_;
    public bool HasReservePrice {
      get { return hasReservePrice; }
    }
    public ulong ReservePrice {
      get { return reservePrice_; }
    }
    
    public const int OutBidPriceFieldNumber = 4;
    private bool hasOutBidPrice;
    private ulong outBidPrice_;
    public bool HasOutBidPrice {
      get { return hasOutBidPrice; }
    }
    public ulong OutBidPrice {
      get { return outBidPrice_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOrder) return false;
        if (!Order.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _offerFieldNames;
      if (hasOrder) {
        output.WriteMessage(1, field_names[0], Order);
      }
      if (hasTradeNowPrice) {
        output.WriteUInt64(2, field_names[3], TradeNowPrice);
      }
      if (hasReservePrice) {
        output.WriteUInt64(3, field_names[2], ReservePrice);
      }
      if (hasOutBidPrice) {
        output.WriteUInt64(4, field_names[1], OutBidPrice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOrder) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Order);
        }
        if (hasTradeNowPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, TradeNowPrice);
        }
        if (hasReservePrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ReservePrice);
        }
        if (hasOutBidPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, OutBidPrice);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Offer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Offer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Offer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Offer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Offer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Offer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Offer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Offer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Offer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Offer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Offer MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Offer prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Offer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Offer cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Offer result;
      
      private Offer PrepareBuilder() {
        if (resultIsReadOnly) {
          Offer original = result;
          result = new Offer();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Offer MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.Offer.Descriptor; }
      }
      
      public override Offer DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.Offer.DefaultInstance; }
      }
      
      public override Offer BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Offer) {
          return MergeFrom((Offer) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Offer other) {
        if (other == global::bnet.protocol.exchange.Offer.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrder) {
          MergeOrder(other.Order);
        }
        if (other.HasTradeNowPrice) {
          TradeNowPrice = other.TradeNowPrice;
        }
        if (other.HasReservePrice) {
          ReservePrice = other.ReservePrice;
        }
        if (other.HasOutBidPrice) {
          OutBidPrice = other.OutBidPrice;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_offerFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _offerFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.Order.Builder subBuilder = global::bnet.protocol.exchange.Order.CreateBuilder();
              if (result.hasOrder) {
                subBuilder.MergeFrom(Order);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Order = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasTradeNowPrice = input.ReadUInt64(ref result.tradeNowPrice_);
              break;
            }
            case 24: {
              result.hasReservePrice = input.ReadUInt64(ref result.reservePrice_);
              break;
            }
            case 32: {
              result.hasOutBidPrice = input.ReadUInt64(ref result.outBidPrice_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrder {
       get { return result.hasOrder; }
      }
      public global::bnet.protocol.exchange.Order Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(global::bnet.protocol.exchange.Order value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder SetOrder(global::bnet.protocol.exchange.Order.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrder(global::bnet.protocol.exchange.Order value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrder &&
            result.order_ != global::bnet.protocol.exchange.Order.DefaultInstance) {
            result.order_ = global::bnet.protocol.exchange.Order.CreateBuilder(result.order_).MergeFrom(value).BuildPartial();
        } else {
          result.order_ = value;
        }
        result.hasOrder = true;
        return this;
      }
      public Builder ClearOrder() {
        PrepareBuilder();
        result.hasOrder = false;
        result.order_ = null;
        return this;
      }
      
      public bool HasTradeNowPrice {
        get { return result.hasTradeNowPrice; }
      }
      public ulong TradeNowPrice {
        get { return result.TradeNowPrice; }
        set { SetTradeNowPrice(value); }
      }
      public Builder SetTradeNowPrice(ulong value) {
        PrepareBuilder();
        result.hasTradeNowPrice = true;
        result.tradeNowPrice_ = value;
        return this;
      }
      public Builder ClearTradeNowPrice() {
        PrepareBuilder();
        result.hasTradeNowPrice = false;
        result.tradeNowPrice_ = 0UL;
        return this;
      }
      
      public bool HasReservePrice {
        get { return result.hasReservePrice; }
      }
      public ulong ReservePrice {
        get { return result.ReservePrice; }
        set { SetReservePrice(value); }
      }
      public Builder SetReservePrice(ulong value) {
        PrepareBuilder();
        result.hasReservePrice = true;
        result.reservePrice_ = value;
        return this;
      }
      public Builder ClearReservePrice() {
        PrepareBuilder();
        result.hasReservePrice = false;
        result.reservePrice_ = 0UL;
        return this;
      }
      
      public bool HasOutBidPrice {
        get { return result.hasOutBidPrice; }
      }
      public ulong OutBidPrice {
        get { return result.OutBidPrice; }
        set { SetOutBidPrice(value); }
      }
      public Builder SetOutBidPrice(ulong value) {
        PrepareBuilder();
        result.hasOutBidPrice = true;
        result.outBidPrice_ = value;
        return this;
      }
      public Builder ClearOutBidPrice() {
        PrepareBuilder();
        result.hasOutBidPrice = false;
        result.outBidPrice_ = 0UL;
        return this;
      }
    }
    static Offer() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class OfferExtended : pb::GeneratedMessage<OfferExtended, OfferExtended.Builder> {
    private OfferExtended() { }
    private static readonly OfferExtended defaultInstance = new OfferExtended().MakeReadOnly();
    private static readonly string[] _offerExtendedFieldNames = new string[] { "current_winning_price", "extension", "offer" };
    private static readonly uint[] _offerExtendedFieldTags = new uint[] { 24, 18, 10 };
    public static OfferExtended DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OfferExtended DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OfferExtended ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OfferExtended__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OfferExtended, OfferExtended.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OfferExtended__FieldAccessorTable; }
    }
    
    public const int OfferFieldNumber = 1;
    private bool hasOffer;
    private global::bnet.protocol.exchange.Offer offer_;
    public bool HasOffer {
      get { return hasOffer; }
    }
    public global::bnet.protocol.exchange.Offer Offer {
      get { return offer_ ?? global::bnet.protocol.exchange.Offer.DefaultInstance; }
    }
    
    public const int ExtensionFieldNumber = 2;
    private bool hasExtension;
    private global::bnet.protocol.exchange.Extension extension_;
    public bool HasExtension {
      get { return hasExtension; }
    }
    public global::bnet.protocol.exchange.Extension Extension {
      get { return extension_ ?? global::bnet.protocol.exchange.Extension.DefaultInstance; }
    }
    
    public const int CurrentWinningPriceFieldNumber = 3;
    private bool hasCurrentWinningPrice;
    private ulong currentWinningPrice_;
    public bool HasCurrentWinningPrice {
      get { return hasCurrentWinningPrice; }
    }
    public ulong CurrentWinningPrice {
      get { return currentWinningPrice_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOffer) return false;
        if (!hasExtension) return false;
        if (!Offer.IsInitialized) return false;
        if (!Extension.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _offerExtendedFieldNames;
      if (hasOffer) {
        output.WriteMessage(1, field_names[2], Offer);
      }
      if (hasExtension) {
        output.WriteMessage(2, field_names[1], Extension);
      }
      if (hasCurrentWinningPrice) {
        output.WriteUInt64(3, field_names[0], CurrentWinningPrice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOffer) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Offer);
        }
        if (hasExtension) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Extension);
        }
        if (hasCurrentWinningPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, CurrentWinningPrice);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static OfferExtended ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OfferExtended ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OfferExtended ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OfferExtended ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OfferExtended ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OfferExtended ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OfferExtended ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OfferExtended ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OfferExtended ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OfferExtended ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OfferExtended MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OfferExtended prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<OfferExtended, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OfferExtended cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OfferExtended result;
      
      private OfferExtended PrepareBuilder() {
        if (resultIsReadOnly) {
          OfferExtended original = result;
          result = new OfferExtended();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OfferExtended MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.OfferExtended.Descriptor; }
      }
      
      public override OfferExtended DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.OfferExtended.DefaultInstance; }
      }
      
      public override OfferExtended BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OfferExtended) {
          return MergeFrom((OfferExtended) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OfferExtended other) {
        if (other == global::bnet.protocol.exchange.OfferExtended.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOffer) {
          MergeOffer(other.Offer);
        }
        if (other.HasExtension) {
          MergeExtension(other.Extension);
        }
        if (other.HasCurrentWinningPrice) {
          CurrentWinningPrice = other.CurrentWinningPrice;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_offerExtendedFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _offerExtendedFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.Offer.Builder subBuilder = global::bnet.protocol.exchange.Offer.CreateBuilder();
              if (result.hasOffer) {
                subBuilder.MergeFrom(Offer);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Offer = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.Extension.Builder subBuilder = global::bnet.protocol.exchange.Extension.CreateBuilder();
              if (result.hasExtension) {
                subBuilder.MergeFrom(Extension);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Extension = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasCurrentWinningPrice = input.ReadUInt64(ref result.currentWinningPrice_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOffer {
       get { return result.hasOffer; }
      }
      public global::bnet.protocol.exchange.Offer Offer {
        get { return result.Offer; }
        set { SetOffer(value); }
      }
      public Builder SetOffer(global::bnet.protocol.exchange.Offer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOffer = true;
        result.offer_ = value;
        return this;
      }
      public Builder SetOffer(global::bnet.protocol.exchange.Offer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOffer = true;
        result.offer_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOffer(global::bnet.protocol.exchange.Offer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOffer &&
            result.offer_ != global::bnet.protocol.exchange.Offer.DefaultInstance) {
            result.offer_ = global::bnet.protocol.exchange.Offer.CreateBuilder(result.offer_).MergeFrom(value).BuildPartial();
        } else {
          result.offer_ = value;
        }
        result.hasOffer = true;
        return this;
      }
      public Builder ClearOffer() {
        PrepareBuilder();
        result.hasOffer = false;
        result.offer_ = null;
        return this;
      }
      
      public bool HasExtension {
       get { return result.hasExtension; }
      }
      public global::bnet.protocol.exchange.Extension Extension {
        get { return result.Extension; }
        set { SetExtension(value); }
      }
      public Builder SetExtension(global::bnet.protocol.exchange.Extension value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExtension = true;
        result.extension_ = value;
        return this;
      }
      public Builder SetExtension(global::bnet.protocol.exchange.Extension.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasExtension = true;
        result.extension_ = builderForValue.Build();
        return this;
      }
      public Builder MergeExtension(global::bnet.protocol.exchange.Extension value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasExtension &&
            result.extension_ != global::bnet.protocol.exchange.Extension.DefaultInstance) {
            result.extension_ = global::bnet.protocol.exchange.Extension.CreateBuilder(result.extension_).MergeFrom(value).BuildPartial();
        } else {
          result.extension_ = value;
        }
        result.hasExtension = true;
        return this;
      }
      public Builder ClearExtension() {
        PrepareBuilder();
        result.hasExtension = false;
        result.extension_ = null;
        return this;
      }
      
      public bool HasCurrentWinningPrice {
        get { return result.hasCurrentWinningPrice; }
      }
      public ulong CurrentWinningPrice {
        get { return result.CurrentWinningPrice; }
        set { SetCurrentWinningPrice(value); }
      }
      public Builder SetCurrentWinningPrice(ulong value) {
        PrepareBuilder();
        result.hasCurrentWinningPrice = true;
        result.currentWinningPrice_ = value;
        return this;
      }
      public Builder ClearCurrentWinningPrice() {
        PrepareBuilder();
        result.hasCurrentWinningPrice = false;
        result.currentWinningPrice_ = 0UL;
        return this;
      }
    }
    static OfferExtended() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class OfferCreation : pb::GeneratedMessage<OfferCreation, OfferCreation.Builder> {
    private OfferCreation() { }
    private static readonly OfferCreation defaultInstance = new OfferCreation().MakeReadOnly();
    private static readonly string[] _offerCreationFieldNames = new string[] { "auction_duration", "auction_start_delay", "billing_address", "offer" };
    private static readonly uint[] _offerCreationFieldTags = new uint[] { 16, 24, 34, 10 };
    public static OfferCreation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OfferCreation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OfferCreation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OfferCreation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OfferCreation, OfferCreation.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OfferCreation__FieldAccessorTable; }
    }
    
    public const int OfferFieldNumber = 1;
    private bool hasOffer;
    private global::bnet.protocol.exchange.Offer offer_;
    public bool HasOffer {
      get { return hasOffer; }
    }
    public global::bnet.protocol.exchange.Offer Offer {
      get { return offer_ ?? global::bnet.protocol.exchange.Offer.DefaultInstance; }
    }
    
    public const int AuctionDurationFieldNumber = 2;
    private bool hasAuctionDuration;
    private ulong auctionDuration_;
    public bool HasAuctionDuration {
      get { return hasAuctionDuration; }
    }
    public ulong AuctionDuration {
      get { return auctionDuration_; }
    }
    
    public const int AuctionStartDelayFieldNumber = 3;
    private bool hasAuctionStartDelay;
    private ulong auctionStartDelay_;
    public bool HasAuctionStartDelay {
      get { return hasAuctionStartDelay; }
    }
    public ulong AuctionStartDelay {
      get { return auctionStartDelay_; }
    }
    
    public const int BillingAddressFieldNumber = 4;
    private bool hasBillingAddress;
    private global::bnet.protocol.exchange.BillingAddress billingAddress_;
    public bool HasBillingAddress {
      get { return hasBillingAddress; }
    }
    public global::bnet.protocol.exchange.BillingAddress BillingAddress {
      get { return billingAddress_ ?? global::bnet.protocol.exchange.BillingAddress.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOffer) return false;
        if (!Offer.IsInitialized) return false;
        if (HasBillingAddress) {
          if (!BillingAddress.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _offerCreationFieldNames;
      if (hasOffer) {
        output.WriteMessage(1, field_names[3], Offer);
      }
      if (hasAuctionDuration) {
        output.WriteUInt64(2, field_names[0], AuctionDuration);
      }
      if (hasAuctionStartDelay) {
        output.WriteUInt64(3, field_names[1], AuctionStartDelay);
      }
      if (hasBillingAddress) {
        output.WriteMessage(4, field_names[2], BillingAddress);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOffer) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Offer);
        }
        if (hasAuctionDuration) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, AuctionDuration);
        }
        if (hasAuctionStartDelay) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, AuctionStartDelay);
        }
        if (hasBillingAddress) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, BillingAddress);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static OfferCreation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OfferCreation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OfferCreation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OfferCreation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OfferCreation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OfferCreation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OfferCreation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OfferCreation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OfferCreation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OfferCreation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OfferCreation MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OfferCreation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<OfferCreation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OfferCreation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OfferCreation result;
      
      private OfferCreation PrepareBuilder() {
        if (resultIsReadOnly) {
          OfferCreation original = result;
          result = new OfferCreation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OfferCreation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.OfferCreation.Descriptor; }
      }
      
      public override OfferCreation DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.OfferCreation.DefaultInstance; }
      }
      
      public override OfferCreation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OfferCreation) {
          return MergeFrom((OfferCreation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OfferCreation other) {
        if (other == global::bnet.protocol.exchange.OfferCreation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOffer) {
          MergeOffer(other.Offer);
        }
        if (other.HasAuctionDuration) {
          AuctionDuration = other.AuctionDuration;
        }
        if (other.HasAuctionStartDelay) {
          AuctionStartDelay = other.AuctionStartDelay;
        }
        if (other.HasBillingAddress) {
          MergeBillingAddress(other.BillingAddress);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_offerCreationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _offerCreationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.Offer.Builder subBuilder = global::bnet.protocol.exchange.Offer.CreateBuilder();
              if (result.hasOffer) {
                subBuilder.MergeFrom(Offer);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Offer = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasAuctionDuration = input.ReadUInt64(ref result.auctionDuration_);
              break;
            }
            case 24: {
              result.hasAuctionStartDelay = input.ReadUInt64(ref result.auctionStartDelay_);
              break;
            }
            case 34: {
              global::bnet.protocol.exchange.BillingAddress.Builder subBuilder = global::bnet.protocol.exchange.BillingAddress.CreateBuilder();
              if (result.hasBillingAddress) {
                subBuilder.MergeFrom(BillingAddress);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BillingAddress = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOffer {
       get { return result.hasOffer; }
      }
      public global::bnet.protocol.exchange.Offer Offer {
        get { return result.Offer; }
        set { SetOffer(value); }
      }
      public Builder SetOffer(global::bnet.protocol.exchange.Offer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOffer = true;
        result.offer_ = value;
        return this;
      }
      public Builder SetOffer(global::bnet.protocol.exchange.Offer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOffer = true;
        result.offer_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOffer(global::bnet.protocol.exchange.Offer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOffer &&
            result.offer_ != global::bnet.protocol.exchange.Offer.DefaultInstance) {
            result.offer_ = global::bnet.protocol.exchange.Offer.CreateBuilder(result.offer_).MergeFrom(value).BuildPartial();
        } else {
          result.offer_ = value;
        }
        result.hasOffer = true;
        return this;
      }
      public Builder ClearOffer() {
        PrepareBuilder();
        result.hasOffer = false;
        result.offer_ = null;
        return this;
      }
      
      public bool HasAuctionDuration {
        get { return result.hasAuctionDuration; }
      }
      public ulong AuctionDuration {
        get { return result.AuctionDuration; }
        set { SetAuctionDuration(value); }
      }
      public Builder SetAuctionDuration(ulong value) {
        PrepareBuilder();
        result.hasAuctionDuration = true;
        result.auctionDuration_ = value;
        return this;
      }
      public Builder ClearAuctionDuration() {
        PrepareBuilder();
        result.hasAuctionDuration = false;
        result.auctionDuration_ = 0UL;
        return this;
      }
      
      public bool HasAuctionStartDelay {
        get { return result.hasAuctionStartDelay; }
      }
      public ulong AuctionStartDelay {
        get { return result.AuctionStartDelay; }
        set { SetAuctionStartDelay(value); }
      }
      public Builder SetAuctionStartDelay(ulong value) {
        PrepareBuilder();
        result.hasAuctionStartDelay = true;
        result.auctionStartDelay_ = value;
        return this;
      }
      public Builder ClearAuctionStartDelay() {
        PrepareBuilder();
        result.hasAuctionStartDelay = false;
        result.auctionStartDelay_ = 0UL;
        return this;
      }
      
      public bool HasBillingAddress {
       get { return result.hasBillingAddress; }
      }
      public global::bnet.protocol.exchange.BillingAddress BillingAddress {
        get { return result.BillingAddress; }
        set { SetBillingAddress(value); }
      }
      public Builder SetBillingAddress(global::bnet.protocol.exchange.BillingAddress value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBillingAddress = true;
        result.billingAddress_ = value;
        return this;
      }
      public Builder SetBillingAddress(global::bnet.protocol.exchange.BillingAddress.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBillingAddress = true;
        result.billingAddress_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBillingAddress(global::bnet.protocol.exchange.BillingAddress value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBillingAddress &&
            result.billingAddress_ != global::bnet.protocol.exchange.BillingAddress.DefaultInstance) {
            result.billingAddress_ = global::bnet.protocol.exchange.BillingAddress.CreateBuilder(result.billingAddress_).MergeFrom(value).BuildPartial();
        } else {
          result.billingAddress_ = value;
        }
        result.hasBillingAddress = true;
        return this;
      }
      public Builder ClearBillingAddress() {
        PrepareBuilder();
        result.hasBillingAddress = false;
        result.billingAddress_ = null;
        return this;
      }
    }
    static OfferCreation() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Bid : pb::GeneratedMessage<Bid, Bid.Builder> {
    private Bid() { }
    private static readonly Bid defaultInstance = new Bid().MakeReadOnly();
    private static readonly string[] _bidFieldNames = new string[] { "current_unit_price", "max_unit_price", "order" };
    private static readonly uint[] _bidFieldTags = new uint[] { 16, 24, 10 };
    public static Bid DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Bid DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Bid ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Bid__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Bid, Bid.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Bid__FieldAccessorTable; }
    }
    
    public const int OrderFieldNumber = 1;
    private bool hasOrder;
    private global::bnet.protocol.exchange.Order order_;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public global::bnet.protocol.exchange.Order Order {
      get { return order_ ?? global::bnet.protocol.exchange.Order.DefaultInstance; }
    }
    
    public const int CurrentUnitPriceFieldNumber = 2;
    private bool hasCurrentUnitPrice;
    private ulong currentUnitPrice_;
    public bool HasCurrentUnitPrice {
      get { return hasCurrentUnitPrice; }
    }
    public ulong CurrentUnitPrice {
      get { return currentUnitPrice_; }
    }
    
    public const int MaxUnitPriceFieldNumber = 3;
    private bool hasMaxUnitPrice;
    private ulong maxUnitPrice_;
    public bool HasMaxUnitPrice {
      get { return hasMaxUnitPrice; }
    }
    public ulong MaxUnitPrice {
      get { return maxUnitPrice_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOrder) return false;
        if (!Order.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _bidFieldNames;
      if (hasOrder) {
        output.WriteMessage(1, field_names[2], Order);
      }
      if (hasCurrentUnitPrice) {
        output.WriteUInt64(2, field_names[0], CurrentUnitPrice);
      }
      if (hasMaxUnitPrice) {
        output.WriteUInt64(3, field_names[1], MaxUnitPrice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOrder) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Order);
        }
        if (hasCurrentUnitPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, CurrentUnitPrice);
        }
        if (hasMaxUnitPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, MaxUnitPrice);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Bid ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Bid ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Bid ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Bid ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Bid ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Bid ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Bid ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Bid ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Bid ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Bid ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Bid MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Bid prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Bid, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Bid cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Bid result;
      
      private Bid PrepareBuilder() {
        if (resultIsReadOnly) {
          Bid original = result;
          result = new Bid();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Bid MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.Bid.Descriptor; }
      }
      
      public override Bid DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.Bid.DefaultInstance; }
      }
      
      public override Bid BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Bid) {
          return MergeFrom((Bid) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Bid other) {
        if (other == global::bnet.protocol.exchange.Bid.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrder) {
          MergeOrder(other.Order);
        }
        if (other.HasCurrentUnitPrice) {
          CurrentUnitPrice = other.CurrentUnitPrice;
        }
        if (other.HasMaxUnitPrice) {
          MaxUnitPrice = other.MaxUnitPrice;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_bidFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _bidFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.Order.Builder subBuilder = global::bnet.protocol.exchange.Order.CreateBuilder();
              if (result.hasOrder) {
                subBuilder.MergeFrom(Order);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Order = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasCurrentUnitPrice = input.ReadUInt64(ref result.currentUnitPrice_);
              break;
            }
            case 24: {
              result.hasMaxUnitPrice = input.ReadUInt64(ref result.maxUnitPrice_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrder {
       get { return result.hasOrder; }
      }
      public global::bnet.protocol.exchange.Order Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(global::bnet.protocol.exchange.Order value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder SetOrder(global::bnet.protocol.exchange.Order.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOrder(global::bnet.protocol.exchange.Order value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOrder &&
            result.order_ != global::bnet.protocol.exchange.Order.DefaultInstance) {
            result.order_ = global::bnet.protocol.exchange.Order.CreateBuilder(result.order_).MergeFrom(value).BuildPartial();
        } else {
          result.order_ = value;
        }
        result.hasOrder = true;
        return this;
      }
      public Builder ClearOrder() {
        PrepareBuilder();
        result.hasOrder = false;
        result.order_ = null;
        return this;
      }
      
      public bool HasCurrentUnitPrice {
        get { return result.hasCurrentUnitPrice; }
      }
      public ulong CurrentUnitPrice {
        get { return result.CurrentUnitPrice; }
        set { SetCurrentUnitPrice(value); }
      }
      public Builder SetCurrentUnitPrice(ulong value) {
        PrepareBuilder();
        result.hasCurrentUnitPrice = true;
        result.currentUnitPrice_ = value;
        return this;
      }
      public Builder ClearCurrentUnitPrice() {
        PrepareBuilder();
        result.hasCurrentUnitPrice = false;
        result.currentUnitPrice_ = 0UL;
        return this;
      }
      
      public bool HasMaxUnitPrice {
        get { return result.hasMaxUnitPrice; }
      }
      public ulong MaxUnitPrice {
        get { return result.MaxUnitPrice; }
        set { SetMaxUnitPrice(value); }
      }
      public Builder SetMaxUnitPrice(ulong value) {
        PrepareBuilder();
        result.hasMaxUnitPrice = true;
        result.maxUnitPrice_ = value;
        return this;
      }
      public Builder ClearMaxUnitPrice() {
        PrepareBuilder();
        result.hasMaxUnitPrice = false;
        result.maxUnitPrice_ = 0UL;
        return this;
      }
    }
    static Bid() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class BidExtended : pb::GeneratedMessage<BidExtended, BidExtended.Builder> {
    private BidExtended() { }
    private static readonly BidExtended defaultInstance = new BidExtended().MakeReadOnly();
    private static readonly string[] _bidExtendedFieldNames = new string[] { "bid", "bid_current_unit_price", "bid_max_unit_price", "extension", "offer_current_winning_price", "offer_out_bid_price", "offer_trade_now_price" };
    private static readonly uint[] _bidExtendedFieldTags = new uint[] { 10, 48, 56, 18, 40, 24, 32 };
    public static BidExtended DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BidExtended DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BidExtended ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_BidExtended__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BidExtended, BidExtended.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_BidExtended__FieldAccessorTable; }
    }
    
    public const int BidFieldNumber = 1;
    private bool hasBid;
    private global::bnet.protocol.exchange.Bid bid_;
    public bool HasBid {
      get { return hasBid; }
    }
    public global::bnet.protocol.exchange.Bid Bid {
      get { return bid_ ?? global::bnet.protocol.exchange.Bid.DefaultInstance; }
    }
    
    public const int ExtensionFieldNumber = 2;
    private bool hasExtension;
    private global::bnet.protocol.exchange.Extension extension_;
    public bool HasExtension {
      get { return hasExtension; }
    }
    public global::bnet.protocol.exchange.Extension Extension {
      get { return extension_ ?? global::bnet.protocol.exchange.Extension.DefaultInstance; }
    }
    
    public const int OfferOutBidPriceFieldNumber = 3;
    private bool hasOfferOutBidPrice;
    private ulong offerOutBidPrice_;
    public bool HasOfferOutBidPrice {
      get { return hasOfferOutBidPrice; }
    }
    public ulong OfferOutBidPrice {
      get { return offerOutBidPrice_; }
    }
    
    public const int OfferTradeNowPriceFieldNumber = 4;
    private bool hasOfferTradeNowPrice;
    private ulong offerTradeNowPrice_;
    public bool HasOfferTradeNowPrice {
      get { return hasOfferTradeNowPrice; }
    }
    public ulong OfferTradeNowPrice {
      get { return offerTradeNowPrice_; }
    }
    
    public const int OfferCurrentWinningPriceFieldNumber = 5;
    private bool hasOfferCurrentWinningPrice;
    private ulong offerCurrentWinningPrice_;
    public bool HasOfferCurrentWinningPrice {
      get { return hasOfferCurrentWinningPrice; }
    }
    public ulong OfferCurrentWinningPrice {
      get { return offerCurrentWinningPrice_; }
    }
    
    public const int BidCurrentUnitPriceFieldNumber = 6;
    private bool hasBidCurrentUnitPrice;
    private ulong bidCurrentUnitPrice_;
    public bool HasBidCurrentUnitPrice {
      get { return hasBidCurrentUnitPrice; }
    }
    public ulong BidCurrentUnitPrice {
      get { return bidCurrentUnitPrice_; }
    }
    
    public const int BidMaxUnitPriceFieldNumber = 7;
    private bool hasBidMaxUnitPrice;
    private ulong bidMaxUnitPrice_;
    public bool HasBidMaxUnitPrice {
      get { return hasBidMaxUnitPrice; }
    }
    public ulong BidMaxUnitPrice {
      get { return bidMaxUnitPrice_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBid) return false;
        if (!hasExtension) return false;
        if (!Bid.IsInitialized) return false;
        if (!Extension.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _bidExtendedFieldNames;
      if (hasBid) {
        output.WriteMessage(1, field_names[0], Bid);
      }
      if (hasExtension) {
        output.WriteMessage(2, field_names[3], Extension);
      }
      if (hasOfferOutBidPrice) {
        output.WriteUInt64(3, field_names[5], OfferOutBidPrice);
      }
      if (hasOfferTradeNowPrice) {
        output.WriteUInt64(4, field_names[6], OfferTradeNowPrice);
      }
      if (hasOfferCurrentWinningPrice) {
        output.WriteUInt64(5, field_names[4], OfferCurrentWinningPrice);
      }
      if (hasBidCurrentUnitPrice) {
        output.WriteUInt64(6, field_names[1], BidCurrentUnitPrice);
      }
      if (hasBidMaxUnitPrice) {
        output.WriteUInt64(7, field_names[2], BidMaxUnitPrice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBid) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Bid);
        }
        if (hasExtension) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Extension);
        }
        if (hasOfferOutBidPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, OfferOutBidPrice);
        }
        if (hasOfferTradeNowPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, OfferTradeNowPrice);
        }
        if (hasOfferCurrentWinningPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(5, OfferCurrentWinningPrice);
        }
        if (hasBidCurrentUnitPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(6, BidCurrentUnitPrice);
        }
        if (hasBidMaxUnitPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(7, BidMaxUnitPrice);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BidExtended ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BidExtended ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BidExtended ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BidExtended ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BidExtended ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BidExtended ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BidExtended ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BidExtended ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BidExtended ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BidExtended ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BidExtended MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BidExtended prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<BidExtended, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BidExtended cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BidExtended result;
      
      private BidExtended PrepareBuilder() {
        if (resultIsReadOnly) {
          BidExtended original = result;
          result = new BidExtended();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BidExtended MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.BidExtended.Descriptor; }
      }
      
      public override BidExtended DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.BidExtended.DefaultInstance; }
      }
      
      public override BidExtended BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BidExtended) {
          return MergeFrom((BidExtended) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BidExtended other) {
        if (other == global::bnet.protocol.exchange.BidExtended.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBid) {
          MergeBid(other.Bid);
        }
        if (other.HasExtension) {
          MergeExtension(other.Extension);
        }
        if (other.HasOfferOutBidPrice) {
          OfferOutBidPrice = other.OfferOutBidPrice;
        }
        if (other.HasOfferTradeNowPrice) {
          OfferTradeNowPrice = other.OfferTradeNowPrice;
        }
        if (other.HasOfferCurrentWinningPrice) {
          OfferCurrentWinningPrice = other.OfferCurrentWinningPrice;
        }
        if (other.HasBidCurrentUnitPrice) {
          BidCurrentUnitPrice = other.BidCurrentUnitPrice;
        }
        if (other.HasBidMaxUnitPrice) {
          BidMaxUnitPrice = other.BidMaxUnitPrice;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_bidExtendedFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _bidExtendedFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.Bid.Builder subBuilder = global::bnet.protocol.exchange.Bid.CreateBuilder();
              if (result.hasBid) {
                subBuilder.MergeFrom(Bid);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Bid = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.Extension.Builder subBuilder = global::bnet.protocol.exchange.Extension.CreateBuilder();
              if (result.hasExtension) {
                subBuilder.MergeFrom(Extension);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Extension = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasOfferOutBidPrice = input.ReadUInt64(ref result.offerOutBidPrice_);
              break;
            }
            case 32: {
              result.hasOfferTradeNowPrice = input.ReadUInt64(ref result.offerTradeNowPrice_);
              break;
            }
            case 40: {
              result.hasOfferCurrentWinningPrice = input.ReadUInt64(ref result.offerCurrentWinningPrice_);
              break;
            }
            case 48: {
              result.hasBidCurrentUnitPrice = input.ReadUInt64(ref result.bidCurrentUnitPrice_);
              break;
            }
            case 56: {
              result.hasBidMaxUnitPrice = input.ReadUInt64(ref result.bidMaxUnitPrice_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBid {
       get { return result.hasBid; }
      }
      public global::bnet.protocol.exchange.Bid Bid {
        get { return result.Bid; }
        set { SetBid(value); }
      }
      public Builder SetBid(global::bnet.protocol.exchange.Bid value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBid = true;
        result.bid_ = value;
        return this;
      }
      public Builder SetBid(global::bnet.protocol.exchange.Bid.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBid = true;
        result.bid_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBid(global::bnet.protocol.exchange.Bid value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBid &&
            result.bid_ != global::bnet.protocol.exchange.Bid.DefaultInstance) {
            result.bid_ = global::bnet.protocol.exchange.Bid.CreateBuilder(result.bid_).MergeFrom(value).BuildPartial();
        } else {
          result.bid_ = value;
        }
        result.hasBid = true;
        return this;
      }
      public Builder ClearBid() {
        PrepareBuilder();
        result.hasBid = false;
        result.bid_ = null;
        return this;
      }
      
      public bool HasExtension {
       get { return result.hasExtension; }
      }
      public global::bnet.protocol.exchange.Extension Extension {
        get { return result.Extension; }
        set { SetExtension(value); }
      }
      public Builder SetExtension(global::bnet.protocol.exchange.Extension value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExtension = true;
        result.extension_ = value;
        return this;
      }
      public Builder SetExtension(global::bnet.protocol.exchange.Extension.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasExtension = true;
        result.extension_ = builderForValue.Build();
        return this;
      }
      public Builder MergeExtension(global::bnet.protocol.exchange.Extension value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasExtension &&
            result.extension_ != global::bnet.protocol.exchange.Extension.DefaultInstance) {
            result.extension_ = global::bnet.protocol.exchange.Extension.CreateBuilder(result.extension_).MergeFrom(value).BuildPartial();
        } else {
          result.extension_ = value;
        }
        result.hasExtension = true;
        return this;
      }
      public Builder ClearExtension() {
        PrepareBuilder();
        result.hasExtension = false;
        result.extension_ = null;
        return this;
      }
      
      public bool HasOfferOutBidPrice {
        get { return result.hasOfferOutBidPrice; }
      }
      public ulong OfferOutBidPrice {
        get { return result.OfferOutBidPrice; }
        set { SetOfferOutBidPrice(value); }
      }
      public Builder SetOfferOutBidPrice(ulong value) {
        PrepareBuilder();
        result.hasOfferOutBidPrice = true;
        result.offerOutBidPrice_ = value;
        return this;
      }
      public Builder ClearOfferOutBidPrice() {
        PrepareBuilder();
        result.hasOfferOutBidPrice = false;
        result.offerOutBidPrice_ = 0UL;
        return this;
      }
      
      public bool HasOfferTradeNowPrice {
        get { return result.hasOfferTradeNowPrice; }
      }
      public ulong OfferTradeNowPrice {
        get { return result.OfferTradeNowPrice; }
        set { SetOfferTradeNowPrice(value); }
      }
      public Builder SetOfferTradeNowPrice(ulong value) {
        PrepareBuilder();
        result.hasOfferTradeNowPrice = true;
        result.offerTradeNowPrice_ = value;
        return this;
      }
      public Builder ClearOfferTradeNowPrice() {
        PrepareBuilder();
        result.hasOfferTradeNowPrice = false;
        result.offerTradeNowPrice_ = 0UL;
        return this;
      }
      
      public bool HasOfferCurrentWinningPrice {
        get { return result.hasOfferCurrentWinningPrice; }
      }
      public ulong OfferCurrentWinningPrice {
        get { return result.OfferCurrentWinningPrice; }
        set { SetOfferCurrentWinningPrice(value); }
      }
      public Builder SetOfferCurrentWinningPrice(ulong value) {
        PrepareBuilder();
        result.hasOfferCurrentWinningPrice = true;
        result.offerCurrentWinningPrice_ = value;
        return this;
      }
      public Builder ClearOfferCurrentWinningPrice() {
        PrepareBuilder();
        result.hasOfferCurrentWinningPrice = false;
        result.offerCurrentWinningPrice_ = 0UL;
        return this;
      }
      
      public bool HasBidCurrentUnitPrice {
        get { return result.hasBidCurrentUnitPrice; }
      }
      public ulong BidCurrentUnitPrice {
        get { return result.BidCurrentUnitPrice; }
        set { SetBidCurrentUnitPrice(value); }
      }
      public Builder SetBidCurrentUnitPrice(ulong value) {
        PrepareBuilder();
        result.hasBidCurrentUnitPrice = true;
        result.bidCurrentUnitPrice_ = value;
        return this;
      }
      public Builder ClearBidCurrentUnitPrice() {
        PrepareBuilder();
        result.hasBidCurrentUnitPrice = false;
        result.bidCurrentUnitPrice_ = 0UL;
        return this;
      }
      
      public bool HasBidMaxUnitPrice {
        get { return result.hasBidMaxUnitPrice; }
      }
      public ulong BidMaxUnitPrice {
        get { return result.BidMaxUnitPrice; }
        set { SetBidMaxUnitPrice(value); }
      }
      public Builder SetBidMaxUnitPrice(ulong value) {
        PrepareBuilder();
        result.hasBidMaxUnitPrice = true;
        result.bidMaxUnitPrice_ = value;
        return this;
      }
      public Builder ClearBidMaxUnitPrice() {
        PrepareBuilder();
        result.hasBidMaxUnitPrice = false;
        result.bidMaxUnitPrice_ = 0UL;
        return this;
      }
    }
    static BidExtended() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class BidCreation : pb::GeneratedMessage<BidCreation, BidCreation.Builder> {
    private BidCreation() { }
    private static readonly BidCreation defaultInstance = new BidCreation().MakeReadOnly();
    private static readonly string[] _bidCreationFieldNames = new string[] { "auction_duration", "auction_start_delay", "bid", "billing_address", "fill_or_kill" };
    private static readonly uint[] _bidCreationFieldTags = new uint[] { 16, 24, 10, 34, 40 };
    public static BidCreation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BidCreation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BidCreation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_BidCreation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BidCreation, BidCreation.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_BidCreation__FieldAccessorTable; }
    }
    
    public const int BidFieldNumber = 1;
    private bool hasBid;
    private global::bnet.protocol.exchange.Bid bid_;
    public bool HasBid {
      get { return hasBid; }
    }
    public global::bnet.protocol.exchange.Bid Bid {
      get { return bid_ ?? global::bnet.protocol.exchange.Bid.DefaultInstance; }
    }
    
    public const int AuctionDurationFieldNumber = 2;
    private bool hasAuctionDuration;
    private ulong auctionDuration_;
    public bool HasAuctionDuration {
      get { return hasAuctionDuration; }
    }
    public ulong AuctionDuration {
      get { return auctionDuration_; }
    }
    
    public const int AuctionStartDelayFieldNumber = 3;
    private bool hasAuctionStartDelay;
    private ulong auctionStartDelay_;
    public bool HasAuctionStartDelay {
      get { return hasAuctionStartDelay; }
    }
    public ulong AuctionStartDelay {
      get { return auctionStartDelay_; }
    }
    
    public const int BillingAddressFieldNumber = 4;
    private bool hasBillingAddress;
    private global::bnet.protocol.exchange.BillingAddress billingAddress_;
    public bool HasBillingAddress {
      get { return hasBillingAddress; }
    }
    public global::bnet.protocol.exchange.BillingAddress BillingAddress {
      get { return billingAddress_ ?? global::bnet.protocol.exchange.BillingAddress.DefaultInstance; }
    }
    
    public const int FillOrKillFieldNumber = 5;
    private bool hasFillOrKill;
    private bool fillOrKill_;
    public bool HasFillOrKill {
      get { return hasFillOrKill; }
    }
    public bool FillOrKill {
      get { return fillOrKill_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBid) return false;
        if (!Bid.IsInitialized) return false;
        if (HasBillingAddress) {
          if (!BillingAddress.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _bidCreationFieldNames;
      if (hasBid) {
        output.WriteMessage(1, field_names[2], Bid);
      }
      if (hasAuctionDuration) {
        output.WriteUInt64(2, field_names[0], AuctionDuration);
      }
      if (hasAuctionStartDelay) {
        output.WriteUInt64(3, field_names[1], AuctionStartDelay);
      }
      if (hasBillingAddress) {
        output.WriteMessage(4, field_names[3], BillingAddress);
      }
      if (hasFillOrKill) {
        output.WriteBool(5, field_names[4], FillOrKill);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBid) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Bid);
        }
        if (hasAuctionDuration) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, AuctionDuration);
        }
        if (hasAuctionStartDelay) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, AuctionStartDelay);
        }
        if (hasBillingAddress) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, BillingAddress);
        }
        if (hasFillOrKill) {
          size += pb::CodedOutputStream.ComputeBoolSize(5, FillOrKill);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BidCreation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BidCreation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BidCreation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BidCreation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BidCreation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BidCreation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BidCreation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BidCreation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BidCreation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BidCreation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BidCreation MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BidCreation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<BidCreation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BidCreation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BidCreation result;
      
      private BidCreation PrepareBuilder() {
        if (resultIsReadOnly) {
          BidCreation original = result;
          result = new BidCreation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BidCreation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.BidCreation.Descriptor; }
      }
      
      public override BidCreation DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.BidCreation.DefaultInstance; }
      }
      
      public override BidCreation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BidCreation) {
          return MergeFrom((BidCreation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BidCreation other) {
        if (other == global::bnet.protocol.exchange.BidCreation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBid) {
          MergeBid(other.Bid);
        }
        if (other.HasAuctionDuration) {
          AuctionDuration = other.AuctionDuration;
        }
        if (other.HasAuctionStartDelay) {
          AuctionStartDelay = other.AuctionStartDelay;
        }
        if (other.HasBillingAddress) {
          MergeBillingAddress(other.BillingAddress);
        }
        if (other.HasFillOrKill) {
          FillOrKill = other.FillOrKill;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_bidCreationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _bidCreationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.exchange.Bid.Builder subBuilder = global::bnet.protocol.exchange.Bid.CreateBuilder();
              if (result.hasBid) {
                subBuilder.MergeFrom(Bid);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Bid = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasAuctionDuration = input.ReadUInt64(ref result.auctionDuration_);
              break;
            }
            case 24: {
              result.hasAuctionStartDelay = input.ReadUInt64(ref result.auctionStartDelay_);
              break;
            }
            case 34: {
              global::bnet.protocol.exchange.BillingAddress.Builder subBuilder = global::bnet.protocol.exchange.BillingAddress.CreateBuilder();
              if (result.hasBillingAddress) {
                subBuilder.MergeFrom(BillingAddress);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BillingAddress = subBuilder.BuildPartial();
              break;
            }
            case 40: {
              result.hasFillOrKill = input.ReadBool(ref result.fillOrKill_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBid {
       get { return result.hasBid; }
      }
      public global::bnet.protocol.exchange.Bid Bid {
        get { return result.Bid; }
        set { SetBid(value); }
      }
      public Builder SetBid(global::bnet.protocol.exchange.Bid value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBid = true;
        result.bid_ = value;
        return this;
      }
      public Builder SetBid(global::bnet.protocol.exchange.Bid.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBid = true;
        result.bid_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBid(global::bnet.protocol.exchange.Bid value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBid &&
            result.bid_ != global::bnet.protocol.exchange.Bid.DefaultInstance) {
            result.bid_ = global::bnet.protocol.exchange.Bid.CreateBuilder(result.bid_).MergeFrom(value).BuildPartial();
        } else {
          result.bid_ = value;
        }
        result.hasBid = true;
        return this;
      }
      public Builder ClearBid() {
        PrepareBuilder();
        result.hasBid = false;
        result.bid_ = null;
        return this;
      }
      
      public bool HasAuctionDuration {
        get { return result.hasAuctionDuration; }
      }
      public ulong AuctionDuration {
        get { return result.AuctionDuration; }
        set { SetAuctionDuration(value); }
      }
      public Builder SetAuctionDuration(ulong value) {
        PrepareBuilder();
        result.hasAuctionDuration = true;
        result.auctionDuration_ = value;
        return this;
      }
      public Builder ClearAuctionDuration() {
        PrepareBuilder();
        result.hasAuctionDuration = false;
        result.auctionDuration_ = 0UL;
        return this;
      }
      
      public bool HasAuctionStartDelay {
        get { return result.hasAuctionStartDelay; }
      }
      public ulong AuctionStartDelay {
        get { return result.AuctionStartDelay; }
        set { SetAuctionStartDelay(value); }
      }
      public Builder SetAuctionStartDelay(ulong value) {
        PrepareBuilder();
        result.hasAuctionStartDelay = true;
        result.auctionStartDelay_ = value;
        return this;
      }
      public Builder ClearAuctionStartDelay() {
        PrepareBuilder();
        result.hasAuctionStartDelay = false;
        result.auctionStartDelay_ = 0UL;
        return this;
      }
      
      public bool HasBillingAddress {
       get { return result.hasBillingAddress; }
      }
      public global::bnet.protocol.exchange.BillingAddress BillingAddress {
        get { return result.BillingAddress; }
        set { SetBillingAddress(value); }
      }
      public Builder SetBillingAddress(global::bnet.protocol.exchange.BillingAddress value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBillingAddress = true;
        result.billingAddress_ = value;
        return this;
      }
      public Builder SetBillingAddress(global::bnet.protocol.exchange.BillingAddress.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBillingAddress = true;
        result.billingAddress_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBillingAddress(global::bnet.protocol.exchange.BillingAddress value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBillingAddress &&
            result.billingAddress_ != global::bnet.protocol.exchange.BillingAddress.DefaultInstance) {
            result.billingAddress_ = global::bnet.protocol.exchange.BillingAddress.CreateBuilder(result.billingAddress_).MergeFrom(value).BuildPartial();
        } else {
          result.billingAddress_ = value;
        }
        result.hasBillingAddress = true;
        return this;
      }
      public Builder ClearBillingAddress() {
        PrepareBuilder();
        result.hasBillingAddress = false;
        result.billingAddress_ = null;
        return this;
      }
      
      public bool HasFillOrKill {
        get { return result.hasFillOrKill; }
      }
      public bool FillOrKill {
        get { return result.FillOrKill; }
        set { SetFillOrKill(value); }
      }
      public Builder SetFillOrKill(bool value) {
        PrepareBuilder();
        result.hasFillOrKill = true;
        result.fillOrKill_ = value;
        return this;
      }
      public Builder ClearFillOrKill() {
        PrepareBuilder();
        result.hasFillOrKill = false;
        result.fillOrKill_ = false;
        return this;
      }
    }
    static BidCreation() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class OrderExtended : pb::GeneratedMessage<OrderExtended, OrderExtended.Builder> {
    private OrderExtended() { }
    private static readonly OrderExtended defaultInstance = new OrderExtended().MakeReadOnly();
    private static readonly string[] _orderExtendedFieldNames = new string[] { "bid_extended", "offer_extended", "order_type" };
    private static readonly uint[] _orderExtendedFieldTags = new uint[] { 18, 26, 8 };
    public static OrderExtended DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderExtended DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderExtended ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OrderExtended__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderExtended, OrderExtended.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_OrderExtended__FieldAccessorTable; }
    }
    
    public const int OrderTypeFieldNumber = 1;
    private bool hasOrderType;
    private uint orderType_;
    public bool HasOrderType {
      get { return hasOrderType; }
    }
    public uint OrderType {
      get { return orderType_; }
    }
    
    public const int BidExtendedFieldNumber = 2;
    private bool hasBidExtended;
    private global::bnet.protocol.exchange.BidExtended bidExtended_;
    public bool HasBidExtended {
      get { return hasBidExtended; }
    }
    public global::bnet.protocol.exchange.BidExtended BidExtended {
      get { return bidExtended_ ?? global::bnet.protocol.exchange.BidExtended.DefaultInstance; }
    }
    
    public const int OfferExtendedFieldNumber = 3;
    private bool hasOfferExtended;
    private global::bnet.protocol.exchange.OfferExtended offerExtended_;
    public bool HasOfferExtended {
      get { return hasOfferExtended; }
    }
    public global::bnet.protocol.exchange.OfferExtended OfferExtended {
      get { return offerExtended_ ?? global::bnet.protocol.exchange.OfferExtended.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOrderType) return false;
        if (HasBidExtended) {
          if (!BidExtended.IsInitialized) return false;
        }
        if (HasOfferExtended) {
          if (!OfferExtended.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _orderExtendedFieldNames;
      if (hasOrderType) {
        output.WriteUInt32(1, field_names[2], OrderType);
      }
      if (hasBidExtended) {
        output.WriteMessage(2, field_names[0], BidExtended);
      }
      if (hasOfferExtended) {
        output.WriteMessage(3, field_names[1], OfferExtended);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOrderType) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, OrderType);
        }
        if (hasBidExtended) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, BidExtended);
        }
        if (hasOfferExtended) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, OfferExtended);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static OrderExtended ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderExtended ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderExtended ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderExtended ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderExtended ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderExtended ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderExtended ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderExtended ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderExtended ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderExtended ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderExtended MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderExtended prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderExtended, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderExtended cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderExtended result;
      
      private OrderExtended PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderExtended original = result;
          result = new OrderExtended();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderExtended MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.OrderExtended.Descriptor; }
      }
      
      public override OrderExtended DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.OrderExtended.DefaultInstance; }
      }
      
      public override OrderExtended BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderExtended) {
          return MergeFrom((OrderExtended) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderExtended other) {
        if (other == global::bnet.protocol.exchange.OrderExtended.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrderType) {
          OrderType = other.OrderType;
        }
        if (other.HasBidExtended) {
          MergeBidExtended(other.BidExtended);
        }
        if (other.HasOfferExtended) {
          MergeOfferExtended(other.OfferExtended);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderExtendedFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderExtendedFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasOrderType = input.ReadUInt32(ref result.orderType_);
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.BidExtended.Builder subBuilder = global::bnet.protocol.exchange.BidExtended.CreateBuilder();
              if (result.hasBidExtended) {
                subBuilder.MergeFrom(BidExtended);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BidExtended = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.exchange.OfferExtended.Builder subBuilder = global::bnet.protocol.exchange.OfferExtended.CreateBuilder();
              if (result.hasOfferExtended) {
                subBuilder.MergeFrom(OfferExtended);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              OfferExtended = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrderType {
        get { return result.hasOrderType; }
      }
      public uint OrderType {
        get { return result.OrderType; }
        set { SetOrderType(value); }
      }
      public Builder SetOrderType(uint value) {
        PrepareBuilder();
        result.hasOrderType = true;
        result.orderType_ = value;
        return this;
      }
      public Builder ClearOrderType() {
        PrepareBuilder();
        result.hasOrderType = false;
        result.orderType_ = 0;
        return this;
      }
      
      public bool HasBidExtended {
       get { return result.hasBidExtended; }
      }
      public global::bnet.protocol.exchange.BidExtended BidExtended {
        get { return result.BidExtended; }
        set { SetBidExtended(value); }
      }
      public Builder SetBidExtended(global::bnet.protocol.exchange.BidExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBidExtended = true;
        result.bidExtended_ = value;
        return this;
      }
      public Builder SetBidExtended(global::bnet.protocol.exchange.BidExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBidExtended = true;
        result.bidExtended_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBidExtended(global::bnet.protocol.exchange.BidExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBidExtended &&
            result.bidExtended_ != global::bnet.protocol.exchange.BidExtended.DefaultInstance) {
            result.bidExtended_ = global::bnet.protocol.exchange.BidExtended.CreateBuilder(result.bidExtended_).MergeFrom(value).BuildPartial();
        } else {
          result.bidExtended_ = value;
        }
        result.hasBidExtended = true;
        return this;
      }
      public Builder ClearBidExtended() {
        PrepareBuilder();
        result.hasBidExtended = false;
        result.bidExtended_ = null;
        return this;
      }
      
      public bool HasOfferExtended {
       get { return result.hasOfferExtended; }
      }
      public global::bnet.protocol.exchange.OfferExtended OfferExtended {
        get { return result.OfferExtended; }
        set { SetOfferExtended(value); }
      }
      public Builder SetOfferExtended(global::bnet.protocol.exchange.OfferExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOfferExtended = true;
        result.offerExtended_ = value;
        return this;
      }
      public Builder SetOfferExtended(global::bnet.protocol.exchange.OfferExtended.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasOfferExtended = true;
        result.offerExtended_ = builderForValue.Build();
        return this;
      }
      public Builder MergeOfferExtended(global::bnet.protocol.exchange.OfferExtended value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasOfferExtended &&
            result.offerExtended_ != global::bnet.protocol.exchange.OfferExtended.DefaultInstance) {
            result.offerExtended_ = global::bnet.protocol.exchange.OfferExtended.CreateBuilder(result.offerExtended_).MergeFrom(value).BuildPartial();
        } else {
          result.offerExtended_ = value;
        }
        result.hasOfferExtended = true;
        return this;
      }
      public Builder ClearOfferExtended() {
        PrepareBuilder();
        result.hasOfferExtended = false;
        result.offerExtended_ = null;
        return this;
      }
    }
    static OrderExtended() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueryFilterByOrderId : pb::GeneratedMessage<QueryFilterByOrderId, QueryFilterByOrderId.Builder> {
    private QueryFilterByOrderId() { }
    private static readonly QueryFilterByOrderId defaultInstance = new QueryFilterByOrderId().MakeReadOnly();
    private static readonly string[] _queryFilterByOrderIdFieldNames = new string[] { "max_result", "ref_order_id", "ref_price" };
    private static readonly uint[] _queryFilterByOrderIdFieldTags = new uint[] { 8, 16, 24 };
    public static QueryFilterByOrderId DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryFilterByOrderId DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryFilterByOrderId ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_QueryFilterByOrderId__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryFilterByOrderId, QueryFilterByOrderId.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_QueryFilterByOrderId__FieldAccessorTable; }
    }
    
    public const int MaxResultFieldNumber = 1;
    private bool hasMaxResult;
    private uint maxResult_;
    public bool HasMaxResult {
      get { return hasMaxResult; }
    }
    public uint MaxResult {
      get { return maxResult_; }
    }
    
    public const int RefOrderIdFieldNumber = 2;
    private bool hasRefOrderId;
    private ulong refOrderId_;
    public bool HasRefOrderId {
      get { return hasRefOrderId; }
    }
    public ulong RefOrderId {
      get { return refOrderId_; }
    }
    
    public const int RefPriceFieldNumber = 3;
    private bool hasRefPrice;
    private ulong refPrice_;
    public bool HasRefPrice {
      get { return hasRefPrice; }
    }
    public ulong RefPrice {
      get { return refPrice_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMaxResult) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryFilterByOrderIdFieldNames;
      if (hasMaxResult) {
        output.WriteUInt32(1, field_names[0], MaxResult);
      }
      if (hasRefOrderId) {
        output.WriteUInt64(2, field_names[1], RefOrderId);
      }
      if (hasRefPrice) {
        output.WriteUInt64(3, field_names[2], RefPrice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMaxResult) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, MaxResult);
        }
        if (hasRefOrderId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, RefOrderId);
        }
        if (hasRefPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, RefPrice);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryFilterByOrderId ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryFilterByOrderId ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryFilterByOrderId ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryFilterByOrderId ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryFilterByOrderId ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryFilterByOrderId ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryFilterByOrderId ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryFilterByOrderId ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryFilterByOrderId ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryFilterByOrderId ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryFilterByOrderId MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryFilterByOrderId prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryFilterByOrderId, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryFilterByOrderId cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryFilterByOrderId result;
      
      private QueryFilterByOrderId PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryFilterByOrderId original = result;
          result = new QueryFilterByOrderId();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryFilterByOrderId MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryFilterByOrderId.Descriptor; }
      }
      
      public override QueryFilterByOrderId DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryFilterByOrderId.DefaultInstance; }
      }
      
      public override QueryFilterByOrderId BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryFilterByOrderId) {
          return MergeFrom((QueryFilterByOrderId) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryFilterByOrderId other) {
        if (other == global::bnet.protocol.exchange.QueryFilterByOrderId.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMaxResult) {
          MaxResult = other.MaxResult;
        }
        if (other.HasRefOrderId) {
          RefOrderId = other.RefOrderId;
        }
        if (other.HasRefPrice) {
          RefPrice = other.RefPrice;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryFilterByOrderIdFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryFilterByOrderIdFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMaxResult = input.ReadUInt32(ref result.maxResult_);
              break;
            }
            case 16: {
              result.hasRefOrderId = input.ReadUInt64(ref result.refOrderId_);
              break;
            }
            case 24: {
              result.hasRefPrice = input.ReadUInt64(ref result.refPrice_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMaxResult {
        get { return result.hasMaxResult; }
      }
      public uint MaxResult {
        get { return result.MaxResult; }
        set { SetMaxResult(value); }
      }
      public Builder SetMaxResult(uint value) {
        PrepareBuilder();
        result.hasMaxResult = true;
        result.maxResult_ = value;
        return this;
      }
      public Builder ClearMaxResult() {
        PrepareBuilder();
        result.hasMaxResult = false;
        result.maxResult_ = 0;
        return this;
      }
      
      public bool HasRefOrderId {
        get { return result.hasRefOrderId; }
      }
      public ulong RefOrderId {
        get { return result.RefOrderId; }
        set { SetRefOrderId(value); }
      }
      public Builder SetRefOrderId(ulong value) {
        PrepareBuilder();
        result.hasRefOrderId = true;
        result.refOrderId_ = value;
        return this;
      }
      public Builder ClearRefOrderId() {
        PrepareBuilder();
        result.hasRefOrderId = false;
        result.refOrderId_ = 0UL;
        return this;
      }
      
      public bool HasRefPrice {
        get { return result.hasRefPrice; }
      }
      public ulong RefPrice {
        get { return result.RefPrice; }
        set { SetRefPrice(value); }
      }
      public Builder SetRefPrice(ulong value) {
        PrepareBuilder();
        result.hasRefPrice = true;
        result.refPrice_ = value;
        return this;
      }
      public Builder ClearRefPrice() {
        PrepareBuilder();
        result.hasRefPrice = false;
        result.refPrice_ = 0UL;
        return this;
      }
    }
    static QueryFilterByOrderId() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueryFilterByCreatedTime : pb::GeneratedMessage<QueryFilterByCreatedTime, QueryFilterByCreatedTime.Builder> {
    private QueryFilterByCreatedTime() { }
    private static readonly QueryFilterByCreatedTime defaultInstance = new QueryFilterByCreatedTime().MakeReadOnly();
    private static readonly string[] _queryFilterByCreatedTimeFieldNames = new string[] { "currency", "max_result", "ref_created_time" };
    private static readonly uint[] _queryFilterByCreatedTimeFieldTags = new uint[] { 26, 8, 16 };
    public static QueryFilterByCreatedTime DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryFilterByCreatedTime DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryFilterByCreatedTime ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_QueryFilterByCreatedTime__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryFilterByCreatedTime, QueryFilterByCreatedTime.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_QueryFilterByCreatedTime__FieldAccessorTable; }
    }
    
    public const int MaxResultFieldNumber = 1;
    private bool hasMaxResult;
    private uint maxResult_;
    public bool HasMaxResult {
      get { return hasMaxResult; }
    }
    public uint MaxResult {
      get { return maxResult_; }
    }
    
    public const int RefCreatedTimeFieldNumber = 2;
    private bool hasRefCreatedTime;
    private ulong refCreatedTime_;
    public bool HasRefCreatedTime {
      get { return hasRefCreatedTime; }
    }
    public ulong RefCreatedTime {
      get { return refCreatedTime_; }
    }
    
    public const int CurrencyFieldNumber = 3;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMaxResult) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryFilterByCreatedTimeFieldNames;
      if (hasMaxResult) {
        output.WriteUInt32(1, field_names[1], MaxResult);
      }
      if (hasRefCreatedTime) {
        output.WriteUInt64(2, field_names[2], RefCreatedTime);
      }
      if (hasCurrency) {
        output.WriteString(3, field_names[0], Currency);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMaxResult) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, MaxResult);
        }
        if (hasRefCreatedTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, RefCreatedTime);
        }
        if (hasCurrency) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Currency);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryFilterByCreatedTime ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryFilterByCreatedTime ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryFilterByCreatedTime ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryFilterByCreatedTime ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryFilterByCreatedTime ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryFilterByCreatedTime ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryFilterByCreatedTime ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryFilterByCreatedTime ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryFilterByCreatedTime ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryFilterByCreatedTime ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryFilterByCreatedTime MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryFilterByCreatedTime prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryFilterByCreatedTime, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryFilterByCreatedTime cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryFilterByCreatedTime result;
      
      private QueryFilterByCreatedTime PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryFilterByCreatedTime original = result;
          result = new QueryFilterByCreatedTime();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryFilterByCreatedTime MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryFilterByCreatedTime.Descriptor; }
      }
      
      public override QueryFilterByCreatedTime DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryFilterByCreatedTime.DefaultInstance; }
      }
      
      public override QueryFilterByCreatedTime BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryFilterByCreatedTime) {
          return MergeFrom((QueryFilterByCreatedTime) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryFilterByCreatedTime other) {
        if (other == global::bnet.protocol.exchange.QueryFilterByCreatedTime.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMaxResult) {
          MaxResult = other.MaxResult;
        }
        if (other.HasRefCreatedTime) {
          RefCreatedTime = other.RefCreatedTime;
        }
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryFilterByCreatedTimeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryFilterByCreatedTimeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMaxResult = input.ReadUInt32(ref result.maxResult_);
              break;
            }
            case 16: {
              result.hasRefCreatedTime = input.ReadUInt64(ref result.refCreatedTime_);
              break;
            }
            case 26: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMaxResult {
        get { return result.hasMaxResult; }
      }
      public uint MaxResult {
        get { return result.MaxResult; }
        set { SetMaxResult(value); }
      }
      public Builder SetMaxResult(uint value) {
        PrepareBuilder();
        result.hasMaxResult = true;
        result.maxResult_ = value;
        return this;
      }
      public Builder ClearMaxResult() {
        PrepareBuilder();
        result.hasMaxResult = false;
        result.maxResult_ = 0;
        return this;
      }
      
      public bool HasRefCreatedTime {
        get { return result.hasRefCreatedTime; }
      }
      public ulong RefCreatedTime {
        get { return result.RefCreatedTime; }
        set { SetRefCreatedTime(value); }
      }
      public Builder SetRefCreatedTime(ulong value) {
        PrepareBuilder();
        result.hasRefCreatedTime = true;
        result.refCreatedTime_ = value;
        return this;
      }
      public Builder ClearRefCreatedTime() {
        PrepareBuilder();
        result.hasRefCreatedTime = false;
        result.refCreatedTime_ = 0UL;
        return this;
      }
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        PrepareBuilder();
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
    }
    static QueryFilterByCreatedTime() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class QueryOrderFilter : pb::GeneratedMessage<QueryOrderFilter, QueryOrderFilter.Builder> {
    private QueryOrderFilter() { }
    private static readonly QueryOrderFilter defaultInstance = new QueryOrderFilter().MakeReadOnly();
    private static readonly string[] _queryOrderFilterFieldNames = new string[] { "claimable", "currency", "order_book_status", "order_status_mask", "order_type", "rollup", "specialist", "time_filter" };
    private static readonly uint[] _queryOrderFilterFieldTags = new uint[] { 32, 10, 64, 40, 24, 48, 16, 58 };
    public static QueryOrderFilter DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override QueryOrderFilter DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override QueryOrderFilter ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_QueryOrderFilter__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<QueryOrderFilter, QueryOrderFilter.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_QueryOrderFilter__FieldAccessorTable; }
    }
    
    public const int CurrencyFieldNumber = 1;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int SpecialistFieldNumber = 2;
    private bool hasSpecialist;
    private uint specialist_;
    public bool HasSpecialist {
      get { return hasSpecialist; }
    }
    public uint Specialist {
      get { return specialist_; }
    }
    
    public const int OrderTypeFieldNumber = 3;
    private bool hasOrderType;
    private uint orderType_;
    public bool HasOrderType {
      get { return hasOrderType; }
    }
    public uint OrderType {
      get { return orderType_; }
    }
    
    public const int ClaimableFieldNumber = 4;
    private bool hasClaimable;
    private uint claimable_;
    public bool HasClaimable {
      get { return hasClaimable; }
    }
    public uint Claimable {
      get { return claimable_; }
    }
    
    public const int OrderStatusMaskFieldNumber = 5;
    private bool hasOrderStatusMask;
    private uint orderStatusMask_;
    public bool HasOrderStatusMask {
      get { return hasOrderStatusMask; }
    }
    public uint OrderStatusMask {
      get { return orderStatusMask_; }
    }
    
    public const int RollupFieldNumber = 6;
    private bool hasRollup;
    private bool rollup_;
    public bool HasRollup {
      get { return hasRollup; }
    }
    public bool Rollup {
      get { return rollup_; }
    }
    
    public const int TimeFilterFieldNumber = 7;
    private bool hasTimeFilter;
    private global::bnet.protocol.exchange.QueryFilterByCreatedTime timeFilter_;
    public bool HasTimeFilter {
      get { return hasTimeFilter; }
    }
    public global::bnet.protocol.exchange.QueryFilterByCreatedTime TimeFilter {
      get { return timeFilter_ ?? global::bnet.protocol.exchange.QueryFilterByCreatedTime.DefaultInstance; }
    }
    
    public const int OrderBookStatusFieldNumber = 8;
    private bool hasOrderBookStatus;
    private uint orderBookStatus_;
    public bool HasOrderBookStatus {
      get { return hasOrderBookStatus; }
    }
    public uint OrderBookStatus {
      get { return orderBookStatus_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTimeFilter) return false;
        if (!TimeFilter.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _queryOrderFilterFieldNames;
      if (hasCurrency) {
        output.WriteString(1, field_names[1], Currency);
      }
      if (hasSpecialist) {
        output.WriteUInt32(2, field_names[6], Specialist);
      }
      if (hasOrderType) {
        output.WriteUInt32(3, field_names[4], OrderType);
      }
      if (hasClaimable) {
        output.WriteUInt32(4, field_names[0], Claimable);
      }
      if (hasOrderStatusMask) {
        output.WriteUInt32(5, field_names[3], OrderStatusMask);
      }
      if (hasRollup) {
        output.WriteBool(6, field_names[5], Rollup);
      }
      if (hasTimeFilter) {
        output.WriteMessage(7, field_names[7], TimeFilter);
      }
      if (hasOrderBookStatus) {
        output.WriteUInt32(8, field_names[2], OrderBookStatus);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCurrency) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Currency);
        }
        if (hasSpecialist) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Specialist);
        }
        if (hasOrderType) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, OrderType);
        }
        if (hasClaimable) {
          size += pb::CodedOutputStream.ComputeUInt32Size(4, Claimable);
        }
        if (hasOrderStatusMask) {
          size += pb::CodedOutputStream.ComputeUInt32Size(5, OrderStatusMask);
        }
        if (hasRollup) {
          size += pb::CodedOutputStream.ComputeBoolSize(6, Rollup);
        }
        if (hasTimeFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, TimeFilter);
        }
        if (hasOrderBookStatus) {
          size += pb::CodedOutputStream.ComputeUInt32Size(8, OrderBookStatus);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static QueryOrderFilter ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOrderFilter ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOrderFilter ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static QueryOrderFilter ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static QueryOrderFilter ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOrderFilter ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static QueryOrderFilter ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static QueryOrderFilter ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static QueryOrderFilter ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static QueryOrderFilter ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private QueryOrderFilter MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(QueryOrderFilter prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<QueryOrderFilter, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(QueryOrderFilter cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private QueryOrderFilter result;
      
      private QueryOrderFilter PrepareBuilder() {
        if (resultIsReadOnly) {
          QueryOrderFilter original = result;
          result = new QueryOrderFilter();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override QueryOrderFilter MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.QueryOrderFilter.Descriptor; }
      }
      
      public override QueryOrderFilter DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.QueryOrderFilter.DefaultInstance; }
      }
      
      public override QueryOrderFilter BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is QueryOrderFilter) {
          return MergeFrom((QueryOrderFilter) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(QueryOrderFilter other) {
        if (other == global::bnet.protocol.exchange.QueryOrderFilter.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasSpecialist) {
          Specialist = other.Specialist;
        }
        if (other.HasOrderType) {
          OrderType = other.OrderType;
        }
        if (other.HasClaimable) {
          Claimable = other.Claimable;
        }
        if (other.HasOrderStatusMask) {
          OrderStatusMask = other.OrderStatusMask;
        }
        if (other.HasRollup) {
          Rollup = other.Rollup;
        }
        if (other.HasTimeFilter) {
          MergeTimeFilter(other.TimeFilter);
        }
        if (other.HasOrderBookStatus) {
          OrderBookStatus = other.OrderBookStatus;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_queryOrderFilterFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _queryOrderFilterFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
            case 16: {
              result.hasSpecialist = input.ReadUInt32(ref result.specialist_);
              break;
            }
            case 24: {
              result.hasOrderType = input.ReadUInt32(ref result.orderType_);
              break;
            }
            case 32: {
              result.hasClaimable = input.ReadUInt32(ref result.claimable_);
              break;
            }
            case 40: {
              result.hasOrderStatusMask = input.ReadUInt32(ref result.orderStatusMask_);
              break;
            }
            case 48: {
              result.hasRollup = input.ReadBool(ref result.rollup_);
              break;
            }
            case 58: {
              global::bnet.protocol.exchange.QueryFilterByCreatedTime.Builder subBuilder = global::bnet.protocol.exchange.QueryFilterByCreatedTime.CreateBuilder();
              if (result.hasTimeFilter) {
                subBuilder.MergeFrom(TimeFilter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TimeFilter = subBuilder.BuildPartial();
              break;
            }
            case 64: {
              result.hasOrderBookStatus = input.ReadUInt32(ref result.orderBookStatus_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        PrepareBuilder();
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasSpecialist {
        get { return result.hasSpecialist; }
      }
      public uint Specialist {
        get { return result.Specialist; }
        set { SetSpecialist(value); }
      }
      public Builder SetSpecialist(uint value) {
        PrepareBuilder();
        result.hasSpecialist = true;
        result.specialist_ = value;
        return this;
      }
      public Builder ClearSpecialist() {
        PrepareBuilder();
        result.hasSpecialist = false;
        result.specialist_ = 0;
        return this;
      }
      
      public bool HasOrderType {
        get { return result.hasOrderType; }
      }
      public uint OrderType {
        get { return result.OrderType; }
        set { SetOrderType(value); }
      }
      public Builder SetOrderType(uint value) {
        PrepareBuilder();
        result.hasOrderType = true;
        result.orderType_ = value;
        return this;
      }
      public Builder ClearOrderType() {
        PrepareBuilder();
        result.hasOrderType = false;
        result.orderType_ = 0;
        return this;
      }
      
      public bool HasClaimable {
        get { return result.hasClaimable; }
      }
      public uint Claimable {
        get { return result.Claimable; }
        set { SetClaimable(value); }
      }
      public Builder SetClaimable(uint value) {
        PrepareBuilder();
        result.hasClaimable = true;
        result.claimable_ = value;
        return this;
      }
      public Builder ClearClaimable() {
        PrepareBuilder();
        result.hasClaimable = false;
        result.claimable_ = 0;
        return this;
      }
      
      public bool HasOrderStatusMask {
        get { return result.hasOrderStatusMask; }
      }
      public uint OrderStatusMask {
        get { return result.OrderStatusMask; }
        set { SetOrderStatusMask(value); }
      }
      public Builder SetOrderStatusMask(uint value) {
        PrepareBuilder();
        result.hasOrderStatusMask = true;
        result.orderStatusMask_ = value;
        return this;
      }
      public Builder ClearOrderStatusMask() {
        PrepareBuilder();
        result.hasOrderStatusMask = false;
        result.orderStatusMask_ = 0;
        return this;
      }
      
      public bool HasRollup {
        get { return result.hasRollup; }
      }
      public bool Rollup {
        get { return result.Rollup; }
        set { SetRollup(value); }
      }
      public Builder SetRollup(bool value) {
        PrepareBuilder();
        result.hasRollup = true;
        result.rollup_ = value;
        return this;
      }
      public Builder ClearRollup() {
        PrepareBuilder();
        result.hasRollup = false;
        result.rollup_ = false;
        return this;
      }
      
      public bool HasTimeFilter {
       get { return result.hasTimeFilter; }
      }
      public global::bnet.protocol.exchange.QueryFilterByCreatedTime TimeFilter {
        get { return result.TimeFilter; }
        set { SetTimeFilter(value); }
      }
      public Builder SetTimeFilter(global::bnet.protocol.exchange.QueryFilterByCreatedTime value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTimeFilter = true;
        result.timeFilter_ = value;
        return this;
      }
      public Builder SetTimeFilter(global::bnet.protocol.exchange.QueryFilterByCreatedTime.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTimeFilter = true;
        result.timeFilter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTimeFilter(global::bnet.protocol.exchange.QueryFilterByCreatedTime value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTimeFilter &&
            result.timeFilter_ != global::bnet.protocol.exchange.QueryFilterByCreatedTime.DefaultInstance) {
            result.timeFilter_ = global::bnet.protocol.exchange.QueryFilterByCreatedTime.CreateBuilder(result.timeFilter_).MergeFrom(value).BuildPartial();
        } else {
          result.timeFilter_ = value;
        }
        result.hasTimeFilter = true;
        return this;
      }
      public Builder ClearTimeFilter() {
        PrepareBuilder();
        result.hasTimeFilter = false;
        result.timeFilter_ = null;
        return this;
      }
      
      public bool HasOrderBookStatus {
        get { return result.hasOrderBookStatus; }
      }
      public uint OrderBookStatus {
        get { return result.OrderBookStatus; }
        set { SetOrderBookStatus(value); }
      }
      public Builder SetOrderBookStatus(uint value) {
        PrepareBuilder();
        result.hasOrderBookStatus = true;
        result.orderBookStatus_ = value;
        return this;
      }
      public Builder ClearOrderBookStatus() {
        PrepareBuilder();
        result.hasOrderBookStatus = false;
        result.orderBookStatus_ = 0;
        return this;
      }
    }
    static QueryOrderFilter() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CurrencyConfig : pb::GeneratedMessage<CurrencyConfig, CurrencyConfig.Builder> {
    private CurrencyConfig() { }
    private static readonly CurrencyConfig defaultInstance = new CurrencyConfig().MakeReadOnly();
    private static readonly string[] _currencyConfigFieldNames = new string[] { "currency", "max_total_price", "max_unit_price", "min_total_price", "min_unit_price", "tick_size" };
    private static readonly uint[] _currencyConfigFieldTags = new uint[] { 10, 48, 32, 40, 24, 16 };
    public static CurrencyConfig DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CurrencyConfig DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CurrencyConfig ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_CurrencyConfig__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CurrencyConfig, CurrencyConfig.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_CurrencyConfig__FieldAccessorTable; }
    }
    
    public const int CurrencyFieldNumber = 1;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int TickSizeFieldNumber = 2;
    private bool hasTickSize;
    private ulong tickSize_;
    public bool HasTickSize {
      get { return hasTickSize; }
    }
    public ulong TickSize {
      get { return tickSize_; }
    }
    
    public const int MinUnitPriceFieldNumber = 3;
    private bool hasMinUnitPrice;
    private ulong minUnitPrice_;
    public bool HasMinUnitPrice {
      get { return hasMinUnitPrice; }
    }
    public ulong MinUnitPrice {
      get { return minUnitPrice_; }
    }
    
    public const int MaxUnitPriceFieldNumber = 4;
    private bool hasMaxUnitPrice;
    private ulong maxUnitPrice_;
    public bool HasMaxUnitPrice {
      get { return hasMaxUnitPrice; }
    }
    public ulong MaxUnitPrice {
      get { return maxUnitPrice_; }
    }
    
    public const int MinTotalPriceFieldNumber = 5;
    private bool hasMinTotalPrice;
    private ulong minTotalPrice_;
    public bool HasMinTotalPrice {
      get { return hasMinTotalPrice; }
    }
    public ulong MinTotalPrice {
      get { return minTotalPrice_; }
    }
    
    public const int MaxTotalPriceFieldNumber = 6;
    private bool hasMaxTotalPrice;
    private ulong maxTotalPrice_;
    public bool HasMaxTotalPrice {
      get { return hasMaxTotalPrice; }
    }
    public ulong MaxTotalPrice {
      get { return maxTotalPrice_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCurrency) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _currencyConfigFieldNames;
      if (hasCurrency) {
        output.WriteString(1, field_names[0], Currency);
      }
      if (hasTickSize) {
        output.WriteUInt64(2, field_names[5], TickSize);
      }
      if (hasMinUnitPrice) {
        output.WriteUInt64(3, field_names[4], MinUnitPrice);
      }
      if (hasMaxUnitPrice) {
        output.WriteUInt64(4, field_names[2], MaxUnitPrice);
      }
      if (hasMinTotalPrice) {
        output.WriteUInt64(5, field_names[3], MinTotalPrice);
      }
      if (hasMaxTotalPrice) {
        output.WriteUInt64(6, field_names[1], MaxTotalPrice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCurrency) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Currency);
        }
        if (hasTickSize) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, TickSize);
        }
        if (hasMinUnitPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, MinUnitPrice);
        }
        if (hasMaxUnitPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, MaxUnitPrice);
        }
        if (hasMinTotalPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(5, MinTotalPrice);
        }
        if (hasMaxTotalPrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(6, MaxTotalPrice);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CurrencyConfig ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CurrencyConfig ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CurrencyConfig ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CurrencyConfig ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CurrencyConfig ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CurrencyConfig ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CurrencyConfig ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CurrencyConfig ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CurrencyConfig ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CurrencyConfig ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CurrencyConfig MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CurrencyConfig prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CurrencyConfig, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CurrencyConfig cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CurrencyConfig result;
      
      private CurrencyConfig PrepareBuilder() {
        if (resultIsReadOnly) {
          CurrencyConfig original = result;
          result = new CurrencyConfig();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CurrencyConfig MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.CurrencyConfig.Descriptor; }
      }
      
      public override CurrencyConfig DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.CurrencyConfig.DefaultInstance; }
      }
      
      public override CurrencyConfig BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CurrencyConfig) {
          return MergeFrom((CurrencyConfig) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CurrencyConfig other) {
        if (other == global::bnet.protocol.exchange.CurrencyConfig.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasTickSize) {
          TickSize = other.TickSize;
        }
        if (other.HasMinUnitPrice) {
          MinUnitPrice = other.MinUnitPrice;
        }
        if (other.HasMaxUnitPrice) {
          MaxUnitPrice = other.MaxUnitPrice;
        }
        if (other.HasMinTotalPrice) {
          MinTotalPrice = other.MinTotalPrice;
        }
        if (other.HasMaxTotalPrice) {
          MaxTotalPrice = other.MaxTotalPrice;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_currencyConfigFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _currencyConfigFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
            case 16: {
              result.hasTickSize = input.ReadUInt64(ref result.tickSize_);
              break;
            }
            case 24: {
              result.hasMinUnitPrice = input.ReadUInt64(ref result.minUnitPrice_);
              break;
            }
            case 32: {
              result.hasMaxUnitPrice = input.ReadUInt64(ref result.maxUnitPrice_);
              break;
            }
            case 40: {
              result.hasMinTotalPrice = input.ReadUInt64(ref result.minTotalPrice_);
              break;
            }
            case 48: {
              result.hasMaxTotalPrice = input.ReadUInt64(ref result.maxTotalPrice_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        PrepareBuilder();
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasTickSize {
        get { return result.hasTickSize; }
      }
      public ulong TickSize {
        get { return result.TickSize; }
        set { SetTickSize(value); }
      }
      public Builder SetTickSize(ulong value) {
        PrepareBuilder();
        result.hasTickSize = true;
        result.tickSize_ = value;
        return this;
      }
      public Builder ClearTickSize() {
        PrepareBuilder();
        result.hasTickSize = false;
        result.tickSize_ = 0UL;
        return this;
      }
      
      public bool HasMinUnitPrice {
        get { return result.hasMinUnitPrice; }
      }
      public ulong MinUnitPrice {
        get { return result.MinUnitPrice; }
        set { SetMinUnitPrice(value); }
      }
      public Builder SetMinUnitPrice(ulong value) {
        PrepareBuilder();
        result.hasMinUnitPrice = true;
        result.minUnitPrice_ = value;
        return this;
      }
      public Builder ClearMinUnitPrice() {
        PrepareBuilder();
        result.hasMinUnitPrice = false;
        result.minUnitPrice_ = 0UL;
        return this;
      }
      
      public bool HasMaxUnitPrice {
        get { return result.hasMaxUnitPrice; }
      }
      public ulong MaxUnitPrice {
        get { return result.MaxUnitPrice; }
        set { SetMaxUnitPrice(value); }
      }
      public Builder SetMaxUnitPrice(ulong value) {
        PrepareBuilder();
        result.hasMaxUnitPrice = true;
        result.maxUnitPrice_ = value;
        return this;
      }
      public Builder ClearMaxUnitPrice() {
        PrepareBuilder();
        result.hasMaxUnitPrice = false;
        result.maxUnitPrice_ = 0UL;
        return this;
      }
      
      public bool HasMinTotalPrice {
        get { return result.hasMinTotalPrice; }
      }
      public ulong MinTotalPrice {
        get { return result.MinTotalPrice; }
        set { SetMinTotalPrice(value); }
      }
      public Builder SetMinTotalPrice(ulong value) {
        PrepareBuilder();
        result.hasMinTotalPrice = true;
        result.minTotalPrice_ = value;
        return this;
      }
      public Builder ClearMinTotalPrice() {
        PrepareBuilder();
        result.hasMinTotalPrice = false;
        result.minTotalPrice_ = 0UL;
        return this;
      }
      
      public bool HasMaxTotalPrice {
        get { return result.hasMaxTotalPrice; }
      }
      public ulong MaxTotalPrice {
        get { return result.MaxTotalPrice; }
        set { SetMaxTotalPrice(value); }
      }
      public Builder SetMaxTotalPrice(ulong value) {
        PrepareBuilder();
        result.hasMaxTotalPrice = true;
        result.maxTotalPrice_ = value;
        return this;
      }
      public Builder ClearMaxTotalPrice() {
        PrepareBuilder();
        result.hasMaxTotalPrice = false;
        result.maxTotalPrice_ = 0UL;
        return this;
      }
    }
    static CurrencyConfig() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SpecialistConfig : pb::GeneratedMessage<SpecialistConfig, SpecialistConfig.Builder> {
    private SpecialistConfig() { }
    private static readonly SpecialistConfig defaultInstance = new SpecialistConfig().MakeReadOnly();
    private static readonly string[] _specialistConfigFieldNames = new string[] { "anti_sniping_extension_delay", "auction_durations", "auction_start_delays", "currency_config", "current_unit_price_rule", "fill_or_kill_rule", "max_items_amount", "maximum_unit_price_rule", "reserved_unit_price_rule", "specialist", "starting_unit_price_rule", "trade_now_unit_price_rule" };
    private static readonly uint[] _specialistConfigFieldTags = new uint[] { 32, 18, 26, 90, 72, 96, 40, 80, 56, 8, 48, 64 };
    public static SpecialistConfig DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SpecialistConfig DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SpecialistConfig ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_SpecialistConfig__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SpecialistConfig, SpecialistConfig.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_SpecialistConfig__FieldAccessorTable; }
    }
    
    public const int SpecialistFieldNumber = 1;
    private bool hasSpecialist;
    private int specialist_;
    public bool HasSpecialist {
      get { return hasSpecialist; }
    }
    public int Specialist {
      get { return specialist_; }
    }
    
    public const int AuctionDurationsFieldNumber = 2;
    private int auctionDurationsMemoizedSerializedSize;
    private pbc::PopsicleList<ulong> auctionDurations_ = new pbc::PopsicleList<ulong>();
    public scg::IList<ulong> AuctionDurationsList {
      get { return pbc::Lists.AsReadOnly(auctionDurations_); }
    }
    public int AuctionDurationsCount {
      get { return auctionDurations_.Count; }
    }
    public ulong GetAuctionDurations(int index) {
      return auctionDurations_[index];
    }
    
    public const int AuctionStartDelaysFieldNumber = 3;
    private int auctionStartDelaysMemoizedSerializedSize;
    private pbc::PopsicleList<ulong> auctionStartDelays_ = new pbc::PopsicleList<ulong>();
    public scg::IList<ulong> AuctionStartDelaysList {
      get { return pbc::Lists.AsReadOnly(auctionStartDelays_); }
    }
    public int AuctionStartDelaysCount {
      get { return auctionStartDelays_.Count; }
    }
    public ulong GetAuctionStartDelays(int index) {
      return auctionStartDelays_[index];
    }
    
    public const int AntiSnipingExtensionDelayFieldNumber = 4;
    private bool hasAntiSnipingExtensionDelay;
    private ulong antiSnipingExtensionDelay_;
    public bool HasAntiSnipingExtensionDelay {
      get { return hasAntiSnipingExtensionDelay; }
    }
    public ulong AntiSnipingExtensionDelay {
      get { return antiSnipingExtensionDelay_; }
    }
    
    public const int MaxItemsAmountFieldNumber = 5;
    private bool hasMaxItemsAmount;
    private ulong maxItemsAmount_;
    public bool HasMaxItemsAmount {
      get { return hasMaxItemsAmount; }
    }
    public ulong MaxItemsAmount {
      get { return maxItemsAmount_; }
    }
    
    public const int StartingUnitPriceRuleFieldNumber = 6;
    private bool hasStartingUnitPriceRule;
    private int startingUnitPriceRule_;
    public bool HasStartingUnitPriceRule {
      get { return hasStartingUnitPriceRule; }
    }
    public int StartingUnitPriceRule {
      get { return startingUnitPriceRule_; }
    }
    
    public const int ReservedUnitPriceRuleFieldNumber = 7;
    private bool hasReservedUnitPriceRule;
    private int reservedUnitPriceRule_;
    public bool HasReservedUnitPriceRule {
      get { return hasReservedUnitPriceRule; }
    }
    public int ReservedUnitPriceRule {
      get { return reservedUnitPriceRule_; }
    }
    
    public const int TradeNowUnitPriceRuleFieldNumber = 8;
    private bool hasTradeNowUnitPriceRule;
    private int tradeNowUnitPriceRule_;
    public bool HasTradeNowUnitPriceRule {
      get { return hasTradeNowUnitPriceRule; }
    }
    public int TradeNowUnitPriceRule {
      get { return tradeNowUnitPriceRule_; }
    }
    
    public const int CurrentUnitPriceRuleFieldNumber = 9;
    private bool hasCurrentUnitPriceRule;
    private int currentUnitPriceRule_;
    public bool HasCurrentUnitPriceRule {
      get { return hasCurrentUnitPriceRule; }
    }
    public int CurrentUnitPriceRule {
      get { return currentUnitPriceRule_; }
    }
    
    public const int MaximumUnitPriceRuleFieldNumber = 10;
    private bool hasMaximumUnitPriceRule;
    private int maximumUnitPriceRule_;
    public bool HasMaximumUnitPriceRule {
      get { return hasMaximumUnitPriceRule; }
    }
    public int MaximumUnitPriceRule {
      get { return maximumUnitPriceRule_; }
    }
    
    public const int CurrencyConfigFieldNumber = 11;
    private pbc::PopsicleList<global::bnet.protocol.exchange.CurrencyConfig> currencyConfig_ = new pbc::PopsicleList<global::bnet.protocol.exchange.CurrencyConfig>();
    public scg::IList<global::bnet.protocol.exchange.CurrencyConfig> CurrencyConfigList {
      get { return currencyConfig_; }
    }
    public int CurrencyConfigCount {
      get { return currencyConfig_.Count; }
    }
    public global::bnet.protocol.exchange.CurrencyConfig GetCurrencyConfig(int index) {
      return currencyConfig_[index];
    }
    
    public const int FillOrKillRuleFieldNumber = 12;
    private bool hasFillOrKillRule;
    private int fillOrKillRule_;
    public bool HasFillOrKillRule {
      get { return hasFillOrKillRule; }
    }
    public int FillOrKillRule {
      get { return fillOrKillRule_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSpecialist) return false;
        foreach (global::bnet.protocol.exchange.CurrencyConfig element in CurrencyConfigList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _specialistConfigFieldNames;
      if (hasSpecialist) {
        output.WriteInt32(1, field_names[9], Specialist);
      }
      if (auctionDurations_.Count > 0) {
        output.WritePackedUInt64Array(2, field_names[1], auctionDurationsMemoizedSerializedSize, auctionDurations_);
      }
      if (auctionStartDelays_.Count > 0) {
        output.WritePackedUInt64Array(3, field_names[2], auctionStartDelaysMemoizedSerializedSize, auctionStartDelays_);
      }
      if (hasAntiSnipingExtensionDelay) {
        output.WriteUInt64(4, field_names[0], AntiSnipingExtensionDelay);
      }
      if (hasMaxItemsAmount) {
        output.WriteUInt64(5, field_names[6], MaxItemsAmount);
      }
      if (hasStartingUnitPriceRule) {
        output.WriteInt32(6, field_names[10], StartingUnitPriceRule);
      }
      if (hasReservedUnitPriceRule) {
        output.WriteInt32(7, field_names[8], ReservedUnitPriceRule);
      }
      if (hasTradeNowUnitPriceRule) {
        output.WriteInt32(8, field_names[11], TradeNowUnitPriceRule);
      }
      if (hasCurrentUnitPriceRule) {
        output.WriteInt32(9, field_names[4], CurrentUnitPriceRule);
      }
      if (hasMaximumUnitPriceRule) {
        output.WriteInt32(10, field_names[7], MaximumUnitPriceRule);
      }
      if (currencyConfig_.Count > 0) {
        output.WriteMessageArray(11, field_names[3], currencyConfig_);
      }
      if (hasFillOrKillRule) {
        output.WriteInt32(12, field_names[5], FillOrKillRule);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSpecialist) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Specialist);
        }
        {
          int dataSize = 0;
          foreach (ulong element in AuctionDurationsList) {
            dataSize += pb::CodedOutputStream.ComputeUInt64SizeNoTag(element);
          }
          size += dataSize;
          if (auctionDurations_.Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
          }
          auctionDurationsMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          foreach (ulong element in AuctionStartDelaysList) {
            dataSize += pb::CodedOutputStream.ComputeUInt64SizeNoTag(element);
          }
          size += dataSize;
          if (auctionStartDelays_.Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
          }
          auctionStartDelaysMemoizedSerializedSize = dataSize;
        }
        if (hasAntiSnipingExtensionDelay) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, AntiSnipingExtensionDelay);
        }
        if (hasMaxItemsAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(5, MaxItemsAmount);
        }
        if (hasStartingUnitPriceRule) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, StartingUnitPriceRule);
        }
        if (hasReservedUnitPriceRule) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, ReservedUnitPriceRule);
        }
        if (hasTradeNowUnitPriceRule) {
          size += pb::CodedOutputStream.ComputeInt32Size(8, TradeNowUnitPriceRule);
        }
        if (hasCurrentUnitPriceRule) {
          size += pb::CodedOutputStream.ComputeInt32Size(9, CurrentUnitPriceRule);
        }
        if (hasMaximumUnitPriceRule) {
          size += pb::CodedOutputStream.ComputeInt32Size(10, MaximumUnitPriceRule);
        }
        foreach (global::bnet.protocol.exchange.CurrencyConfig element in CurrencyConfigList) {
          size += pb::CodedOutputStream.ComputeMessageSize(11, element);
        }
        if (hasFillOrKillRule) {
          size += pb::CodedOutputStream.ComputeInt32Size(12, FillOrKillRule);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SpecialistConfig ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SpecialistConfig ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SpecialistConfig ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SpecialistConfig ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SpecialistConfig ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SpecialistConfig ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SpecialistConfig ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SpecialistConfig ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SpecialistConfig ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SpecialistConfig ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SpecialistConfig MakeReadOnly() {
      auctionDurations_.MakeReadOnly();
      auctionStartDelays_.MakeReadOnly();
      currencyConfig_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SpecialistConfig prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SpecialistConfig, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SpecialistConfig cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SpecialistConfig result;
      
      private SpecialistConfig PrepareBuilder() {
        if (resultIsReadOnly) {
          SpecialistConfig original = result;
          result = new SpecialistConfig();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SpecialistConfig MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.SpecialistConfig.Descriptor; }
      }
      
      public override SpecialistConfig DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.SpecialistConfig.DefaultInstance; }
      }
      
      public override SpecialistConfig BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SpecialistConfig) {
          return MergeFrom((SpecialistConfig) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SpecialistConfig other) {
        if (other == global::bnet.protocol.exchange.SpecialistConfig.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSpecialist) {
          Specialist = other.Specialist;
        }
        if (other.auctionDurations_.Count != 0) {
          result.auctionDurations_.Add(other.auctionDurations_);
        }
        if (other.auctionStartDelays_.Count != 0) {
          result.auctionStartDelays_.Add(other.auctionStartDelays_);
        }
        if (other.HasAntiSnipingExtensionDelay) {
          AntiSnipingExtensionDelay = other.AntiSnipingExtensionDelay;
        }
        if (other.HasMaxItemsAmount) {
          MaxItemsAmount = other.MaxItemsAmount;
        }
        if (other.HasStartingUnitPriceRule) {
          StartingUnitPriceRule = other.StartingUnitPriceRule;
        }
        if (other.HasReservedUnitPriceRule) {
          ReservedUnitPriceRule = other.ReservedUnitPriceRule;
        }
        if (other.HasTradeNowUnitPriceRule) {
          TradeNowUnitPriceRule = other.TradeNowUnitPriceRule;
        }
        if (other.HasCurrentUnitPriceRule) {
          CurrentUnitPriceRule = other.CurrentUnitPriceRule;
        }
        if (other.HasMaximumUnitPriceRule) {
          MaximumUnitPriceRule = other.MaximumUnitPriceRule;
        }
        if (other.currencyConfig_.Count != 0) {
          result.currencyConfig_.Add(other.currencyConfig_);
        }
        if (other.HasFillOrKillRule) {
          FillOrKillRule = other.FillOrKillRule;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_specialistConfigFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _specialistConfigFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSpecialist = input.ReadInt32(ref result.specialist_);
              break;
            }
            case 18:
            case 16: {
              input.ReadUInt64Array(tag, field_name, result.auctionDurations_);
              break;
            }
            case 26:
            case 24: {
              input.ReadUInt64Array(tag, field_name, result.auctionStartDelays_);
              break;
            }
            case 32: {
              result.hasAntiSnipingExtensionDelay = input.ReadUInt64(ref result.antiSnipingExtensionDelay_);
              break;
            }
            case 40: {
              result.hasMaxItemsAmount = input.ReadUInt64(ref result.maxItemsAmount_);
              break;
            }
            case 48: {
              result.hasStartingUnitPriceRule = input.ReadInt32(ref result.startingUnitPriceRule_);
              break;
            }
            case 56: {
              result.hasReservedUnitPriceRule = input.ReadInt32(ref result.reservedUnitPriceRule_);
              break;
            }
            case 64: {
              result.hasTradeNowUnitPriceRule = input.ReadInt32(ref result.tradeNowUnitPriceRule_);
              break;
            }
            case 72: {
              result.hasCurrentUnitPriceRule = input.ReadInt32(ref result.currentUnitPriceRule_);
              break;
            }
            case 80: {
              result.hasMaximumUnitPriceRule = input.ReadInt32(ref result.maximumUnitPriceRule_);
              break;
            }
            case 90: {
              input.ReadMessageArray(tag, field_name, result.currencyConfig_, global::bnet.protocol.exchange.CurrencyConfig.DefaultInstance, extensionRegistry);
              break;
            }
            case 96: {
              result.hasFillOrKillRule = input.ReadInt32(ref result.fillOrKillRule_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSpecialist {
        get { return result.hasSpecialist; }
      }
      public int Specialist {
        get { return result.Specialist; }
        set { SetSpecialist(value); }
      }
      public Builder SetSpecialist(int value) {
        PrepareBuilder();
        result.hasSpecialist = true;
        result.specialist_ = value;
        return this;
      }
      public Builder ClearSpecialist() {
        PrepareBuilder();
        result.hasSpecialist = false;
        result.specialist_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<ulong> AuctionDurationsList {
        get { return PrepareBuilder().auctionDurations_; }
      }
      public int AuctionDurationsCount {
        get { return result.AuctionDurationsCount; }
      }
      public ulong GetAuctionDurations(int index) {
        return result.GetAuctionDurations(index);
      }
      public Builder SetAuctionDurations(int index, ulong value) {
        PrepareBuilder();
        result.auctionDurations_[index] = value;
        return this;
      }
      public Builder AddAuctionDurations(ulong value) {
        PrepareBuilder();
        result.auctionDurations_.Add(value);
        return this;
      }
      public Builder AddRangeAuctionDurations(scg::IEnumerable<ulong> values) {
        PrepareBuilder();
        result.auctionDurations_.Add(values);
        return this;
      }
      public Builder ClearAuctionDurations() {
        PrepareBuilder();
        result.auctionDurations_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<ulong> AuctionStartDelaysList {
        get { return PrepareBuilder().auctionStartDelays_; }
      }
      public int AuctionStartDelaysCount {
        get { return result.AuctionStartDelaysCount; }
      }
      public ulong GetAuctionStartDelays(int index) {
        return result.GetAuctionStartDelays(index);
      }
      public Builder SetAuctionStartDelays(int index, ulong value) {
        PrepareBuilder();
        result.auctionStartDelays_[index] = value;
        return this;
      }
      public Builder AddAuctionStartDelays(ulong value) {
        PrepareBuilder();
        result.auctionStartDelays_.Add(value);
        return this;
      }
      public Builder AddRangeAuctionStartDelays(scg::IEnumerable<ulong> values) {
        PrepareBuilder();
        result.auctionStartDelays_.Add(values);
        return this;
      }
      public Builder ClearAuctionStartDelays() {
        PrepareBuilder();
        result.auctionStartDelays_.Clear();
        return this;
      }
      
      public bool HasAntiSnipingExtensionDelay {
        get { return result.hasAntiSnipingExtensionDelay; }
      }
      public ulong AntiSnipingExtensionDelay {
        get { return result.AntiSnipingExtensionDelay; }
        set { SetAntiSnipingExtensionDelay(value); }
      }
      public Builder SetAntiSnipingExtensionDelay(ulong value) {
        PrepareBuilder();
        result.hasAntiSnipingExtensionDelay = true;
        result.antiSnipingExtensionDelay_ = value;
        return this;
      }
      public Builder ClearAntiSnipingExtensionDelay() {
        PrepareBuilder();
        result.hasAntiSnipingExtensionDelay = false;
        result.antiSnipingExtensionDelay_ = 0UL;
        return this;
      }
      
      public bool HasMaxItemsAmount {
        get { return result.hasMaxItemsAmount; }
      }
      public ulong MaxItemsAmount {
        get { return result.MaxItemsAmount; }
        set { SetMaxItemsAmount(value); }
      }
      public Builder SetMaxItemsAmount(ulong value) {
        PrepareBuilder();
        result.hasMaxItemsAmount = true;
        result.maxItemsAmount_ = value;
        return this;
      }
      public Builder ClearMaxItemsAmount() {
        PrepareBuilder();
        result.hasMaxItemsAmount = false;
        result.maxItemsAmount_ = 0UL;
        return this;
      }
      
      public bool HasStartingUnitPriceRule {
        get { return result.hasStartingUnitPriceRule; }
      }
      public int StartingUnitPriceRule {
        get { return result.StartingUnitPriceRule; }
        set { SetStartingUnitPriceRule(value); }
      }
      public Builder SetStartingUnitPriceRule(int value) {
        PrepareBuilder();
        result.hasStartingUnitPriceRule = true;
        result.startingUnitPriceRule_ = value;
        return this;
      }
      public Builder ClearStartingUnitPriceRule() {
        PrepareBuilder();
        result.hasStartingUnitPriceRule = false;
        result.startingUnitPriceRule_ = 0;
        return this;
      }
      
      public bool HasReservedUnitPriceRule {
        get { return result.hasReservedUnitPriceRule; }
      }
      public int ReservedUnitPriceRule {
        get { return result.ReservedUnitPriceRule; }
        set { SetReservedUnitPriceRule(value); }
      }
      public Builder SetReservedUnitPriceRule(int value) {
        PrepareBuilder();
        result.hasReservedUnitPriceRule = true;
        result.reservedUnitPriceRule_ = value;
        return this;
      }
      public Builder ClearReservedUnitPriceRule() {
        PrepareBuilder();
        result.hasReservedUnitPriceRule = false;
        result.reservedUnitPriceRule_ = 0;
        return this;
      }
      
      public bool HasTradeNowUnitPriceRule {
        get { return result.hasTradeNowUnitPriceRule; }
      }
      public int TradeNowUnitPriceRule {
        get { return result.TradeNowUnitPriceRule; }
        set { SetTradeNowUnitPriceRule(value); }
      }
      public Builder SetTradeNowUnitPriceRule(int value) {
        PrepareBuilder();
        result.hasTradeNowUnitPriceRule = true;
        result.tradeNowUnitPriceRule_ = value;
        return this;
      }
      public Builder ClearTradeNowUnitPriceRule() {
        PrepareBuilder();
        result.hasTradeNowUnitPriceRule = false;
        result.tradeNowUnitPriceRule_ = 0;
        return this;
      }
      
      public bool HasCurrentUnitPriceRule {
        get { return result.hasCurrentUnitPriceRule; }
      }
      public int CurrentUnitPriceRule {
        get { return result.CurrentUnitPriceRule; }
        set { SetCurrentUnitPriceRule(value); }
      }
      public Builder SetCurrentUnitPriceRule(int value) {
        PrepareBuilder();
        result.hasCurrentUnitPriceRule = true;
        result.currentUnitPriceRule_ = value;
        return this;
      }
      public Builder ClearCurrentUnitPriceRule() {
        PrepareBuilder();
        result.hasCurrentUnitPriceRule = false;
        result.currentUnitPriceRule_ = 0;
        return this;
      }
      
      public bool HasMaximumUnitPriceRule {
        get { return result.hasMaximumUnitPriceRule; }
      }
      public int MaximumUnitPriceRule {
        get { return result.MaximumUnitPriceRule; }
        set { SetMaximumUnitPriceRule(value); }
      }
      public Builder SetMaximumUnitPriceRule(int value) {
        PrepareBuilder();
        result.hasMaximumUnitPriceRule = true;
        result.maximumUnitPriceRule_ = value;
        return this;
      }
      public Builder ClearMaximumUnitPriceRule() {
        PrepareBuilder();
        result.hasMaximumUnitPriceRule = false;
        result.maximumUnitPriceRule_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.exchange.CurrencyConfig> CurrencyConfigList {
        get { return PrepareBuilder().currencyConfig_; }
      }
      public int CurrencyConfigCount {
        get { return result.CurrencyConfigCount; }
      }
      public global::bnet.protocol.exchange.CurrencyConfig GetCurrencyConfig(int index) {
        return result.GetCurrencyConfig(index);
      }
      public Builder SetCurrencyConfig(int index, global::bnet.protocol.exchange.CurrencyConfig value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.currencyConfig_[index] = value;
        return this;
      }
      public Builder SetCurrencyConfig(int index, global::bnet.protocol.exchange.CurrencyConfig.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.currencyConfig_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddCurrencyConfig(global::bnet.protocol.exchange.CurrencyConfig value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.currencyConfig_.Add(value);
        return this;
      }
      public Builder AddCurrencyConfig(global::bnet.protocol.exchange.CurrencyConfig.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.currencyConfig_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeCurrencyConfig(scg::IEnumerable<global::bnet.protocol.exchange.CurrencyConfig> values) {
        PrepareBuilder();
        result.currencyConfig_.Add(values);
        return this;
      }
      public Builder ClearCurrencyConfig() {
        PrepareBuilder();
        result.currencyConfig_.Clear();
        return this;
      }
      
      public bool HasFillOrKillRule {
        get { return result.hasFillOrKillRule; }
      }
      public int FillOrKillRule {
        get { return result.FillOrKillRule; }
        set { SetFillOrKillRule(value); }
      }
      public Builder SetFillOrKillRule(int value) {
        PrepareBuilder();
        result.hasFillOrKillRule = true;
        result.fillOrKillRule_ = value;
        return this;
      }
      public Builder ClearFillOrKillRule() {
        PrepareBuilder();
        result.hasFillOrKillRule = false;
        result.fillOrKillRule_ = 0;
        return this;
      }
    }
    static SpecialistConfig() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class FeeEstimationData : pb::GeneratedMessage<FeeEstimationData, FeeEstimationData.Builder> {
    private FeeEstimationData() { }
    private static readonly FeeEstimationData defaultInstance = new FeeEstimationData().MakeReadOnly();
    private static readonly string[] _feeEstimationDataFieldNames = new string[] { "billing_address", "bnet_account", "currency", "item_amount", "money_amount", "program", "source", "specialist" };
    private static readonly uint[] _feeEstimationDataFieldTags = new uint[] { 66, 58, 26, 48, 40, 13, 37, 16 };
    public static FeeEstimationData DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FeeEstimationData DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FeeEstimationData ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_FeeEstimationData__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FeeEstimationData, FeeEstimationData.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_FeeEstimationData__FieldAccessorTable; }
    }
    
    public const int ProgramFieldNumber = 1;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int SpecialistFieldNumber = 2;
    private bool hasSpecialist;
    private int specialist_;
    public bool HasSpecialist {
      get { return hasSpecialist; }
    }
    public int Specialist {
      get { return specialist_; }
    }
    
    public const int CurrencyFieldNumber = 3;
    private bool hasCurrency;
    private string currency_ = "";
    public bool HasCurrency {
      get { return hasCurrency; }
    }
    public string Currency {
      get { return currency_; }
    }
    
    public const int SourceFieldNumber = 4;
    private bool hasSource;
    private uint source_;
    public bool HasSource {
      get { return hasSource; }
    }
    public uint Source {
      get { return source_; }
    }
    
    public const int MoneyAmountFieldNumber = 5;
    private bool hasMoneyAmount;
    private ulong moneyAmount_;
    public bool HasMoneyAmount {
      get { return hasMoneyAmount; }
    }
    public ulong MoneyAmount {
      get { return moneyAmount_; }
    }
    
    public const int ItemAmountFieldNumber = 6;
    private bool hasItemAmount;
    private ulong itemAmount_;
    public bool HasItemAmount {
      get { return hasItemAmount; }
    }
    public ulong ItemAmount {
      get { return itemAmount_; }
    }
    
    public const int BnetAccountFieldNumber = 7;
    private bool hasBnetAccount;
    private global::bnet.protocol.EntityId bnetAccount_;
    public bool HasBnetAccount {
      get { return hasBnetAccount; }
    }
    public global::bnet.protocol.EntityId BnetAccount {
      get { return bnetAccount_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int BillingAddressFieldNumber = 8;
    private bool hasBillingAddress;
    private global::bnet.protocol.exchange.BillingAddress billingAddress_;
    public bool HasBillingAddress {
      get { return hasBillingAddress; }
    }
    public global::bnet.protocol.exchange.BillingAddress BillingAddress {
      get { return billingAddress_ ?? global::bnet.protocol.exchange.BillingAddress.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProgram) return false;
        if (!hasSpecialist) return false;
        if (!hasCurrency) return false;
        if (!hasSource) return false;
        if (!hasMoneyAmount) return false;
        if (!hasItemAmount) return false;
        if (HasBnetAccount) {
          if (!BnetAccount.IsInitialized) return false;
        }
        if (HasBillingAddress) {
          if (!BillingAddress.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _feeEstimationDataFieldNames;
      if (hasProgram) {
        output.WriteFixed32(1, field_names[5], Program);
      }
      if (hasSpecialist) {
        output.WriteInt32(2, field_names[7], Specialist);
      }
      if (hasCurrency) {
        output.WriteString(3, field_names[2], Currency);
      }
      if (hasSource) {
        output.WriteFixed32(4, field_names[6], Source);
      }
      if (hasMoneyAmount) {
        output.WriteUInt64(5, field_names[4], MoneyAmount);
      }
      if (hasItemAmount) {
        output.WriteUInt64(6, field_names[3], ItemAmount);
      }
      if (hasBnetAccount) {
        output.WriteMessage(7, field_names[1], BnetAccount);
      }
      if (hasBillingAddress) {
        output.WriteMessage(8, field_names[0], BillingAddress);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeFixed32Size(1, Program);
        }
        if (hasSpecialist) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Specialist);
        }
        if (hasCurrency) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Currency);
        }
        if (hasSource) {
          size += pb::CodedOutputStream.ComputeFixed32Size(4, Source);
        }
        if (hasMoneyAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(5, MoneyAmount);
        }
        if (hasItemAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(6, ItemAmount);
        }
        if (hasBnetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, BnetAccount);
        }
        if (hasBillingAddress) {
          size += pb::CodedOutputStream.ComputeMessageSize(8, BillingAddress);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static FeeEstimationData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FeeEstimationData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FeeEstimationData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FeeEstimationData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FeeEstimationData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FeeEstimationData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FeeEstimationData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FeeEstimationData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FeeEstimationData ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FeeEstimationData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FeeEstimationData MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FeeEstimationData prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<FeeEstimationData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FeeEstimationData cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FeeEstimationData result;
      
      private FeeEstimationData PrepareBuilder() {
        if (resultIsReadOnly) {
          FeeEstimationData original = result;
          result = new FeeEstimationData();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FeeEstimationData MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.FeeEstimationData.Descriptor; }
      }
      
      public override FeeEstimationData DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.FeeEstimationData.DefaultInstance; }
      }
      
      public override FeeEstimationData BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FeeEstimationData) {
          return MergeFrom((FeeEstimationData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FeeEstimationData other) {
        if (other == global::bnet.protocol.exchange.FeeEstimationData.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasSpecialist) {
          Specialist = other.Specialist;
        }
        if (other.HasCurrency) {
          Currency = other.Currency;
        }
        if (other.HasSource) {
          Source = other.Source;
        }
        if (other.HasMoneyAmount) {
          MoneyAmount = other.MoneyAmount;
        }
        if (other.HasItemAmount) {
          ItemAmount = other.ItemAmount;
        }
        if (other.HasBnetAccount) {
          MergeBnetAccount(other.BnetAccount);
        }
        if (other.HasBillingAddress) {
          MergeBillingAddress(other.BillingAddress);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_feeEstimationDataFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _feeEstimationDataFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 13: {
              result.hasProgram = input.ReadFixed32(ref result.program_);
              break;
            }
            case 16: {
              result.hasSpecialist = input.ReadInt32(ref result.specialist_);
              break;
            }
            case 26: {
              result.hasCurrency = input.ReadString(ref result.currency_);
              break;
            }
            case 37: {
              result.hasSource = input.ReadFixed32(ref result.source_);
              break;
            }
            case 40: {
              result.hasMoneyAmount = input.ReadUInt64(ref result.moneyAmount_);
              break;
            }
            case 48: {
              result.hasItemAmount = input.ReadUInt64(ref result.itemAmount_);
              break;
            }
            case 58: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasBnetAccount) {
                subBuilder.MergeFrom(BnetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BnetAccount = subBuilder.BuildPartial();
              break;
            }
            case 66: {
              global::bnet.protocol.exchange.BillingAddress.Builder subBuilder = global::bnet.protocol.exchange.BillingAddress.CreateBuilder();
              if (result.hasBillingAddress) {
                subBuilder.MergeFrom(BillingAddress);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BillingAddress = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public bool HasSpecialist {
        get { return result.hasSpecialist; }
      }
      public int Specialist {
        get { return result.Specialist; }
        set { SetSpecialist(value); }
      }
      public Builder SetSpecialist(int value) {
        PrepareBuilder();
        result.hasSpecialist = true;
        result.specialist_ = value;
        return this;
      }
      public Builder ClearSpecialist() {
        PrepareBuilder();
        result.hasSpecialist = false;
        result.specialist_ = 0;
        return this;
      }
      
      public bool HasCurrency {
        get { return result.hasCurrency; }
      }
      public string Currency {
        get { return result.Currency; }
        set { SetCurrency(value); }
      }
      public Builder SetCurrency(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurrency = true;
        result.currency_ = value;
        return this;
      }
      public Builder ClearCurrency() {
        PrepareBuilder();
        result.hasCurrency = false;
        result.currency_ = "";
        return this;
      }
      
      public bool HasSource {
        get { return result.hasSource; }
      }
      public uint Source {
        get { return result.Source; }
        set { SetSource(value); }
      }
      public Builder SetSource(uint value) {
        PrepareBuilder();
        result.hasSource = true;
        result.source_ = value;
        return this;
      }
      public Builder ClearSource() {
        PrepareBuilder();
        result.hasSource = false;
        result.source_ = 0;
        return this;
      }
      
      public bool HasMoneyAmount {
        get { return result.hasMoneyAmount; }
      }
      public ulong MoneyAmount {
        get { return result.MoneyAmount; }
        set { SetMoneyAmount(value); }
      }
      public Builder SetMoneyAmount(ulong value) {
        PrepareBuilder();
        result.hasMoneyAmount = true;
        result.moneyAmount_ = value;
        return this;
      }
      public Builder ClearMoneyAmount() {
        PrepareBuilder();
        result.hasMoneyAmount = false;
        result.moneyAmount_ = 0UL;
        return this;
      }
      
      public bool HasItemAmount {
        get { return result.hasItemAmount; }
      }
      public ulong ItemAmount {
        get { return result.ItemAmount; }
        set { SetItemAmount(value); }
      }
      public Builder SetItemAmount(ulong value) {
        PrepareBuilder();
        result.hasItemAmount = true;
        result.itemAmount_ = value;
        return this;
      }
      public Builder ClearItemAmount() {
        PrepareBuilder();
        result.hasItemAmount = false;
        result.itemAmount_ = 0UL;
        return this;
      }
      
      public bool HasBnetAccount {
       get { return result.hasBnetAccount; }
      }
      public global::bnet.protocol.EntityId BnetAccount {
        get { return result.BnetAccount; }
        set { SetBnetAccount(value); }
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = value;
        return this;
      }
      public Builder SetBnetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBnetAccount = true;
        result.bnetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBnetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBnetAccount &&
            result.bnetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.bnetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.bnetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.bnetAccount_ = value;
        }
        result.hasBnetAccount = true;
        return this;
      }
      public Builder ClearBnetAccount() {
        PrepareBuilder();
        result.hasBnetAccount = false;
        result.bnetAccount_ = null;
        return this;
      }
      
      public bool HasBillingAddress {
       get { return result.hasBillingAddress; }
      }
      public global::bnet.protocol.exchange.BillingAddress BillingAddress {
        get { return result.BillingAddress; }
        set { SetBillingAddress(value); }
      }
      public Builder SetBillingAddress(global::bnet.protocol.exchange.BillingAddress value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBillingAddress = true;
        result.billingAddress_ = value;
        return this;
      }
      public Builder SetBillingAddress(global::bnet.protocol.exchange.BillingAddress.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBillingAddress = true;
        result.billingAddress_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBillingAddress(global::bnet.protocol.exchange.BillingAddress value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBillingAddress &&
            result.billingAddress_ != global::bnet.protocol.exchange.BillingAddress.DefaultInstance) {
            result.billingAddress_ = global::bnet.protocol.exchange.BillingAddress.CreateBuilder(result.billingAddress_).MergeFrom(value).BuildPartial();
        } else {
          result.billingAddress_ = value;
        }
        result.hasBillingAddress = true;
        return this;
      }
      public Builder ClearBillingAddress() {
        PrepareBuilder();
        result.hasBillingAddress = false;
        result.billingAddress_ = null;
        return this;
      }
    }
    static FeeEstimationData() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class FeeDetail : pb::GeneratedMessage<FeeDetail, FeeDetail.Builder> {
    private FeeDetail() { }
    private static readonly FeeDetail defaultInstance = new FeeDetail().MakeReadOnly();
    private static readonly string[] _feeDetailFieldNames = new string[] { "coupon_book_id", "coupon_description", "coupon_type", "discount_amount", "fee_amount", "fee_auth_detail_id", "fee_description", "fee_group_id", "fee_group_name", "fee_id", "flat_fee_amount", "is_tax", "left_over_coupon_charge", "left_over_coupon_credit", "max_fee_amount", "rownum", "scaling_fee_rate" };
    private static readonly uint[] _feeDetailFieldTags = new uint[] { 104, 122, 112, 40, 32, 16, 90, 48, 58, 24, 64, 96, 136, 128, 80, 8, 77 };
    public static FeeDetail DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FeeDetail DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FeeDetail ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_FeeDetail__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FeeDetail, FeeDetail.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_FeeDetail__FieldAccessorTable; }
    }
    
    public const int RownumFieldNumber = 1;
    private bool hasRownum;
    private ulong rownum_;
    public bool HasRownum {
      get { return hasRownum; }
    }
    public ulong Rownum {
      get { return rownum_; }
    }
    
    public const int FeeAuthDetailIdFieldNumber = 2;
    private bool hasFeeAuthDetailId;
    private ulong feeAuthDetailId_;
    public bool HasFeeAuthDetailId {
      get { return hasFeeAuthDetailId; }
    }
    public ulong FeeAuthDetailId {
      get { return feeAuthDetailId_; }
    }
    
    public const int FeeIdFieldNumber = 3;
    private bool hasFeeId;
    private ulong feeId_;
    public bool HasFeeId {
      get { return hasFeeId; }
    }
    public ulong FeeId {
      get { return feeId_; }
    }
    
    public const int FeeAmountFieldNumber = 4;
    private bool hasFeeAmount;
    private ulong feeAmount_;
    public bool HasFeeAmount {
      get { return hasFeeAmount; }
    }
    public ulong FeeAmount {
      get { return feeAmount_; }
    }
    
    public const int DiscountAmountFieldNumber = 5;
    private bool hasDiscountAmount;
    private ulong discountAmount_;
    public bool HasDiscountAmount {
      get { return hasDiscountAmount; }
    }
    public ulong DiscountAmount {
      get { return discountAmount_; }
    }
    
    public const int FeeGroupIdFieldNumber = 6;
    private bool hasFeeGroupId;
    private ulong feeGroupId_;
    public bool HasFeeGroupId {
      get { return hasFeeGroupId; }
    }
    public ulong FeeGroupId {
      get { return feeGroupId_; }
    }
    
    public const int FeeGroupNameFieldNumber = 7;
    private bool hasFeeGroupName;
    private string feeGroupName_ = "";
    public bool HasFeeGroupName {
      get { return hasFeeGroupName; }
    }
    public string FeeGroupName {
      get { return feeGroupName_; }
    }
    
    public const int FlatFeeAmountFieldNumber = 8;
    private bool hasFlatFeeAmount;
    private ulong flatFeeAmount_;
    public bool HasFlatFeeAmount {
      get { return hasFlatFeeAmount; }
    }
    public ulong FlatFeeAmount {
      get { return flatFeeAmount_; }
    }
    
    public const int ScalingFeeRateFieldNumber = 9;
    private bool hasScalingFeeRate;
    private float scalingFeeRate_;
    public bool HasScalingFeeRate {
      get { return hasScalingFeeRate; }
    }
    public float ScalingFeeRate {
      get { return scalingFeeRate_; }
    }
    
    public const int MaxFeeAmountFieldNumber = 10;
    private bool hasMaxFeeAmount;
    private ulong maxFeeAmount_;
    public bool HasMaxFeeAmount {
      get { return hasMaxFeeAmount; }
    }
    public ulong MaxFeeAmount {
      get { return maxFeeAmount_; }
    }
    
    public const int FeeDescriptionFieldNumber = 11;
    private bool hasFeeDescription;
    private string feeDescription_ = "";
    public bool HasFeeDescription {
      get { return hasFeeDescription; }
    }
    public string FeeDescription {
      get { return feeDescription_; }
    }
    
    public const int IsTaxFieldNumber = 12;
    private bool hasIsTax;
    private bool isTax_;
    public bool HasIsTax {
      get { return hasIsTax; }
    }
    public bool IsTax {
      get { return isTax_; }
    }
    
    public const int CouponBookIdFieldNumber = 13;
    private bool hasCouponBookId;
    private ulong couponBookId_;
    public bool HasCouponBookId {
      get { return hasCouponBookId; }
    }
    public ulong CouponBookId {
      get { return couponBookId_; }
    }
    
    public const int CouponTypeFieldNumber = 14;
    private bool hasCouponType;
    private ulong couponType_;
    public bool HasCouponType {
      get { return hasCouponType; }
    }
    public ulong CouponType {
      get { return couponType_; }
    }
    
    public const int CouponDescriptionFieldNumber = 15;
    private bool hasCouponDescription;
    private string couponDescription_ = "";
    public bool HasCouponDescription {
      get { return hasCouponDescription; }
    }
    public string CouponDescription {
      get { return couponDescription_; }
    }
    
    public const int LeftOverCouponCreditFieldNumber = 16;
    private bool hasLeftOverCouponCredit;
    private ulong leftOverCouponCredit_;
    public bool HasLeftOverCouponCredit {
      get { return hasLeftOverCouponCredit; }
    }
    public ulong LeftOverCouponCredit {
      get { return leftOverCouponCredit_; }
    }
    
    public const int LeftOverCouponChargeFieldNumber = 17;
    private bool hasLeftOverCouponCharge;
    private ulong leftOverCouponCharge_;
    public bool HasLeftOverCouponCharge {
      get { return hasLeftOverCouponCharge; }
    }
    public ulong LeftOverCouponCharge {
      get { return leftOverCouponCharge_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRownum) return false;
        if (!hasFeeAuthDetailId) return false;
        if (!hasIsTax) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _feeDetailFieldNames;
      if (hasRownum) {
        output.WriteUInt64(1, field_names[15], Rownum);
      }
      if (hasFeeAuthDetailId) {
        output.WriteUInt64(2, field_names[5], FeeAuthDetailId);
      }
      if (hasFeeId) {
        output.WriteUInt64(3, field_names[9], FeeId);
      }
      if (hasFeeAmount) {
        output.WriteUInt64(4, field_names[4], FeeAmount);
      }
      if (hasDiscountAmount) {
        output.WriteUInt64(5, field_names[3], DiscountAmount);
      }
      if (hasFeeGroupId) {
        output.WriteUInt64(6, field_names[7], FeeGroupId);
      }
      if (hasFeeGroupName) {
        output.WriteString(7, field_names[8], FeeGroupName);
      }
      if (hasFlatFeeAmount) {
        output.WriteUInt64(8, field_names[10], FlatFeeAmount);
      }
      if (hasScalingFeeRate) {
        output.WriteFloat(9, field_names[16], ScalingFeeRate);
      }
      if (hasMaxFeeAmount) {
        output.WriteUInt64(10, field_names[14], MaxFeeAmount);
      }
      if (hasFeeDescription) {
        output.WriteString(11, field_names[6], FeeDescription);
      }
      if (hasIsTax) {
        output.WriteBool(12, field_names[11], IsTax);
      }
      if (hasCouponBookId) {
        output.WriteUInt64(13, field_names[0], CouponBookId);
      }
      if (hasCouponType) {
        output.WriteUInt64(14, field_names[2], CouponType);
      }
      if (hasCouponDescription) {
        output.WriteString(15, field_names[1], CouponDescription);
      }
      if (hasLeftOverCouponCredit) {
        output.WriteUInt64(16, field_names[13], LeftOverCouponCredit);
      }
      if (hasLeftOverCouponCharge) {
        output.WriteUInt64(17, field_names[12], LeftOverCouponCharge);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRownum) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, Rownum);
        }
        if (hasFeeAuthDetailId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, FeeAuthDetailId);
        }
        if (hasFeeId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, FeeId);
        }
        if (hasFeeAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, FeeAmount);
        }
        if (hasDiscountAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(5, DiscountAmount);
        }
        if (hasFeeGroupId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(6, FeeGroupId);
        }
        if (hasFeeGroupName) {
          size += pb::CodedOutputStream.ComputeStringSize(7, FeeGroupName);
        }
        if (hasFlatFeeAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(8, FlatFeeAmount);
        }
        if (hasScalingFeeRate) {
          size += pb::CodedOutputStream.ComputeFloatSize(9, ScalingFeeRate);
        }
        if (hasMaxFeeAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(10, MaxFeeAmount);
        }
        if (hasFeeDescription) {
          size += pb::CodedOutputStream.ComputeStringSize(11, FeeDescription);
        }
        if (hasIsTax) {
          size += pb::CodedOutputStream.ComputeBoolSize(12, IsTax);
        }
        if (hasCouponBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(13, CouponBookId);
        }
        if (hasCouponType) {
          size += pb::CodedOutputStream.ComputeUInt64Size(14, CouponType);
        }
        if (hasCouponDescription) {
          size += pb::CodedOutputStream.ComputeStringSize(15, CouponDescription);
        }
        if (hasLeftOverCouponCredit) {
          size += pb::CodedOutputStream.ComputeUInt64Size(16, LeftOverCouponCredit);
        }
        if (hasLeftOverCouponCharge) {
          size += pb::CodedOutputStream.ComputeUInt64Size(17, LeftOverCouponCharge);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static FeeDetail ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FeeDetail ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FeeDetail ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FeeDetail ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FeeDetail ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FeeDetail ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FeeDetail ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FeeDetail ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FeeDetail ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FeeDetail ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FeeDetail MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FeeDetail prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<FeeDetail, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FeeDetail cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FeeDetail result;
      
      private FeeDetail PrepareBuilder() {
        if (resultIsReadOnly) {
          FeeDetail original = result;
          result = new FeeDetail();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FeeDetail MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.FeeDetail.Descriptor; }
      }
      
      public override FeeDetail DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.FeeDetail.DefaultInstance; }
      }
      
      public override FeeDetail BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FeeDetail) {
          return MergeFrom((FeeDetail) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FeeDetail other) {
        if (other == global::bnet.protocol.exchange.FeeDetail.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRownum) {
          Rownum = other.Rownum;
        }
        if (other.HasFeeAuthDetailId) {
          FeeAuthDetailId = other.FeeAuthDetailId;
        }
        if (other.HasFeeId) {
          FeeId = other.FeeId;
        }
        if (other.HasFeeAmount) {
          FeeAmount = other.FeeAmount;
        }
        if (other.HasDiscountAmount) {
          DiscountAmount = other.DiscountAmount;
        }
        if (other.HasFeeGroupId) {
          FeeGroupId = other.FeeGroupId;
        }
        if (other.HasFeeGroupName) {
          FeeGroupName = other.FeeGroupName;
        }
        if (other.HasFlatFeeAmount) {
          FlatFeeAmount = other.FlatFeeAmount;
        }
        if (other.HasScalingFeeRate) {
          ScalingFeeRate = other.ScalingFeeRate;
        }
        if (other.HasMaxFeeAmount) {
          MaxFeeAmount = other.MaxFeeAmount;
        }
        if (other.HasFeeDescription) {
          FeeDescription = other.FeeDescription;
        }
        if (other.HasIsTax) {
          IsTax = other.IsTax;
        }
        if (other.HasCouponBookId) {
          CouponBookId = other.CouponBookId;
        }
        if (other.HasCouponType) {
          CouponType = other.CouponType;
        }
        if (other.HasCouponDescription) {
          CouponDescription = other.CouponDescription;
        }
        if (other.HasLeftOverCouponCredit) {
          LeftOverCouponCredit = other.LeftOverCouponCredit;
        }
        if (other.HasLeftOverCouponCharge) {
          LeftOverCouponCharge = other.LeftOverCouponCharge;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_feeDetailFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _feeDetailFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasRownum = input.ReadUInt64(ref result.rownum_);
              break;
            }
            case 16: {
              result.hasFeeAuthDetailId = input.ReadUInt64(ref result.feeAuthDetailId_);
              break;
            }
            case 24: {
              result.hasFeeId = input.ReadUInt64(ref result.feeId_);
              break;
            }
            case 32: {
              result.hasFeeAmount = input.ReadUInt64(ref result.feeAmount_);
              break;
            }
            case 40: {
              result.hasDiscountAmount = input.ReadUInt64(ref result.discountAmount_);
              break;
            }
            case 48: {
              result.hasFeeGroupId = input.ReadUInt64(ref result.feeGroupId_);
              break;
            }
            case 58: {
              result.hasFeeGroupName = input.ReadString(ref result.feeGroupName_);
              break;
            }
            case 64: {
              result.hasFlatFeeAmount = input.ReadUInt64(ref result.flatFeeAmount_);
              break;
            }
            case 77: {
              result.hasScalingFeeRate = input.ReadFloat(ref result.scalingFeeRate_);
              break;
            }
            case 80: {
              result.hasMaxFeeAmount = input.ReadUInt64(ref result.maxFeeAmount_);
              break;
            }
            case 90: {
              result.hasFeeDescription = input.ReadString(ref result.feeDescription_);
              break;
            }
            case 96: {
              result.hasIsTax = input.ReadBool(ref result.isTax_);
              break;
            }
            case 104: {
              result.hasCouponBookId = input.ReadUInt64(ref result.couponBookId_);
              break;
            }
            case 112: {
              result.hasCouponType = input.ReadUInt64(ref result.couponType_);
              break;
            }
            case 122: {
              result.hasCouponDescription = input.ReadString(ref result.couponDescription_);
              break;
            }
            case 128: {
              result.hasLeftOverCouponCredit = input.ReadUInt64(ref result.leftOverCouponCredit_);
              break;
            }
            case 136: {
              result.hasLeftOverCouponCharge = input.ReadUInt64(ref result.leftOverCouponCharge_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRownum {
        get { return result.hasRownum; }
      }
      public ulong Rownum {
        get { return result.Rownum; }
        set { SetRownum(value); }
      }
      public Builder SetRownum(ulong value) {
        PrepareBuilder();
        result.hasRownum = true;
        result.rownum_ = value;
        return this;
      }
      public Builder ClearRownum() {
        PrepareBuilder();
        result.hasRownum = false;
        result.rownum_ = 0UL;
        return this;
      }
      
      public bool HasFeeAuthDetailId {
        get { return result.hasFeeAuthDetailId; }
      }
      public ulong FeeAuthDetailId {
        get { return result.FeeAuthDetailId; }
        set { SetFeeAuthDetailId(value); }
      }
      public Builder SetFeeAuthDetailId(ulong value) {
        PrepareBuilder();
        result.hasFeeAuthDetailId = true;
        result.feeAuthDetailId_ = value;
        return this;
      }
      public Builder ClearFeeAuthDetailId() {
        PrepareBuilder();
        result.hasFeeAuthDetailId = false;
        result.feeAuthDetailId_ = 0UL;
        return this;
      }
      
      public bool HasFeeId {
        get { return result.hasFeeId; }
      }
      public ulong FeeId {
        get { return result.FeeId; }
        set { SetFeeId(value); }
      }
      public Builder SetFeeId(ulong value) {
        PrepareBuilder();
        result.hasFeeId = true;
        result.feeId_ = value;
        return this;
      }
      public Builder ClearFeeId() {
        PrepareBuilder();
        result.hasFeeId = false;
        result.feeId_ = 0UL;
        return this;
      }
      
      public bool HasFeeAmount {
        get { return result.hasFeeAmount; }
      }
      public ulong FeeAmount {
        get { return result.FeeAmount; }
        set { SetFeeAmount(value); }
      }
      public Builder SetFeeAmount(ulong value) {
        PrepareBuilder();
        result.hasFeeAmount = true;
        result.feeAmount_ = value;
        return this;
      }
      public Builder ClearFeeAmount() {
        PrepareBuilder();
        result.hasFeeAmount = false;
        result.feeAmount_ = 0UL;
        return this;
      }
      
      public bool HasDiscountAmount {
        get { return result.hasDiscountAmount; }
      }
      public ulong DiscountAmount {
        get { return result.DiscountAmount; }
        set { SetDiscountAmount(value); }
      }
      public Builder SetDiscountAmount(ulong value) {
        PrepareBuilder();
        result.hasDiscountAmount = true;
        result.discountAmount_ = value;
        return this;
      }
      public Builder ClearDiscountAmount() {
        PrepareBuilder();
        result.hasDiscountAmount = false;
        result.discountAmount_ = 0UL;
        return this;
      }
      
      public bool HasFeeGroupId {
        get { return result.hasFeeGroupId; }
      }
      public ulong FeeGroupId {
        get { return result.FeeGroupId; }
        set { SetFeeGroupId(value); }
      }
      public Builder SetFeeGroupId(ulong value) {
        PrepareBuilder();
        result.hasFeeGroupId = true;
        result.feeGroupId_ = value;
        return this;
      }
      public Builder ClearFeeGroupId() {
        PrepareBuilder();
        result.hasFeeGroupId = false;
        result.feeGroupId_ = 0UL;
        return this;
      }
      
      public bool HasFeeGroupName {
        get { return result.hasFeeGroupName; }
      }
      public string FeeGroupName {
        get { return result.FeeGroupName; }
        set { SetFeeGroupName(value); }
      }
      public Builder SetFeeGroupName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFeeGroupName = true;
        result.feeGroupName_ = value;
        return this;
      }
      public Builder ClearFeeGroupName() {
        PrepareBuilder();
        result.hasFeeGroupName = false;
        result.feeGroupName_ = "";
        return this;
      }
      
      public bool HasFlatFeeAmount {
        get { return result.hasFlatFeeAmount; }
      }
      public ulong FlatFeeAmount {
        get { return result.FlatFeeAmount; }
        set { SetFlatFeeAmount(value); }
      }
      public Builder SetFlatFeeAmount(ulong value) {
        PrepareBuilder();
        result.hasFlatFeeAmount = true;
        result.flatFeeAmount_ = value;
        return this;
      }
      public Builder ClearFlatFeeAmount() {
        PrepareBuilder();
        result.hasFlatFeeAmount = false;
        result.flatFeeAmount_ = 0UL;
        return this;
      }
      
      public bool HasScalingFeeRate {
        get { return result.hasScalingFeeRate; }
      }
      public float ScalingFeeRate {
        get { return result.ScalingFeeRate; }
        set { SetScalingFeeRate(value); }
      }
      public Builder SetScalingFeeRate(float value) {
        PrepareBuilder();
        result.hasScalingFeeRate = true;
        result.scalingFeeRate_ = value;
        return this;
      }
      public Builder ClearScalingFeeRate() {
        PrepareBuilder();
        result.hasScalingFeeRate = false;
        result.scalingFeeRate_ = 0F;
        return this;
      }
      
      public bool HasMaxFeeAmount {
        get { return result.hasMaxFeeAmount; }
      }
      public ulong MaxFeeAmount {
        get { return result.MaxFeeAmount; }
        set { SetMaxFeeAmount(value); }
      }
      public Builder SetMaxFeeAmount(ulong value) {
        PrepareBuilder();
        result.hasMaxFeeAmount = true;
        result.maxFeeAmount_ = value;
        return this;
      }
      public Builder ClearMaxFeeAmount() {
        PrepareBuilder();
        result.hasMaxFeeAmount = false;
        result.maxFeeAmount_ = 0UL;
        return this;
      }
      
      public bool HasFeeDescription {
        get { return result.hasFeeDescription; }
      }
      public string FeeDescription {
        get { return result.FeeDescription; }
        set { SetFeeDescription(value); }
      }
      public Builder SetFeeDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFeeDescription = true;
        result.feeDescription_ = value;
        return this;
      }
      public Builder ClearFeeDescription() {
        PrepareBuilder();
        result.hasFeeDescription = false;
        result.feeDescription_ = "";
        return this;
      }
      
      public bool HasIsTax {
        get { return result.hasIsTax; }
      }
      public bool IsTax {
        get { return result.IsTax; }
        set { SetIsTax(value); }
      }
      public Builder SetIsTax(bool value) {
        PrepareBuilder();
        result.hasIsTax = true;
        result.isTax_ = value;
        return this;
      }
      public Builder ClearIsTax() {
        PrepareBuilder();
        result.hasIsTax = false;
        result.isTax_ = false;
        return this;
      }
      
      public bool HasCouponBookId {
        get { return result.hasCouponBookId; }
      }
      public ulong CouponBookId {
        get { return result.CouponBookId; }
        set { SetCouponBookId(value); }
      }
      public Builder SetCouponBookId(ulong value) {
        PrepareBuilder();
        result.hasCouponBookId = true;
        result.couponBookId_ = value;
        return this;
      }
      public Builder ClearCouponBookId() {
        PrepareBuilder();
        result.hasCouponBookId = false;
        result.couponBookId_ = 0UL;
        return this;
      }
      
      public bool HasCouponType {
        get { return result.hasCouponType; }
      }
      public ulong CouponType {
        get { return result.CouponType; }
        set { SetCouponType(value); }
      }
      public Builder SetCouponType(ulong value) {
        PrepareBuilder();
        result.hasCouponType = true;
        result.couponType_ = value;
        return this;
      }
      public Builder ClearCouponType() {
        PrepareBuilder();
        result.hasCouponType = false;
        result.couponType_ = 0UL;
        return this;
      }
      
      public bool HasCouponDescription {
        get { return result.hasCouponDescription; }
      }
      public string CouponDescription {
        get { return result.CouponDescription; }
        set { SetCouponDescription(value); }
      }
      public Builder SetCouponDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCouponDescription = true;
        result.couponDescription_ = value;
        return this;
      }
      public Builder ClearCouponDescription() {
        PrepareBuilder();
        result.hasCouponDescription = false;
        result.couponDescription_ = "";
        return this;
      }
      
      public bool HasLeftOverCouponCredit {
        get { return result.hasLeftOverCouponCredit; }
      }
      public ulong LeftOverCouponCredit {
        get { return result.LeftOverCouponCredit; }
        set { SetLeftOverCouponCredit(value); }
      }
      public Builder SetLeftOverCouponCredit(ulong value) {
        PrepareBuilder();
        result.hasLeftOverCouponCredit = true;
        result.leftOverCouponCredit_ = value;
        return this;
      }
      public Builder ClearLeftOverCouponCredit() {
        PrepareBuilder();
        result.hasLeftOverCouponCredit = false;
        result.leftOverCouponCredit_ = 0UL;
        return this;
      }
      
      public bool HasLeftOverCouponCharge {
        get { return result.hasLeftOverCouponCharge; }
      }
      public ulong LeftOverCouponCharge {
        get { return result.LeftOverCouponCharge; }
        set { SetLeftOverCouponCharge(value); }
      }
      public Builder SetLeftOverCouponCharge(ulong value) {
        PrepareBuilder();
        result.hasLeftOverCouponCharge = true;
        result.leftOverCouponCharge_ = value;
        return this;
      }
      public Builder ClearLeftOverCouponCharge() {
        PrepareBuilder();
        result.hasLeftOverCouponCharge = false;
        result.leftOverCouponCharge_ = 0UL;
        return this;
      }
    }
    static FeeDetail() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class PriceDetail : pb::GeneratedMessage<PriceDetail, PriceDetail.Builder> {
    private PriceDetail() { }
    private static readonly PriceDetail defaultInstance = new PriceDetail().MakeReadOnly();
    private static readonly string[] _priceDetailFieldNames = new string[] { "amount", "trade_price" };
    private static readonly uint[] _priceDetailFieldTags = new uint[] { 16, 8 };
    public static PriceDetail DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PriceDetail DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PriceDetail ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_PriceDetail__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PriceDetail, PriceDetail.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_PriceDetail__FieldAccessorTable; }
    }
    
    public const int TradePriceFieldNumber = 1;
    private bool hasTradePrice;
    private ulong tradePrice_;
    public bool HasTradePrice {
      get { return hasTradePrice; }
    }
    public ulong TradePrice {
      get { return tradePrice_; }
    }
    
    public const int AmountFieldNumber = 2;
    private bool hasAmount;
    private ulong amount_;
    public bool HasAmount {
      get { return hasAmount; }
    }
    public ulong Amount {
      get { return amount_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTradePrice) return false;
        if (!hasAmount) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _priceDetailFieldNames;
      if (hasTradePrice) {
        output.WriteUInt64(1, field_names[1], TradePrice);
      }
      if (hasAmount) {
        output.WriteUInt64(2, field_names[0], Amount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTradePrice) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, TradePrice);
        }
        if (hasAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, Amount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PriceDetail ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PriceDetail ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PriceDetail ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PriceDetail ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PriceDetail ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PriceDetail ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PriceDetail ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PriceDetail ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PriceDetail ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PriceDetail ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PriceDetail MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PriceDetail prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<PriceDetail, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PriceDetail cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PriceDetail result;
      
      private PriceDetail PrepareBuilder() {
        if (resultIsReadOnly) {
          PriceDetail original = result;
          result = new PriceDetail();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PriceDetail MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.PriceDetail.Descriptor; }
      }
      
      public override PriceDetail DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.PriceDetail.DefaultInstance; }
      }
      
      public override PriceDetail BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PriceDetail) {
          return MergeFrom((PriceDetail) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PriceDetail other) {
        if (other == global::bnet.protocol.exchange.PriceDetail.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTradePrice) {
          TradePrice = other.TradePrice;
        }
        if (other.HasAmount) {
          Amount = other.Amount;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_priceDetailFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _priceDetailFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTradePrice = input.ReadUInt64(ref result.tradePrice_);
              break;
            }
            case 16: {
              result.hasAmount = input.ReadUInt64(ref result.amount_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTradePrice {
        get { return result.hasTradePrice; }
      }
      public ulong TradePrice {
        get { return result.TradePrice; }
        set { SetTradePrice(value); }
      }
      public Builder SetTradePrice(ulong value) {
        PrepareBuilder();
        result.hasTradePrice = true;
        result.tradePrice_ = value;
        return this;
      }
      public Builder ClearTradePrice() {
        PrepareBuilder();
        result.hasTradePrice = false;
        result.tradePrice_ = 0UL;
        return this;
      }
      
      public bool HasAmount {
        get { return result.hasAmount; }
      }
      public ulong Amount {
        get { return result.Amount; }
        set { SetAmount(value); }
      }
      public Builder SetAmount(ulong value) {
        PrepareBuilder();
        result.hasAmount = true;
        result.amount_ = value;
        return this;
      }
      public Builder ClearAmount() {
        PrepareBuilder();
        result.hasAmount = false;
        result.amount_ = 0UL;
        return this;
      }
    }
    static PriceDetail() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Count : pb::GeneratedMessage<Count, Count.Builder> {
    private Count() { }
    private static readonly Count defaultInstance = new Count().MakeReadOnly();
    private static readonly string[] _countFieldNames = new string[] { "count", "limit" };
    private static readonly uint[] _countFieldTags = new uint[] { 8, 16 };
    public static Count DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Count DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Count ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Count__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Count, Count.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_Count__FieldAccessorTable; }
    }
    
    public const int Count_FieldNumber = 1;
    private bool hasCount_;
    private uint count_;
    public bool HasCount_ {
      get { return hasCount_; }
    }
    public uint Count_ {
      get { return count_; }
    }
    
    public const int LimitFieldNumber = 2;
    private bool hasLimit;
    private uint limit_;
    public bool HasLimit {
      get { return hasLimit; }
    }
    public uint Limit {
      get { return limit_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCount_) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _countFieldNames;
      if (hasCount_) {
        output.WriteUInt32(1, field_names[0], Count_);
      }
      if (hasLimit) {
        output.WriteUInt32(2, field_names[1], Limit);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasCount_) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, Count_);
        }
        if (hasLimit) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Limit);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Count ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Count ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Count ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Count ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Count ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Count ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Count ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Count ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Count ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Count ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Count MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Count prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Count, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Count cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Count result;
      
      private Count PrepareBuilder() {
        if (resultIsReadOnly) {
          Count original = result;
          result = new Count();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Count MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.Count.Descriptor; }
      }
      
      public override Count DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.Count.DefaultInstance; }
      }
      
      public override Count BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Count) {
          return MergeFrom((Count) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Count other) {
        if (other == global::bnet.protocol.exchange.Count.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCount_) {
          Count_ = other.Count_;
        }
        if (other.HasLimit) {
          Limit = other.Limit;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_countFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _countFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasCount_ = input.ReadUInt32(ref result.count_);
              break;
            }
            case 16: {
              result.hasLimit = input.ReadUInt32(ref result.limit_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCount_ {
        get { return result.hasCount_; }
      }
      public uint Count_ {
        get { return result.Count_; }
        set { SetCount_(value); }
      }
      public Builder SetCount_(uint value) {
        PrepareBuilder();
        result.hasCount_ = true;
        result.count_ = value;
        return this;
      }
      public Builder ClearCount_() {
        PrepareBuilder();
        result.hasCount_ = false;
        result.count_ = 0;
        return this;
      }
      
      public bool HasLimit {
        get { return result.hasLimit; }
      }
      public uint Limit {
        get { return result.Limit; }
        set { SetLimit(value); }
      }
      public Builder SetLimit(uint value) {
        PrepareBuilder();
        result.hasLimit = true;
        result.limit_ = value;
        return this;
      }
      public Builder ClearLimit() {
        PrepareBuilder();
        result.hasLimit = false;
        result.limit_ = 0;
        return this;
      }
    }
    static Count() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AdvancedSubscription : pb::GeneratedMessage<AdvancedSubscription, AdvancedSubscription.Builder> {
    private AdvancedSubscription() { }
    private static readonly AdvancedSubscription defaultInstance = new AdvancedSubscription().MakeReadOnly();
    private static readonly string[] _advancedSubscriptionFieldNames = new string[] { "event", "program", "reason" };
    private static readonly uint[] _advancedSubscriptionFieldTags = new uint[] { 16, 13, 24 };
    public static AdvancedSubscription DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AdvancedSubscription DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AdvancedSubscription ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_AdvancedSubscription__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AdvancedSubscription, AdvancedSubscription.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_AdvancedSubscription__FieldAccessorTable; }
    }
    
    public const int ProgramFieldNumber = 1;
    private bool hasProgram;
    private uint program_;
    public bool HasProgram {
      get { return hasProgram; }
    }
    public uint Program {
      get { return program_; }
    }
    
    public const int EventFieldNumber = 2;
    private bool hasEvent;
    private uint event_;
    public bool HasEvent {
      get { return hasEvent; }
    }
    public uint Event {
      get { return event_; }
    }
    
    public const int ReasonFieldNumber = 3;
    private pbc::PopsicleList<uint> reason_ = new pbc::PopsicleList<uint>();
    public scg::IList<uint> ReasonList {
      get { return pbc::Lists.AsReadOnly(reason_); }
    }
    public int ReasonCount {
      get { return reason_.Count; }
    }
    public uint GetReason(int index) {
      return reason_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasProgram) return false;
        if (!hasEvent) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _advancedSubscriptionFieldNames;
      if (hasProgram) {
        output.WriteFixed32(1, field_names[1], Program);
      }
      if (hasEvent) {
        output.WriteUInt32(2, field_names[0], Event);
      }
      if (reason_.Count > 0) {
        output.WriteUInt32Array(3, field_names[2], reason_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeFixed32Size(1, Program);
        }
        if (hasEvent) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Event);
        }
        {
          int dataSize = 0;
          foreach (uint element in ReasonList) {
            dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * reason_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AdvancedSubscription ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AdvancedSubscription ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AdvancedSubscription ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AdvancedSubscription ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AdvancedSubscription ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AdvancedSubscription ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AdvancedSubscription ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AdvancedSubscription ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AdvancedSubscription ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AdvancedSubscription ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AdvancedSubscription MakeReadOnly() {
      reason_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AdvancedSubscription prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AdvancedSubscription, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AdvancedSubscription cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AdvancedSubscription result;
      
      private AdvancedSubscription PrepareBuilder() {
        if (resultIsReadOnly) {
          AdvancedSubscription original = result;
          result = new AdvancedSubscription();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AdvancedSubscription MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.AdvancedSubscription.Descriptor; }
      }
      
      public override AdvancedSubscription DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.AdvancedSubscription.DefaultInstance; }
      }
      
      public override AdvancedSubscription BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AdvancedSubscription) {
          return MergeFrom((AdvancedSubscription) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AdvancedSubscription other) {
        if (other == global::bnet.protocol.exchange.AdvancedSubscription.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasEvent) {
          Event = other.Event;
        }
        if (other.reason_.Count != 0) {
          result.reason_.Add(other.reason_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_advancedSubscriptionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _advancedSubscriptionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 13: {
              result.hasProgram = input.ReadFixed32(ref result.program_);
              break;
            }
            case 16: {
              result.hasEvent = input.ReadUInt32(ref result.event_);
              break;
            }
            case 26:
            case 24: {
              input.ReadUInt32Array(tag, field_name, result.reason_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public uint Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(uint value) {
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = 0;
        return this;
      }
      
      public bool HasEvent {
        get { return result.hasEvent; }
      }
      public uint Event {
        get { return result.Event; }
        set { SetEvent(value); }
      }
      public Builder SetEvent(uint value) {
        PrepareBuilder();
        result.hasEvent = true;
        result.event_ = value;
        return this;
      }
      public Builder ClearEvent() {
        PrepareBuilder();
        result.hasEvent = false;
        result.event_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<uint> ReasonList {
        get { return PrepareBuilder().reason_; }
      }
      public int ReasonCount {
        get { return result.ReasonCount; }
      }
      public uint GetReason(int index) {
        return result.GetReason(index);
      }
      public Builder SetReason(int index, uint value) {
        PrepareBuilder();
        result.reason_[index] = value;
        return this;
      }
      public Builder AddReason(uint value) {
        PrepareBuilder();
        result.reason_.Add(value);
        return this;
      }
      public Builder AddRangeReason(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.reason_.Add(values);
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.reason_.Clear();
        return this;
      }
    }
    static AdvancedSubscription() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class HistoryData : pb::GeneratedMessage<HistoryData, HistoryData.Builder> {
    private HistoryData() { }
    private static readonly HistoryData defaultInstance = new HistoryData().MakeReadOnly();
    private static readonly string[] _historyDataFieldNames = new string[] { "account_for_item", "account_for_money", "action_id", "amount", "auth_complete_progress", "auth_deferred", "auth_filled_progress", "auth_handle", "auth_id", "auth_object_type", "auth_total_progress", "authorized_amount", "authorized_fee_amount", "completed", "created", "deferred", "fee_amount", "has_been_deferred", "order_book_id", "order_id", "order_type", "parent_settle_id", "parent_settled", "partition_id", "progress", "result_code", "risk_completed", "risk_result", "risk_verdict", "token", "trans_direction" };
    private static readonly uint[] _historyDataFieldTags = new uint[] { 154, 162, 24, 64, 208, 240, 216, 234, 184, 192, 224, 48, 56, 136, 104, 80, 72, 88, 8, 176, 168, 32, 40, 18, 96, 144, 112, 120, 128, 250, 202 };
    public static HistoryData DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HistoryData DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HistoryData ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_HistoryData__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HistoryData, HistoryData.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.exchange.ExchangeTypes.internal__static_bnet_protocol_exchange_HistoryData__FieldAccessorTable; }
    }
    
    public const int OrderBookIdFieldNumber = 1;
    private bool hasOrderBookId;
    private ulong orderBookId_;
    public bool HasOrderBookId {
      get { return hasOrderBookId; }
    }
    public ulong OrderBookId {
      get { return orderBookId_; }
    }
    
    public const int PartitionIdFieldNumber = 2;
    private bool hasPartitionId;
    private global::bnet.protocol.exchange.PartitionId partitionId_;
    public bool HasPartitionId {
      get { return hasPartitionId; }
    }
    public global::bnet.protocol.exchange.PartitionId PartitionId {
      get { return partitionId_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public const int ActionIdFieldNumber = 3;
    private bool hasActionId;
    private ulong actionId_;
    public bool HasActionId {
      get { return hasActionId; }
    }
    public ulong ActionId {
      get { return actionId_; }
    }
    
    public const int ParentSettleIdFieldNumber = 4;
    private bool hasParentSettleId;
    private ulong parentSettleId_;
    public bool HasParentSettleId {
      get { return hasParentSettleId; }
    }
    public ulong ParentSettleId {
      get { return parentSettleId_; }
    }
    
    public const int ParentSettledFieldNumber = 5;
    private bool hasParentSettled;
    private bool parentSettled_;
    public bool HasParentSettled {
      get { return hasParentSettled; }
    }
    public bool ParentSettled {
      get { return parentSettled_; }
    }
    
    public const int AuthorizedAmountFieldNumber = 6;
    private bool hasAuthorizedAmount;
    private ulong authorizedAmount_;
    public bool HasAuthorizedAmount {
      get { return hasAuthorizedAmount; }
    }
    public ulong AuthorizedAmount {
      get { return authorizedAmount_; }
    }
    
    public const int AuthorizedFeeAmountFieldNumber = 7;
    private bool hasAuthorizedFeeAmount;
    private ulong authorizedFeeAmount_;
    public bool HasAuthorizedFeeAmount {
      get { return hasAuthorizedFeeAmount; }
    }
    public ulong AuthorizedFeeAmount {
      get { return authorizedFeeAmount_; }
    }
    
    public const int AmountFieldNumber = 8;
    private bool hasAmount;
    private ulong amount_;
    public bool HasAmount {
      get { return hasAmount; }
    }
    public ulong Amount {
      get { return amount_; }
    }
    
    public const int FeeAmountFieldNumber = 9;
    private bool hasFeeAmount;
    private ulong feeAmount_;
    public bool HasFeeAmount {
      get { return hasFeeAmount; }
    }
    public ulong FeeAmount {
      get { return feeAmount_; }
    }
    
    public const int DeferredFieldNumber = 10;
    private bool hasDeferred;
    private bool deferred_;
    public bool HasDeferred {
      get { return hasDeferred; }
    }
    public bool Deferred {
      get { return deferred_; }
    }
    
    public const int HasBeenDeferredFieldNumber = 11;
    private bool hasHasBeenDeferred;
    private bool hasBeenDeferred_;
    public bool HasHasBeenDeferred {
      get { return hasHasBeenDeferred; }
    }
    public bool HasBeenDeferred {
      get { return hasBeenDeferred_; }
    }
    
    public const int ProgressFieldNumber = 12;
    private bool hasProgress;
    private ulong progress_;
    public bool HasProgress {
      get { return hasProgress; }
    }
    public ulong Progress {
      get { return progress_; }
    }
    
    public const int CreatedFieldNumber = 13;
    private bool hasCreated;
    private ulong created_;
    public bool HasCreated {
      get { return hasCreated; }
    }
    public ulong Created {
      get { return created_; }
    }
    
    public const int RiskCompletedFieldNumber = 14;
    private bool hasRiskCompleted;
    private ulong riskCompleted_;
    public bool HasRiskCompleted {
      get { return hasRiskCompleted; }
    }
    public ulong RiskCompleted {
      get { return riskCompleted_; }
    }
    
    public const int RiskResultFieldNumber = 15;
    private bool hasRiskResult;
    private ulong riskResult_;
    public bool HasRiskResult {
      get { return hasRiskResult; }
    }
    public ulong RiskResult {
      get { return riskResult_; }
    }
    
    public const int RiskVerdictFieldNumber = 16;
    private bool hasRiskVerdict;
    private ulong riskVerdict_;
    public bool HasRiskVerdict {
      get { return hasRiskVerdict; }
    }
    public ulong RiskVerdict {
      get { return riskVerdict_; }
    }
    
    public const int CompletedFieldNumber = 17;
    private bool hasCompleted;
    private ulong completed_;
    public bool HasCompleted {
      get { return hasCompleted; }
    }
    public ulong Completed {
      get { return completed_; }
    }
    
    public const int ResultCodeFieldNumber = 18;
    private bool hasResultCode;
    private ulong resultCode_;
    public bool HasResultCode {
      get { return hasResultCode; }
    }
    public ulong ResultCode {
      get { return resultCode_; }
    }
    
    public const int AccountForItemFieldNumber = 19;
    private bool hasAccountForItem;
    private global::bnet.protocol.exchange.BlobFrom accountForItem_;
    public bool HasAccountForItem {
      get { return hasAccountForItem; }
    }
    public global::bnet.protocol.exchange.BlobFrom AccountForItem {
      get { return accountForItem_ ?? global::bnet.protocol.exchange.BlobFrom.DefaultInstance; }
    }
    
    public const int AccountForMoneyFieldNumber = 20;
    private bool hasAccountForMoney;
    private global::bnet.protocol.exchange.BlobFrom accountForMoney_;
    public bool HasAccountForMoney {
      get { return hasAccountForMoney; }
    }
    public global::bnet.protocol.exchange.BlobFrom AccountForMoney {
      get { return accountForMoney_ ?? global::bnet.protocol.exchange.BlobFrom.DefaultInstance; }
    }
    
    public const int OrderTypeFieldNumber = 21;
    private bool hasOrderType;
    private uint orderType_;
    public bool HasOrderType {
      get { return hasOrderType; }
    }
    public uint OrderType {
      get { return orderType_; }
    }
    
    public const int OrderIdFieldNumber = 22;
    private bool hasOrderId;
    private ulong orderId_;
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    public ulong OrderId {
      get { return orderId_; }
    }
    
    public const int AuthIdFieldNumber = 23;
    private bool hasAuthId;
    private ulong authId_;
    public bool HasAuthId {
      get { return hasAuthId; }
    }
    public ulong AuthId {
      get { return authId_; }
    }
    
    public const int AuthObjectTypeFieldNumber = 24;
    private bool hasAuthObjectType;
    private uint authObjectType_;
    public bool HasAuthObjectType {
      get { return hasAuthObjectType; }
    }
    public uint AuthObjectType {
      get { return authObjectType_; }
    }
    
    public const int TransDirectionFieldNumber = 25;
    private bool hasTransDirection;
    private string transDirection_ = "";
    public bool HasTransDirection {
      get { return hasTransDirection; }
    }
    public string TransDirection {
      get { return transDirection_; }
    }
    
    public const int AuthCompleteProgressFieldNumber = 26;
    private bool hasAuthCompleteProgress;
    private ulong authCompleteProgress_;
    public bool HasAuthCompleteProgress {
      get { return hasAuthCompleteProgress; }
    }
    public ulong AuthCompleteProgress {
      get { return authCompleteProgress_; }
    }
    
    public const int AuthFilledProgressFieldNumber = 27;
    private bool hasAuthFilledProgress;
    private ulong authFilledProgress_;
    public bool HasAuthFilledProgress {
      get { return hasAuthFilledProgress; }
    }
    public ulong AuthFilledProgress {
      get { return authFilledProgress_; }
    }
    
    public const int AuthTotalProgressFieldNumber = 28;
    private bool hasAuthTotalProgress;
    private ulong authTotalProgress_;
    public bool HasAuthTotalProgress {
      get { return hasAuthTotalProgress; }
    }
    public ulong AuthTotalProgress {
      get { return authTotalProgress_; }
    }
    
    public const int AuthHandleFieldNumber = 29;
    private bool hasAuthHandle;
    private global::bnet.protocol.exchange.BlobFromOfType authHandle_;
    public bool HasAuthHandle {
      get { return hasAuthHandle; }
    }
    public global::bnet.protocol.exchange.BlobFromOfType AuthHandle {
      get { return authHandle_ ?? global::bnet.protocol.exchange.BlobFromOfType.DefaultInstance; }
    }
    
    public const int AuthDeferredFieldNumber = 30;
    private bool hasAuthDeferred;
    private bool authDeferred_;
    public bool HasAuthDeferred {
      get { return hasAuthDeferred; }
    }
    public bool AuthDeferred {
      get { return authDeferred_; }
    }
    
    public const int TokenFieldNumber = 31;
    private bool hasToken;
    private global::bnet.protocol.exchange.PartitionId token_;
    public bool HasToken {
      get { return hasToken; }
    }
    public global::bnet.protocol.exchange.PartitionId Token {
      get { return token_ ?? global::bnet.protocol.exchange.PartitionId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasOrderBookId) return false;
        if (!hasPartitionId) return false;
        if (!hasActionId) return false;
        if (!hasAuthorizedAmount) return false;
        if (!hasAmount) return false;
        if (!hasDeferred) return false;
        if (!hasHasBeenDeferred) return false;
        if (!hasProgress) return false;
        if (!hasCreated) return false;
        if (!hasAccountForItem) return false;
        if (!hasAccountForMoney) return false;
        if (!hasOrderType) return false;
        if (!hasOrderId) return false;
        if (!hasAuthId) return false;
        if (!hasAuthObjectType) return false;
        if (!hasTransDirection) return false;
        if (!hasAuthCompleteProgress) return false;
        if (!hasAuthFilledProgress) return false;
        if (!hasAuthTotalProgress) return false;
        if (!hasAuthHandle) return false;
        if (!hasAuthDeferred) return false;
        if (!hasToken) return false;
        if (!PartitionId.IsInitialized) return false;
        if (!AccountForItem.IsInitialized) return false;
        if (!AccountForMoney.IsInitialized) return false;
        if (!AuthHandle.IsInitialized) return false;
        if (!Token.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _historyDataFieldNames;
      if (hasOrderBookId) {
        output.WriteUInt64(1, field_names[18], OrderBookId);
      }
      if (hasPartitionId) {
        output.WriteMessage(2, field_names[23], PartitionId);
      }
      if (hasActionId) {
        output.WriteUInt64(3, field_names[2], ActionId);
      }
      if (hasParentSettleId) {
        output.WriteUInt64(4, field_names[21], ParentSettleId);
      }
      if (hasParentSettled) {
        output.WriteBool(5, field_names[22], ParentSettled);
      }
      if (hasAuthorizedAmount) {
        output.WriteUInt64(6, field_names[11], AuthorizedAmount);
      }
      if (hasAuthorizedFeeAmount) {
        output.WriteUInt64(7, field_names[12], AuthorizedFeeAmount);
      }
      if (hasAmount) {
        output.WriteUInt64(8, field_names[3], Amount);
      }
      if (hasFeeAmount) {
        output.WriteUInt64(9, field_names[16], FeeAmount);
      }
      if (hasDeferred) {
        output.WriteBool(10, field_names[15], Deferred);
      }
      if (hasHasBeenDeferred) {
        output.WriteBool(11, field_names[17], HasBeenDeferred);
      }
      if (hasProgress) {
        output.WriteUInt64(12, field_names[24], Progress);
      }
      if (hasCreated) {
        output.WriteUInt64(13, field_names[14], Created);
      }
      if (hasRiskCompleted) {
        output.WriteUInt64(14, field_names[26], RiskCompleted);
      }
      if (hasRiskResult) {
        output.WriteUInt64(15, field_names[27], RiskResult);
      }
      if (hasRiskVerdict) {
        output.WriteUInt64(16, field_names[28], RiskVerdict);
      }
      if (hasCompleted) {
        output.WriteUInt64(17, field_names[13], Completed);
      }
      if (hasResultCode) {
        output.WriteUInt64(18, field_names[25], ResultCode);
      }
      if (hasAccountForItem) {
        output.WriteMessage(19, field_names[0], AccountForItem);
      }
      if (hasAccountForMoney) {
        output.WriteMessage(20, field_names[1], AccountForMoney);
      }
      if (hasOrderType) {
        output.WriteUInt32(21, field_names[20], OrderType);
      }
      if (hasOrderId) {
        output.WriteUInt64(22, field_names[19], OrderId);
      }
      if (hasAuthId) {
        output.WriteUInt64(23, field_names[8], AuthId);
      }
      if (hasAuthObjectType) {
        output.WriteUInt32(24, field_names[9], AuthObjectType);
      }
      if (hasTransDirection) {
        output.WriteString(25, field_names[30], TransDirection);
      }
      if (hasAuthCompleteProgress) {
        output.WriteUInt64(26, field_names[4], AuthCompleteProgress);
      }
      if (hasAuthFilledProgress) {
        output.WriteUInt64(27, field_names[6], AuthFilledProgress);
      }
      if (hasAuthTotalProgress) {
        output.WriteUInt64(28, field_names[10], AuthTotalProgress);
      }
      if (hasAuthHandle) {
        output.WriteMessage(29, field_names[7], AuthHandle);
      }
      if (hasAuthDeferred) {
        output.WriteBool(30, field_names[5], AuthDeferred);
      }
      if (hasToken) {
        output.WriteMessage(31, field_names[29], Token);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasOrderBookId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, OrderBookId);
        }
        if (hasPartitionId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, PartitionId);
        }
        if (hasActionId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(3, ActionId);
        }
        if (hasParentSettleId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, ParentSettleId);
        }
        if (hasParentSettled) {
          size += pb::CodedOutputStream.ComputeBoolSize(5, ParentSettled);
        }
        if (hasAuthorizedAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(6, AuthorizedAmount);
        }
        if (hasAuthorizedFeeAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(7, AuthorizedFeeAmount);
        }
        if (hasAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(8, Amount);
        }
        if (hasFeeAmount) {
          size += pb::CodedOutputStream.ComputeUInt64Size(9, FeeAmount);
        }
        if (hasDeferred) {
          size += pb::CodedOutputStream.ComputeBoolSize(10, Deferred);
        }
        if (hasHasBeenDeferred) {
          size += pb::CodedOutputStream.ComputeBoolSize(11, HasBeenDeferred);
        }
        if (hasProgress) {
          size += pb::CodedOutputStream.ComputeUInt64Size(12, Progress);
        }
        if (hasCreated) {
          size += pb::CodedOutputStream.ComputeUInt64Size(13, Created);
        }
        if (hasRiskCompleted) {
          size += pb::CodedOutputStream.ComputeUInt64Size(14, RiskCompleted);
        }
        if (hasRiskResult) {
          size += pb::CodedOutputStream.ComputeUInt64Size(15, RiskResult);
        }
        if (hasRiskVerdict) {
          size += pb::CodedOutputStream.ComputeUInt64Size(16, RiskVerdict);
        }
        if (hasCompleted) {
          size += pb::CodedOutputStream.ComputeUInt64Size(17, Completed);
        }
        if (hasResultCode) {
          size += pb::CodedOutputStream.ComputeUInt64Size(18, ResultCode);
        }
        if (hasAccountForItem) {
          size += pb::CodedOutputStream.ComputeMessageSize(19, AccountForItem);
        }
        if (hasAccountForMoney) {
          size += pb::CodedOutputStream.ComputeMessageSize(20, AccountForMoney);
        }
        if (hasOrderType) {
          size += pb::CodedOutputStream.ComputeUInt32Size(21, OrderType);
        }
        if (hasOrderId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(22, OrderId);
        }
        if (hasAuthId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(23, AuthId);
        }
        if (hasAuthObjectType) {
          size += pb::CodedOutputStream.ComputeUInt32Size(24, AuthObjectType);
        }
        if (hasTransDirection) {
          size += pb::CodedOutputStream.ComputeStringSize(25, TransDirection);
        }
        if (hasAuthCompleteProgress) {
          size += pb::CodedOutputStream.ComputeUInt64Size(26, AuthCompleteProgress);
        }
        if (hasAuthFilledProgress) {
          size += pb::CodedOutputStream.ComputeUInt64Size(27, AuthFilledProgress);
        }
        if (hasAuthTotalProgress) {
          size += pb::CodedOutputStream.ComputeUInt64Size(28, AuthTotalProgress);
        }
        if (hasAuthHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(29, AuthHandle);
        }
        if (hasAuthDeferred) {
          size += pb::CodedOutputStream.ComputeBoolSize(30, AuthDeferred);
        }
        if (hasToken) {
          size += pb::CodedOutputStream.ComputeMessageSize(31, Token);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static HistoryData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HistoryData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HistoryData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HistoryData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HistoryData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HistoryData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HistoryData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HistoryData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HistoryData ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HistoryData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HistoryData MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HistoryData prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<HistoryData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HistoryData cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HistoryData result;
      
      private HistoryData PrepareBuilder() {
        if (resultIsReadOnly) {
          HistoryData original = result;
          result = new HistoryData();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HistoryData MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.exchange.HistoryData.Descriptor; }
      }
      
      public override HistoryData DefaultInstanceForType {
        get { return global::bnet.protocol.exchange.HistoryData.DefaultInstance; }
      }
      
      public override HistoryData BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is HistoryData) {
          return MergeFrom((HistoryData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(HistoryData other) {
        if (other == global::bnet.protocol.exchange.HistoryData.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasOrderBookId) {
          OrderBookId = other.OrderBookId;
        }
        if (other.HasPartitionId) {
          MergePartitionId(other.PartitionId);
        }
        if (other.HasActionId) {
          ActionId = other.ActionId;
        }
        if (other.HasParentSettleId) {
          ParentSettleId = other.ParentSettleId;
        }
        if (other.HasParentSettled) {
          ParentSettled = other.ParentSettled;
        }
        if (other.HasAuthorizedAmount) {
          AuthorizedAmount = other.AuthorizedAmount;
        }
        if (other.HasAuthorizedFeeAmount) {
          AuthorizedFeeAmount = other.AuthorizedFeeAmount;
        }
        if (other.HasAmount) {
          Amount = other.Amount;
        }
        if (other.HasFeeAmount) {
          FeeAmount = other.FeeAmount;
        }
        if (other.HasDeferred) {
          Deferred = other.Deferred;
        }
        if (other.HasHasBeenDeferred) {
          HasBeenDeferred = other.HasBeenDeferred;
        }
        if (other.HasProgress) {
          Progress = other.Progress;
        }
        if (other.HasCreated) {
          Created = other.Created;
        }
        if (other.HasRiskCompleted) {
          RiskCompleted = other.RiskCompleted;
        }
        if (other.HasRiskResult) {
          RiskResult = other.RiskResult;
        }
        if (other.HasRiskVerdict) {
          RiskVerdict = other.RiskVerdict;
        }
        if (other.HasCompleted) {
          Completed = other.Completed;
        }
        if (other.HasResultCode) {
          ResultCode = other.ResultCode;
        }
        if (other.HasAccountForItem) {
          MergeAccountForItem(other.AccountForItem);
        }
        if (other.HasAccountForMoney) {
          MergeAccountForMoney(other.AccountForMoney);
        }
        if (other.HasOrderType) {
          OrderType = other.OrderType;
        }
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasAuthId) {
          AuthId = other.AuthId;
        }
        if (other.HasAuthObjectType) {
          AuthObjectType = other.AuthObjectType;
        }
        if (other.HasTransDirection) {
          TransDirection = other.TransDirection;
        }
        if (other.HasAuthCompleteProgress) {
          AuthCompleteProgress = other.AuthCompleteProgress;
        }
        if (other.HasAuthFilledProgress) {
          AuthFilledProgress = other.AuthFilledProgress;
        }
        if (other.HasAuthTotalProgress) {
          AuthTotalProgress = other.AuthTotalProgress;
        }
        if (other.HasAuthHandle) {
          MergeAuthHandle(other.AuthHandle);
        }
        if (other.HasAuthDeferred) {
          AuthDeferred = other.AuthDeferred;
        }
        if (other.HasToken) {
          MergeToken(other.Token);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_historyDataFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _historyDataFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasOrderBookId = input.ReadUInt64(ref result.orderBookId_);
              break;
            }
            case 18: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasPartitionId) {
                subBuilder.MergeFrom(PartitionId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              PartitionId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasActionId = input.ReadUInt64(ref result.actionId_);
              break;
            }
            case 32: {
              result.hasParentSettleId = input.ReadUInt64(ref result.parentSettleId_);
              break;
            }
            case 40: {
              result.hasParentSettled = input.ReadBool(ref result.parentSettled_);
              break;
            }
            case 48: {
              result.hasAuthorizedAmount = input.ReadUInt64(ref result.authorizedAmount_);
              break;
            }
            case 56: {
              result.hasAuthorizedFeeAmount = input.ReadUInt64(ref result.authorizedFeeAmount_);
              break;
            }
            case 64: {
              result.hasAmount = input.ReadUInt64(ref result.amount_);
              break;
            }
            case 72: {
              result.hasFeeAmount = input.ReadUInt64(ref result.feeAmount_);
              break;
            }
            case 80: {
              result.hasDeferred = input.ReadBool(ref result.deferred_);
              break;
            }
            case 88: {
              result.hasHasBeenDeferred = input.ReadBool(ref result.hasBeenDeferred_);
              break;
            }
            case 96: {
              result.hasProgress = input.ReadUInt64(ref result.progress_);
              break;
            }
            case 104: {
              result.hasCreated = input.ReadUInt64(ref result.created_);
              break;
            }
            case 112: {
              result.hasRiskCompleted = input.ReadUInt64(ref result.riskCompleted_);
              break;
            }
            case 120: {
              result.hasRiskResult = input.ReadUInt64(ref result.riskResult_);
              break;
            }
            case 128: {
              result.hasRiskVerdict = input.ReadUInt64(ref result.riskVerdict_);
              break;
            }
            case 136: {
              result.hasCompleted = input.ReadUInt64(ref result.completed_);
              break;
            }
            case 144: {
              result.hasResultCode = input.ReadUInt64(ref result.resultCode_);
              break;
            }
            case 154: {
              global::bnet.protocol.exchange.BlobFrom.Builder subBuilder = global::bnet.protocol.exchange.BlobFrom.CreateBuilder();
              if (result.hasAccountForItem) {
                subBuilder.MergeFrom(AccountForItem);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountForItem = subBuilder.BuildPartial();
              break;
            }
            case 162: {
              global::bnet.protocol.exchange.BlobFrom.Builder subBuilder = global::bnet.protocol.exchange.BlobFrom.CreateBuilder();
              if (result.hasAccountForMoney) {
                subBuilder.MergeFrom(AccountForMoney);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AccountForMoney = subBuilder.BuildPartial();
              break;
            }
            case 168: {
              result.hasOrderType = input.ReadUInt32(ref result.orderType_);
              break;
            }
            case 176: {
              result.hasOrderId = input.ReadUInt64(ref result.orderId_);
              break;
            }
            case 184: {
              result.hasAuthId = input.ReadUInt64(ref result.authId_);
              break;
            }
            case 192: {
              result.hasAuthObjectType = input.ReadUInt32(ref result.authObjectType_);
              break;
            }
            case 202: {
              result.hasTransDirection = input.ReadString(ref result.transDirection_);
              break;
            }
            case 208: {
              result.hasAuthCompleteProgress = input.ReadUInt64(ref result.authCompleteProgress_);
              break;
            }
            case 216: {
              result.hasAuthFilledProgress = input.ReadUInt64(ref result.authFilledProgress_);
              break;
            }
            case 224: {
              result.hasAuthTotalProgress = input.ReadUInt64(ref result.authTotalProgress_);
              break;
            }
            case 234: {
              global::bnet.protocol.exchange.BlobFromOfType.Builder subBuilder = global::bnet.protocol.exchange.BlobFromOfType.CreateBuilder();
              if (result.hasAuthHandle) {
                subBuilder.MergeFrom(AuthHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AuthHandle = subBuilder.BuildPartial();
              break;
            }
            case 240: {
              result.hasAuthDeferred = input.ReadBool(ref result.authDeferred_);
              break;
            }
            case 250: {
              global::bnet.protocol.exchange.PartitionId.Builder subBuilder = global::bnet.protocol.exchange.PartitionId.CreateBuilder();
              if (result.hasToken) {
                subBuilder.MergeFrom(Token);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Token = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasOrderBookId {
        get { return result.hasOrderBookId; }
      }
      public ulong OrderBookId {
        get { return result.OrderBookId; }
        set { SetOrderBookId(value); }
      }
      public Builder SetOrderBookId(ulong value) {
        PrepareBuilder();
        result.hasOrderBookId = true;
        result.orderBookId_ = value;
        return this;
      }
      public Builder ClearOrderBookId() {
        PrepareBuilder();
        result.hasOrderBookId = false;
        result.orderBookId_ = 0UL;
        return this;
      }
      
      public bool HasPartitionId {
       get { return result.hasPartitionId; }
      }
      public global::bnet.protocol.exchange.PartitionId PartitionId {
        get { return result.PartitionId; }
        set { SetPartitionId(value); }
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = value;
        return this;
      }
      public Builder SetPartitionId(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPartitionId = true;
        result.partitionId_ = builderForValue.Build();
        return this;
      }
      public Builder MergePartitionId(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPartitionId &&
            result.partitionId_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.partitionId_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.partitionId_).MergeFrom(value).BuildPartial();
        } else {
          result.partitionId_ = value;
        }
        result.hasPartitionId = true;
        return this;
      }
      public Builder ClearPartitionId() {
        PrepareBuilder();
        result.hasPartitionId = false;
        result.partitionId_ = null;
        return this;
      }
      
      public bool HasActionId {
        get { return result.hasActionId; }
      }
      public ulong ActionId {
        get { return result.ActionId; }
        set { SetActionId(value); }
      }
      public Builder SetActionId(ulong value) {
        PrepareBuilder();
        result.hasActionId = true;
        result.actionId_ = value;
        return this;
      }
      public Builder ClearActionId() {
        PrepareBuilder();
        result.hasActionId = false;
        result.actionId_ = 0UL;
        return this;
      }
      
      public bool HasParentSettleId {
        get { return result.hasParentSettleId; }
      }
      public ulong ParentSettleId {
        get { return result.ParentSettleId; }
        set { SetParentSettleId(value); }
      }
      public Builder SetParentSettleId(ulong value) {
        PrepareBuilder();
        result.hasParentSettleId = true;
        result.parentSettleId_ = value;
        return this;
      }
      public Builder ClearParentSettleId() {
        PrepareBuilder();
        result.hasParentSettleId = false;
        result.parentSettleId_ = 0UL;
        return this;
      }
      
      public bool HasParentSettled {
        get { return result.hasParentSettled; }
      }
      public bool ParentSettled {
        get { return result.ParentSettled; }
        set { SetParentSettled(value); }
      }
      public Builder SetParentSettled(bool value) {
        PrepareBuilder();
        result.hasParentSettled = true;
        result.parentSettled_ = value;
        return this;
      }
      public Builder ClearParentSettled() {
        PrepareBuilder();
        result.hasParentSettled = false;
        result.parentSettled_ = false;
        return this;
      }
      
      public bool HasAuthorizedAmount {
        get { return result.hasAuthorizedAmount; }
      }
      public ulong AuthorizedAmount {
        get { return result.AuthorizedAmount; }
        set { SetAuthorizedAmount(value); }
      }
      public Builder SetAuthorizedAmount(ulong value) {
        PrepareBuilder();
        result.hasAuthorizedAmount = true;
        result.authorizedAmount_ = value;
        return this;
      }
      public Builder ClearAuthorizedAmount() {
        PrepareBuilder();
        result.hasAuthorizedAmount = false;
        result.authorizedAmount_ = 0UL;
        return this;
      }
      
      public bool HasAuthorizedFeeAmount {
        get { return result.hasAuthorizedFeeAmount; }
      }
      public ulong AuthorizedFeeAmount {
        get { return result.AuthorizedFeeAmount; }
        set { SetAuthorizedFeeAmount(value); }
      }
      public Builder SetAuthorizedFeeAmount(ulong value) {
        PrepareBuilder();
        result.hasAuthorizedFeeAmount = true;
        result.authorizedFeeAmount_ = value;
        return this;
      }
      public Builder ClearAuthorizedFeeAmount() {
        PrepareBuilder();
        result.hasAuthorizedFeeAmount = false;
        result.authorizedFeeAmount_ = 0UL;
        return this;
      }
      
      public bool HasAmount {
        get { return result.hasAmount; }
      }
      public ulong Amount {
        get { return result.Amount; }
        set { SetAmount(value); }
      }
      public Builder SetAmount(ulong value) {
        PrepareBuilder();
        result.hasAmount = true;
        result.amount_ = value;
        return this;
      }
      public Builder ClearAmount() {
        PrepareBuilder();
        result.hasAmount = false;
        result.amount_ = 0UL;
        return this;
      }
      
      public bool HasFeeAmount {
        get { return result.hasFeeAmount; }
      }
      public ulong FeeAmount {
        get { return result.FeeAmount; }
        set { SetFeeAmount(value); }
      }
      public Builder SetFeeAmount(ulong value) {
        PrepareBuilder();
        result.hasFeeAmount = true;
        result.feeAmount_ = value;
        return this;
      }
      public Builder ClearFeeAmount() {
        PrepareBuilder();
        result.hasFeeAmount = false;
        result.feeAmount_ = 0UL;
        return this;
      }
      
      public bool HasDeferred {
        get { return result.hasDeferred; }
      }
      public bool Deferred {
        get { return result.Deferred; }
        set { SetDeferred(value); }
      }
      public Builder SetDeferred(bool value) {
        PrepareBuilder();
        result.hasDeferred = true;
        result.deferred_ = value;
        return this;
      }
      public Builder ClearDeferred() {
        PrepareBuilder();
        result.hasDeferred = false;
        result.deferred_ = false;
        return this;
      }
      
      public bool HasHasBeenDeferred {
        get { return result.hasHasBeenDeferred; }
      }
      public bool HasBeenDeferred {
        get { return result.HasBeenDeferred; }
        set { SetHasBeenDeferred(value); }
      }
      public Builder SetHasBeenDeferred(bool value) {
        PrepareBuilder();
        result.hasHasBeenDeferred = true;
        result.hasBeenDeferred_ = value;
        return this;
      }
      public Builder ClearHasBeenDeferred() {
        PrepareBuilder();
        result.hasHasBeenDeferred = false;
        result.hasBeenDeferred_ = false;
        return this;
      }
      
      public bool HasProgress {
        get { return result.hasProgress; }
      }
      public ulong Progress {
        get { return result.Progress; }
        set { SetProgress(value); }
      }
      public Builder SetProgress(ulong value) {
        PrepareBuilder();
        result.hasProgress = true;
        result.progress_ = value;
        return this;
      }
      public Builder ClearProgress() {
        PrepareBuilder();
        result.hasProgress = false;
        result.progress_ = 0UL;
        return this;
      }
      
      public bool HasCreated {
        get { return result.hasCreated; }
      }
      public ulong Created {
        get { return result.Created; }
        set { SetCreated(value); }
      }
      public Builder SetCreated(ulong value) {
        PrepareBuilder();
        result.hasCreated = true;
        result.created_ = value;
        return this;
      }
      public Builder ClearCreated() {
        PrepareBuilder();
        result.hasCreated = false;
        result.created_ = 0UL;
        return this;
      }
      
      public bool HasRiskCompleted {
        get { return result.hasRiskCompleted; }
      }
      public ulong RiskCompleted {
        get { return result.RiskCompleted; }
        set { SetRiskCompleted(value); }
      }
      public Builder SetRiskCompleted(ulong value) {
        PrepareBuilder();
        result.hasRiskCompleted = true;
        result.riskCompleted_ = value;
        return this;
      }
      public Builder ClearRiskCompleted() {
        PrepareBuilder();
        result.hasRiskCompleted = false;
        result.riskCompleted_ = 0UL;
        return this;
      }
      
      public bool HasRiskResult {
        get { return result.hasRiskResult; }
      }
      public ulong RiskResult {
        get { return result.RiskResult; }
        set { SetRiskResult(value); }
      }
      public Builder SetRiskResult(ulong value) {
        PrepareBuilder();
        result.hasRiskResult = true;
        result.riskResult_ = value;
        return this;
      }
      public Builder ClearRiskResult() {
        PrepareBuilder();
        result.hasRiskResult = false;
        result.riskResult_ = 0UL;
        return this;
      }
      
      public bool HasRiskVerdict {
        get { return result.hasRiskVerdict; }
      }
      public ulong RiskVerdict {
        get { return result.RiskVerdict; }
        set { SetRiskVerdict(value); }
      }
      public Builder SetRiskVerdict(ulong value) {
        PrepareBuilder();
        result.hasRiskVerdict = true;
        result.riskVerdict_ = value;
        return this;
      }
      public Builder ClearRiskVerdict() {
        PrepareBuilder();
        result.hasRiskVerdict = false;
        result.riskVerdict_ = 0UL;
        return this;
      }
      
      public bool HasCompleted {
        get { return result.hasCompleted; }
      }
      public ulong Completed {
        get { return result.Completed; }
        set { SetCompleted(value); }
      }
      public Builder SetCompleted(ulong value) {
        PrepareBuilder();
        result.hasCompleted = true;
        result.completed_ = value;
        return this;
      }
      public Builder ClearCompleted() {
        PrepareBuilder();
        result.hasCompleted = false;
        result.completed_ = 0UL;
        return this;
      }
      
      public bool HasResultCode {
        get { return result.hasResultCode; }
      }
      public ulong ResultCode {
        get { return result.ResultCode; }
        set { SetResultCode(value); }
      }
      public Builder SetResultCode(ulong value) {
        PrepareBuilder();
        result.hasResultCode = true;
        result.resultCode_ = value;
        return this;
      }
      public Builder ClearResultCode() {
        PrepareBuilder();
        result.hasResultCode = false;
        result.resultCode_ = 0UL;
        return this;
      }
      
      public bool HasAccountForItem {
       get { return result.hasAccountForItem; }
      }
      public global::bnet.protocol.exchange.BlobFrom AccountForItem {
        get { return result.AccountForItem; }
        set { SetAccountForItem(value); }
      }
      public Builder SetAccountForItem(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountForItem = true;
        result.accountForItem_ = value;
        return this;
      }
      public Builder SetAccountForItem(global::bnet.protocol.exchange.BlobFrom.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountForItem = true;
        result.accountForItem_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountForItem(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountForItem &&
            result.accountForItem_ != global::bnet.protocol.exchange.BlobFrom.DefaultInstance) {
            result.accountForItem_ = global::bnet.protocol.exchange.BlobFrom.CreateBuilder(result.accountForItem_).MergeFrom(value).BuildPartial();
        } else {
          result.accountForItem_ = value;
        }
        result.hasAccountForItem = true;
        return this;
      }
      public Builder ClearAccountForItem() {
        PrepareBuilder();
        result.hasAccountForItem = false;
        result.accountForItem_ = null;
        return this;
      }
      
      public bool HasAccountForMoney {
       get { return result.hasAccountForMoney; }
      }
      public global::bnet.protocol.exchange.BlobFrom AccountForMoney {
        get { return result.AccountForMoney; }
        set { SetAccountForMoney(value); }
      }
      public Builder SetAccountForMoney(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccountForMoney = true;
        result.accountForMoney_ = value;
        return this;
      }
      public Builder SetAccountForMoney(global::bnet.protocol.exchange.BlobFrom.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccountForMoney = true;
        result.accountForMoney_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccountForMoney(global::bnet.protocol.exchange.BlobFrom value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccountForMoney &&
            result.accountForMoney_ != global::bnet.protocol.exchange.BlobFrom.DefaultInstance) {
            result.accountForMoney_ = global::bnet.protocol.exchange.BlobFrom.CreateBuilder(result.accountForMoney_).MergeFrom(value).BuildPartial();
        } else {
          result.accountForMoney_ = value;
        }
        result.hasAccountForMoney = true;
        return this;
      }
      public Builder ClearAccountForMoney() {
        PrepareBuilder();
        result.hasAccountForMoney = false;
        result.accountForMoney_ = null;
        return this;
      }
      
      public bool HasOrderType {
        get { return result.hasOrderType; }
      }
      public uint OrderType {
        get { return result.OrderType; }
        set { SetOrderType(value); }
      }
      public Builder SetOrderType(uint value) {
        PrepareBuilder();
        result.hasOrderType = true;
        result.orderType_ = value;
        return this;
      }
      public Builder ClearOrderType() {
        PrepareBuilder();
        result.hasOrderType = false;
        result.orderType_ = 0;
        return this;
      }
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      public ulong OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      public Builder SetOrderId(ulong value) {
        PrepareBuilder();
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        PrepareBuilder();
        result.hasOrderId = false;
        result.orderId_ = 0UL;
        return this;
      }
      
      public bool HasAuthId {
        get { return result.hasAuthId; }
      }
      public ulong AuthId {
        get { return result.AuthId; }
        set { SetAuthId(value); }
      }
      public Builder SetAuthId(ulong value) {
        PrepareBuilder();
        result.hasAuthId = true;
        result.authId_ = value;
        return this;
      }
      public Builder ClearAuthId() {
        PrepareBuilder();
        result.hasAuthId = false;
        result.authId_ = 0UL;
        return this;
      }
      
      public bool HasAuthObjectType {
        get { return result.hasAuthObjectType; }
      }
      public uint AuthObjectType {
        get { return result.AuthObjectType; }
        set { SetAuthObjectType(value); }
      }
      public Builder SetAuthObjectType(uint value) {
        PrepareBuilder();
        result.hasAuthObjectType = true;
        result.authObjectType_ = value;
        return this;
      }
      public Builder ClearAuthObjectType() {
        PrepareBuilder();
        result.hasAuthObjectType = false;
        result.authObjectType_ = 0;
        return this;
      }
      
      public bool HasTransDirection {
        get { return result.hasTransDirection; }
      }
      public string TransDirection {
        get { return result.TransDirection; }
        set { SetTransDirection(value); }
      }
      public Builder SetTransDirection(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTransDirection = true;
        result.transDirection_ = value;
        return this;
      }
      public Builder ClearTransDirection() {
        PrepareBuilder();
        result.hasTransDirection = false;
        result.transDirection_ = "";
        return this;
      }
      
      public bool HasAuthCompleteProgress {
        get { return result.hasAuthCompleteProgress; }
      }
      public ulong AuthCompleteProgress {
        get { return result.AuthCompleteProgress; }
        set { SetAuthCompleteProgress(value); }
      }
      public Builder SetAuthCompleteProgress(ulong value) {
        PrepareBuilder();
        result.hasAuthCompleteProgress = true;
        result.authCompleteProgress_ = value;
        return this;
      }
      public Builder ClearAuthCompleteProgress() {
        PrepareBuilder();
        result.hasAuthCompleteProgress = false;
        result.authCompleteProgress_ = 0UL;
        return this;
      }
      
      public bool HasAuthFilledProgress {
        get { return result.hasAuthFilledProgress; }
      }
      public ulong AuthFilledProgress {
        get { return result.AuthFilledProgress; }
        set { SetAuthFilledProgress(value); }
      }
      public Builder SetAuthFilledProgress(ulong value) {
        PrepareBuilder();
        result.hasAuthFilledProgress = true;
        result.authFilledProgress_ = value;
        return this;
      }
      public Builder ClearAuthFilledProgress() {
        PrepareBuilder();
        result.hasAuthFilledProgress = false;
        result.authFilledProgress_ = 0UL;
        return this;
      }
      
      public bool HasAuthTotalProgress {
        get { return result.hasAuthTotalProgress; }
      }
      public ulong AuthTotalProgress {
        get { return result.AuthTotalProgress; }
        set { SetAuthTotalProgress(value); }
      }
      public Builder SetAuthTotalProgress(ulong value) {
        PrepareBuilder();
        result.hasAuthTotalProgress = true;
        result.authTotalProgress_ = value;
        return this;
      }
      public Builder ClearAuthTotalProgress() {
        PrepareBuilder();
        result.hasAuthTotalProgress = false;
        result.authTotalProgress_ = 0UL;
        return this;
      }
      
      public bool HasAuthHandle {
       get { return result.hasAuthHandle; }
      }
      public global::bnet.protocol.exchange.BlobFromOfType AuthHandle {
        get { return result.AuthHandle; }
        set { SetAuthHandle(value); }
      }
      public Builder SetAuthHandle(global::bnet.protocol.exchange.BlobFromOfType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAuthHandle = true;
        result.authHandle_ = value;
        return this;
      }
      public Builder SetAuthHandle(global::bnet.protocol.exchange.BlobFromOfType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAuthHandle = true;
        result.authHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAuthHandle(global::bnet.protocol.exchange.BlobFromOfType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAuthHandle &&
            result.authHandle_ != global::bnet.protocol.exchange.BlobFromOfType.DefaultInstance) {
            result.authHandle_ = global::bnet.protocol.exchange.BlobFromOfType.CreateBuilder(result.authHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.authHandle_ = value;
        }
        result.hasAuthHandle = true;
        return this;
      }
      public Builder ClearAuthHandle() {
        PrepareBuilder();
        result.hasAuthHandle = false;
        result.authHandle_ = null;
        return this;
      }
      
      public bool HasAuthDeferred {
        get { return result.hasAuthDeferred; }
      }
      public bool AuthDeferred {
        get { return result.AuthDeferred; }
        set { SetAuthDeferred(value); }
      }
      public Builder SetAuthDeferred(bool value) {
        PrepareBuilder();
        result.hasAuthDeferred = true;
        result.authDeferred_ = value;
        return this;
      }
      public Builder ClearAuthDeferred() {
        PrepareBuilder();
        result.hasAuthDeferred = false;
        result.authDeferred_ = false;
        return this;
      }
      
      public bool HasToken {
       get { return result.hasToken; }
      }
      public global::bnet.protocol.exchange.PartitionId Token {
        get { return result.Token; }
        set { SetToken(value); }
      }
      public Builder SetToken(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder SetToken(global::bnet.protocol.exchange.PartitionId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasToken = true;
        result.token_ = builderForValue.Build();
        return this;
      }
      public Builder MergeToken(global::bnet.protocol.exchange.PartitionId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasToken &&
            result.token_ != global::bnet.protocol.exchange.PartitionId.DefaultInstance) {
            result.token_ = global::bnet.protocol.exchange.PartitionId.CreateBuilder(result.token_).MergeFrom(value).BuildPartial();
        } else {
          result.token_ = value;
        }
        result.hasToken = true;
        return this;
      }
      public Builder ClearToken() {
        PrepareBuilder();
        result.hasToken = false;
        result.token_ = null;
        return this;
      }
    }
    static HistoryData() {
      object.ReferenceEquals(global::bnet.protocol.exchange.ExchangeTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
