// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.channel_invitation {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class ChannelInvitationService {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_invitation_AcceptInvitationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.AcceptInvitationRequest, global::bnet.protocol.channel_invitation.AcceptInvitationRequest.Builder> internal__static_bnet_protocol_channel_invitation_AcceptInvitationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_invitation_AcceptInvitationResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.AcceptInvitationResponse, global::bnet.protocol.channel_invitation.AcceptInvitationResponse.Builder> internal__static_bnet_protocol_channel_invitation_AcceptInvitationResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_invitation_SubscribeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.SubscribeRequest, global::bnet.protocol.channel_invitation.SubscribeRequest.Builder> internal__static_bnet_protocol_channel_invitation_SubscribeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_invitation_SubscribeResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.SubscribeResponse, global::bnet.protocol.channel_invitation.SubscribeResponse.Builder> internal__static_bnet_protocol_channel_invitation_SubscribeResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_invitation_UnsubscribeRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.UnsubscribeRequest, global::bnet.protocol.channel_invitation.UnsubscribeRequest.Builder> internal__static_bnet_protocol_channel_invitation_UnsubscribeRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_invitation_SuggestInvitationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.SuggestInvitationRequest, global::bnet.protocol.channel_invitation.SuggestInvitationRequest.Builder> internal__static_bnet_protocol_channel_invitation_SuggestInvitationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_invitation_RevokeInvitationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.RevokeInvitationRequest, global::bnet.protocol.channel_invitation.RevokeInvitationRequest.Builder> internal__static_bnet_protocol_channel_invitation_RevokeInvitationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_invitation_HasRoomForInvitationRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.HasRoomForInvitationRequest, global::bnet.protocol.channel_invitation.HasRoomForInvitationRequest.Builder> internal__static_bnet_protocol_channel_invitation_HasRoomForInvitationRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_invitation_InvitationAddedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.InvitationAddedNotification, global::bnet.protocol.channel_invitation.InvitationAddedNotification.Builder> internal__static_bnet_protocol_channel_invitation_InvitationAddedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_invitation_InvitationRemovedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.InvitationRemovedNotification, global::bnet.protocol.channel_invitation.InvitationRemovedNotification.Builder> internal__static_bnet_protocol_channel_invitation_InvitationRemovedNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_channel_invitation_SuggestionAddedNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.SuggestionAddedNotification, global::bnet.protocol.channel_invitation.SuggestionAddedNotification.Builder> internal__static_bnet_protocol_channel_invitation_SuggestionAddedNotification__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static ChannelInvitationService() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "Ch1ibmV0L2NoYW5uZWxfaW52aXRhdGlvbi5wcm90bxIgYm5ldC5wcm90b2Nv" + 
            "bC5jaGFubmVsX2ludml0YXRpb24aJGdvb2dsZS9wcm90b2J1Zi9jc2hhcnBf" + 
            "b3B0aW9ucy5wcm90bxoRYm5ldC9lbnRpdHkucHJvdG8aG2JuZXQvaW52aXRh" + 
            "dGlvbl90eXBlcy5wcm90bxoOYm5ldC9ycGMucHJvdG8aGmJuZXQvY2hhbm5l" + 
            "bF9zZXJ2aWNlLnByb3RvGiNibmV0L2NoYW5uZWxfaW52aXRhdGlvbl90eXBl" + 
            "cy5wcm90bxoYYm5ldC9jaGFubmVsX3R5cGVzLnByb3RvIqgBChdBY2NlcHRJ" + 
            "bnZpdGF0aW9uUmVxdWVzdBIpCghhZ2VudF9pZBgBIAEoCzIXLmJuZXQucHJv" + 
            "dG9jb2wuRW50aXR5SWQSOAoMbWVtYmVyX3N0YXRlGAIgASgLMiIuYm5ldC5w" + 
            "cm90b2NvbC5jaGFubmVsLk1lbWJlclN0YXRlEhUKDWludml0YXRpb25faWQY" + 
            "AyACKAYSEQoJb2JqZWN0X2lkGAQgAigEIi0KGEFjY2VwdEludml0YXRpb25S" + 
            "ZXNwb25zZRIRCglvYmplY3RfaWQYASACKAQiUAoQU3Vic2NyaWJlUmVxdWVz" + 
            "dBIpCghhZ2VudF9pZBgBIAEoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQS" + 
            "EQoJb2JqZWN0X2lkGAIgAigEIqIBChFTdWJzY3JpYmVSZXNwb25zZRJKCgpj" + 
            "b2xsZWN0aW9uGAEgAygLMjYuYm5ldC5wcm90b2NvbC5jaGFubmVsX2ludml0" + 
            "YXRpb24uSW52aXRhdGlvbkNvbGxlY3Rpb24SQQoTcmVjZWl2ZWRfaW52aXRh" + 
            "dGlvbhgCIAMoCzIkLmJuZXQucHJvdG9jb2wuaW52aXRhdGlvbi5JbnZpdGF0" + 
            "aW9uIj8KElVuc3Vic2NyaWJlUmVxdWVzdBIpCghhZ2VudF9pZBgBIAEoCzIX" + 
            "LmJuZXQucHJvdG9jb2wuRW50aXR5SWQizAEKGFN1Z2dlc3RJbnZpdGF0aW9u" + 
            "UmVxdWVzdBIpCghhZ2VudF9pZBgBIAEoCzIXLmJuZXQucHJvdG9jb2wuRW50" + 
            "aXR5SWQSKwoKY2hhbm5lbF9pZBgCIAIoCzIXLmJuZXQucHJvdG9jb2wuRW50" + 
            "aXR5SWQSKgoJdGFyZ2V0X2lkGAMgAigLMhcuYm5ldC5wcm90b2NvbC5FbnRp" + 
            "dHlJZBIsCgthcHByb3ZhbF9pZBgEIAEoCzIXLmJuZXQucHJvdG9jb2wuRW50" + 
            "aXR5SWQitAEKF1Jldm9rZUludml0YXRpb25SZXF1ZXN0EikKCGFnZW50X2lk" + 
            "GAEgASgLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJZBIqCgl0YXJnZXRfaWQY" + 
            "AiABKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkEhUKDWludml0YXRpb25f" + 
            "aWQYAyACKAYSKwoKY2hhbm5lbF9pZBgEIAIoCzIXLmJuZXQucHJvdG9jb2wu" + 
            "RW50aXR5SWQiMwobSGFzUm9vbUZvckludml0YXRpb25SZXF1ZXN0EhQKDHNl" + 
            "cnZpY2VfdHlwZRgBIAIoDSJXChtJbnZpdGF0aW9uQWRkZWROb3RpZmljYXRp" + 
            "b24SOAoKaW52aXRhdGlvbhgBIAIoCzIkLmJuZXQucHJvdG9jb2wuaW52aXRh" + 
            "dGlvbi5JbnZpdGF0aW9uImkKHUludml0YXRpb25SZW1vdmVkTm90aWZpY2F0" + 
            "aW9uEjgKCmludml0YXRpb24YASACKAsyJC5ibmV0LnByb3RvY29sLmludml0" + 
            "YXRpb24uSW52aXRhdGlvbhIOCgZyZWFzb24YAiABKA0iVwobU3VnZ2VzdGlv" + 
            "bkFkZGVkTm90aWZpY2F0aW9uEjgKCnN1Z2dlc3Rpb24YASACKAsyJC5ibmV0" + 
            "LnByb3RvY29sLmludml0YXRpb24uU3VnZ2VzdGlvbjK7BgoYQ2hhbm5lbElu" + 
            "dml0YXRpb25TZXJ2aWNlEnoKCVN1YnNjcmliZRIyLmJuZXQucHJvdG9jb2wu" + 
            "Y2hhbm5lbF9pbnZpdGF0aW9uLlN1YnNjcmliZVJlcXVlc3QaMy5ibmV0LnBy" + 
            "b3RvY29sLmNoYW5uZWxfaW52aXRhdGlvbi5TdWJzY3JpYmVSZXNwb25zZSIE" + 
            "gLUYARJgCgtVbnN1YnNjcmliZRI0LmJuZXQucHJvdG9jb2wuY2hhbm5lbF9p" + 
            "bnZpdGF0aW9uLlVuc3Vic2NyaWJlUmVxdWVzdBoVLmJuZXQucHJvdG9jb2wu" + 
            "Tm9EYXRhIgSAtRgCEnkKDlNlbmRJbnZpdGF0aW9uEi8uYm5ldC5wcm90b2Nv" + 
            "bC5pbnZpdGF0aW9uLlNlbmRJbnZpdGF0aW9uUmVxdWVzdBowLmJuZXQucHJv" + 
            "dG9jb2wuaW52aXRhdGlvbi5TZW5kSW52aXRhdGlvblJlc3BvbnNlIgSAtRgD" + 
            "Eo8BChBBY2NlcHRJbnZpdGF0aW9uEjkuYm5ldC5wcm90b2NvbC5jaGFubmVs" + 
            "X2ludml0YXRpb24uQWNjZXB0SW52aXRhdGlvblJlcXVlc3QaOi5ibmV0LnBy" + 
            "b3RvY29sLmNoYW5uZWxfaW52aXRhdGlvbi5BY2NlcHRJbnZpdGF0aW9uUmVz" + 
            "cG9uc2UiBIC1GAQSWgoRRGVjbGluZUludml0YXRpb24SKC5ibmV0LnByb3Rv" + 
            "Y29sLmludml0YXRpb24uR2VuZXJpY1JlcXVlc3QaFS5ibmV0LnByb3RvY29s" + 
            "Lk5vRGF0YSIEgLUYBRJqChBSZXZva2VJbnZpdGF0aW9uEjkuYm5ldC5wcm90" + 
            "b2NvbC5jaGFubmVsX2ludml0YXRpb24uUmV2b2tlSW52aXRhdGlvblJlcXVl" + 
            "c3QaFS5ibmV0LnByb3RvY29sLk5vRGF0YSIEgLUYBhJsChFTdWdnZXN0SW52" + 
            "aXRhdGlvbhI6LmJuZXQucHJvdG9jb2wuY2hhbm5lbF9pbnZpdGF0aW9uLlN1" + 
            "Z2dlc3RJbnZpdGF0aW9uUmVxdWVzdBoVLmJuZXQucHJvdG9jb2wuTm9EYXRh" + 
            "IgSAtRgHMpoEChdDaGFubmVsSW52aXRhdGlvbk5vdGlmeRKAAQodTm90aWZ5" + 
            "UmVjZWl2ZWRJbnZpdGF0aW9uQWRkZWQSPS5ibmV0LnByb3RvY29sLmNoYW5u" + 
            "ZWxfaW52aXRhdGlvbi5JbnZpdGF0aW9uQWRkZWROb3RpZmljYXRpb24aGi5i" + 
            "bmV0LnByb3RvY29sLk5PX1JFU1BPTlNFIgSAtRgBEoQBCh9Ob3RpZnlSZWNl" + 
            "aXZlZEludml0YXRpb25SZW1vdmVkEj8uYm5ldC5wcm90b2NvbC5jaGFubmVs" + 
            "X2ludml0YXRpb24uSW52aXRhdGlvblJlbW92ZWROb3RpZmljYXRpb24aGi5i" + 
            "bmV0LnByb3RvY29sLk5PX1JFU1BPTlNFIgSAtRgCEoABCh1Ob3RpZnlSZWNl" + 
            "aXZlZFN1Z2dlc3Rpb25BZGRlZBI9LmJuZXQucHJvdG9jb2wuY2hhbm5lbF9p" + 
            "bnZpdGF0aW9uLlN1Z2dlc3Rpb25BZGRlZE5vdGlmaWNhdGlvbhoaLmJuZXQu" + 
            "cHJvdG9jb2wuTk9fUkVTUE9OU0UiBIC1GAMScgoUSGFzUm9vbUZvckludml0" + 
            "YXRpb24SPS5ibmV0LnByb3RvY29sLmNoYW5uZWxfaW52aXRhdGlvbi5IYXNS" + 
            "b29tRm9ySW52aXRhdGlvblJlcXVlc3QaFS5ibmV0LnByb3RvY29sLk5vRGF0" + 
            "YSIEgLUYBEIggAEAwj4aEhhDaGFubmVsSW52aXRhdGlvblNlcnZpY2U=");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bnet_protocol_channel_invitation_AcceptInvitationRequest__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bnet_protocol_channel_invitation_AcceptInvitationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.AcceptInvitationRequest, global::bnet.protocol.channel_invitation.AcceptInvitationRequest.Builder>(internal__static_bnet_protocol_channel_invitation_AcceptInvitationRequest__Descriptor,
                  new string[] { "AgentId", "MemberState", "InvitationId", "ObjectId", });
          internal__static_bnet_protocol_channel_invitation_AcceptInvitationResponse__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bnet_protocol_channel_invitation_AcceptInvitationResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.AcceptInvitationResponse, global::bnet.protocol.channel_invitation.AcceptInvitationResponse.Builder>(internal__static_bnet_protocol_channel_invitation_AcceptInvitationResponse__Descriptor,
                  new string[] { "ObjectId", });
          internal__static_bnet_protocol_channel_invitation_SubscribeRequest__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bnet_protocol_channel_invitation_SubscribeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.SubscribeRequest, global::bnet.protocol.channel_invitation.SubscribeRequest.Builder>(internal__static_bnet_protocol_channel_invitation_SubscribeRequest__Descriptor,
                  new string[] { "AgentId", "ObjectId", });
          internal__static_bnet_protocol_channel_invitation_SubscribeResponse__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bnet_protocol_channel_invitation_SubscribeResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.SubscribeResponse, global::bnet.protocol.channel_invitation.SubscribeResponse.Builder>(internal__static_bnet_protocol_channel_invitation_SubscribeResponse__Descriptor,
                  new string[] { "Collection", "ReceivedInvitation", });
          internal__static_bnet_protocol_channel_invitation_UnsubscribeRequest__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bnet_protocol_channel_invitation_UnsubscribeRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.UnsubscribeRequest, global::bnet.protocol.channel_invitation.UnsubscribeRequest.Builder>(internal__static_bnet_protocol_channel_invitation_UnsubscribeRequest__Descriptor,
                  new string[] { "AgentId", });
          internal__static_bnet_protocol_channel_invitation_SuggestInvitationRequest__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bnet_protocol_channel_invitation_SuggestInvitationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.SuggestInvitationRequest, global::bnet.protocol.channel_invitation.SuggestInvitationRequest.Builder>(internal__static_bnet_protocol_channel_invitation_SuggestInvitationRequest__Descriptor,
                  new string[] { "AgentId", "ChannelId", "TargetId", "ApprovalId", });
          internal__static_bnet_protocol_channel_invitation_RevokeInvitationRequest__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bnet_protocol_channel_invitation_RevokeInvitationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.RevokeInvitationRequest, global::bnet.protocol.channel_invitation.RevokeInvitationRequest.Builder>(internal__static_bnet_protocol_channel_invitation_RevokeInvitationRequest__Descriptor,
                  new string[] { "AgentId", "TargetId", "InvitationId", "ChannelId", });
          internal__static_bnet_protocol_channel_invitation_HasRoomForInvitationRequest__Descriptor = Descriptor.MessageTypes[7];
          internal__static_bnet_protocol_channel_invitation_HasRoomForInvitationRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.HasRoomForInvitationRequest, global::bnet.protocol.channel_invitation.HasRoomForInvitationRequest.Builder>(internal__static_bnet_protocol_channel_invitation_HasRoomForInvitationRequest__Descriptor,
                  new string[] { "ServiceType", });
          internal__static_bnet_protocol_channel_invitation_InvitationAddedNotification__Descriptor = Descriptor.MessageTypes[8];
          internal__static_bnet_protocol_channel_invitation_InvitationAddedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.InvitationAddedNotification, global::bnet.protocol.channel_invitation.InvitationAddedNotification.Builder>(internal__static_bnet_protocol_channel_invitation_InvitationAddedNotification__Descriptor,
                  new string[] { "Invitation", });
          internal__static_bnet_protocol_channel_invitation_InvitationRemovedNotification__Descriptor = Descriptor.MessageTypes[9];
          internal__static_bnet_protocol_channel_invitation_InvitationRemovedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.InvitationRemovedNotification, global::bnet.protocol.channel_invitation.InvitationRemovedNotification.Builder>(internal__static_bnet_protocol_channel_invitation_InvitationRemovedNotification__Descriptor,
                  new string[] { "Invitation", "Reason", });
          internal__static_bnet_protocol_channel_invitation_SuggestionAddedNotification__Descriptor = Descriptor.MessageTypes[10];
          internal__static_bnet_protocol_channel_invitation_SuggestionAddedNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.channel_invitation.SuggestionAddedNotification, global::bnet.protocol.channel_invitation.SuggestionAddedNotification.Builder>(internal__static_bnet_protocol_channel_invitation_SuggestionAddedNotification__Descriptor,
                  new string[] { "Suggestion", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::Google.ProtocolBuffers.DescriptorProtos.CSharpOptions.RegisterAllExtensions(registry);
          global::bnet.protocol.Entity.RegisterAllExtensions(registry);
          global::bnet.protocol.invitation.InvitationTypes.RegisterAllExtensions(registry);
          global::bnet.protocol.Rpc.RegisterAllExtensions(registry);
          global::bnet.protocol.channel.ChannelService.RegisterAllExtensions(registry);
          global::bnet.protocol.channel_invitation.ChannelInvitationTypes.RegisterAllExtensions(registry);
          global::bnet.protocol.channel.ChannelTypes.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::Google.ProtocolBuffers.DescriptorProtos.CSharpOptions.Descriptor, 
            global::bnet.protocol.Entity.Descriptor, 
            global::bnet.protocol.invitation.InvitationTypes.Descriptor, 
            global::bnet.protocol.Rpc.Descriptor, 
            global::bnet.protocol.channel.ChannelService.Descriptor, 
            global::bnet.protocol.channel_invitation.ChannelInvitationTypes.Descriptor, 
            global::bnet.protocol.channel.ChannelTypes.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AcceptInvitationRequest : pb::GeneratedMessage<AcceptInvitationRequest, AcceptInvitationRequest.Builder> {
    private AcceptInvitationRequest() { }
    private static readonly AcceptInvitationRequest defaultInstance = new AcceptInvitationRequest().MakeReadOnly();
    private static readonly string[] _acceptInvitationRequestFieldNames = new string[] { "agent_id", "invitation_id", "member_state", "object_id" };
    private static readonly uint[] _acceptInvitationRequestFieldTags = new uint[] { 10, 25, 18, 32 };
    public static AcceptInvitationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AcceptInvitationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AcceptInvitationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_AcceptInvitationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AcceptInvitationRequest, AcceptInvitationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_AcceptInvitationRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int MemberStateFieldNumber = 2;
    private bool hasMemberState;
    private global::bnet.protocol.channel.MemberState memberState_;
    public bool HasMemberState {
      get { return hasMemberState; }
    }
    public global::bnet.protocol.channel.MemberState MemberState {
      get { return memberState_ ?? global::bnet.protocol.channel.MemberState.DefaultInstance; }
    }
    
    public const int InvitationIdFieldNumber = 3;
    private bool hasInvitationId;
    private ulong invitationId_;
    public bool HasInvitationId {
      get { return hasInvitationId; }
    }
    public ulong InvitationId {
      get { return invitationId_; }
    }
    
    public const int ObjectIdFieldNumber = 4;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasInvitationId) return false;
        if (!hasObjectId) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasMemberState) {
          if (!MemberState.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _acceptInvitationRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasMemberState) {
        output.WriteMessage(2, field_names[2], MemberState);
      }
      if (hasInvitationId) {
        output.WriteFixed64(3, field_names[1], InvitationId);
      }
      if (hasObjectId) {
        output.WriteUInt64(4, field_names[3], ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasMemberState) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, MemberState);
        }
        if (hasInvitationId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(3, InvitationId);
        }
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AcceptInvitationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AcceptInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AcceptInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AcceptInvitationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AcceptInvitationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AcceptInvitationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AcceptInvitationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AcceptInvitationRequest result;
      
      private AcceptInvitationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AcceptInvitationRequest original = result;
          result = new AcceptInvitationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AcceptInvitationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel_invitation.AcceptInvitationRequest.Descriptor; }
      }
      
      public override AcceptInvitationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.channel_invitation.AcceptInvitationRequest.DefaultInstance; }
      }
      
      public override AcceptInvitationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AcceptInvitationRequest) {
          return MergeFrom((AcceptInvitationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AcceptInvitationRequest other) {
        if (other == global::bnet.protocol.channel_invitation.AcceptInvitationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasMemberState) {
          MergeMemberState(other.MemberState);
        }
        if (other.HasInvitationId) {
          InvitationId = other.InvitationId;
        }
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_acceptInvitationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _acceptInvitationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.channel.MemberState.Builder subBuilder = global::bnet.protocol.channel.MemberState.CreateBuilder();
              if (result.hasMemberState) {
                subBuilder.MergeFrom(MemberState);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              MemberState = subBuilder.BuildPartial();
              break;
            }
            case 25: {
              result.hasInvitationId = input.ReadFixed64(ref result.invitationId_);
              break;
            }
            case 32: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasMemberState {
       get { return result.hasMemberState; }
      }
      public global::bnet.protocol.channel.MemberState MemberState {
        get { return result.MemberState; }
        set { SetMemberState(value); }
      }
      public Builder SetMemberState(global::bnet.protocol.channel.MemberState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMemberState = true;
        result.memberState_ = value;
        return this;
      }
      public Builder SetMemberState(global::bnet.protocol.channel.MemberState.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasMemberState = true;
        result.memberState_ = builderForValue.Build();
        return this;
      }
      public Builder MergeMemberState(global::bnet.protocol.channel.MemberState value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasMemberState &&
            result.memberState_ != global::bnet.protocol.channel.MemberState.DefaultInstance) {
            result.memberState_ = global::bnet.protocol.channel.MemberState.CreateBuilder(result.memberState_).MergeFrom(value).BuildPartial();
        } else {
          result.memberState_ = value;
        }
        result.hasMemberState = true;
        return this;
      }
      public Builder ClearMemberState() {
        PrepareBuilder();
        result.hasMemberState = false;
        result.memberState_ = null;
        return this;
      }
      
      public bool HasInvitationId {
        get { return result.hasInvitationId; }
      }
      public ulong InvitationId {
        get { return result.InvitationId; }
        set { SetInvitationId(value); }
      }
      public Builder SetInvitationId(ulong value) {
        PrepareBuilder();
        result.hasInvitationId = true;
        result.invitationId_ = value;
        return this;
      }
      public Builder ClearInvitationId() {
        PrepareBuilder();
        result.hasInvitationId = false;
        result.invitationId_ = 0;
        return this;
      }
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static AcceptInvitationRequest() {
      object.ReferenceEquals(global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AcceptInvitationResponse : pb::GeneratedMessage<AcceptInvitationResponse, AcceptInvitationResponse.Builder> {
    private AcceptInvitationResponse() { }
    private static readonly AcceptInvitationResponse defaultInstance = new AcceptInvitationResponse().MakeReadOnly();
    private static readonly string[] _acceptInvitationResponseFieldNames = new string[] { "object_id" };
    private static readonly uint[] _acceptInvitationResponseFieldTags = new uint[] { 8 };
    public static AcceptInvitationResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AcceptInvitationResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AcceptInvitationResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_AcceptInvitationResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AcceptInvitationResponse, AcceptInvitationResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_AcceptInvitationResponse__FieldAccessorTable; }
    }
    
    public const int ObjectIdFieldNumber = 1;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasObjectId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _acceptInvitationResponseFieldNames;
      if (hasObjectId) {
        output.WriteUInt64(1, field_names[0], ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AcceptInvitationResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AcceptInvitationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AcceptInvitationResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AcceptInvitationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AcceptInvitationResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AcceptInvitationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AcceptInvitationResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AcceptInvitationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AcceptInvitationResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AcceptInvitationResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AcceptInvitationResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AcceptInvitationResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AcceptInvitationResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AcceptInvitationResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AcceptInvitationResponse result;
      
      private AcceptInvitationResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          AcceptInvitationResponse original = result;
          result = new AcceptInvitationResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AcceptInvitationResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel_invitation.AcceptInvitationResponse.Descriptor; }
      }
      
      public override AcceptInvitationResponse DefaultInstanceForType {
        get { return global::bnet.protocol.channel_invitation.AcceptInvitationResponse.DefaultInstance; }
      }
      
      public override AcceptInvitationResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AcceptInvitationResponse) {
          return MergeFrom((AcceptInvitationResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AcceptInvitationResponse other) {
        if (other == global::bnet.protocol.channel_invitation.AcceptInvitationResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_acceptInvitationResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _acceptInvitationResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static AcceptInvitationResponse() {
      object.ReferenceEquals(global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeRequest : pb::GeneratedMessage<SubscribeRequest, SubscribeRequest.Builder> {
    private SubscribeRequest() { }
    private static readonly SubscribeRequest defaultInstance = new SubscribeRequest().MakeReadOnly();
    private static readonly string[] _subscribeRequestFieldNames = new string[] { "agent_id", "object_id" };
    private static readonly uint[] _subscribeRequestFieldTags = new uint[] { 10, 16 };
    public static SubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_SubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeRequest, SubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_SubscribeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ObjectIdFieldNumber = 2;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasObjectId) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasObjectId) {
        output.WriteUInt64(2, field_names[1], ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeRequest result;
      
      private SubscribeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeRequest original = result;
          result = new SubscribeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel_invitation.SubscribeRequest.Descriptor; }
      }
      
      public override SubscribeRequest DefaultInstanceForType {
        get { return global::bnet.protocol.channel_invitation.SubscribeRequest.DefaultInstance; }
      }
      
      public override SubscribeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeRequest) {
          return MergeFrom((SubscribeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeRequest other) {
        if (other == global::bnet.protocol.channel_invitation.SubscribeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static SubscribeRequest() {
      object.ReferenceEquals(global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeResponse : pb::GeneratedMessage<SubscribeResponse, SubscribeResponse.Builder> {
    private SubscribeResponse() { }
    private static readonly SubscribeResponse defaultInstance = new SubscribeResponse().MakeReadOnly();
    private static readonly string[] _subscribeResponseFieldNames = new string[] { "collection", "received_invitation" };
    private static readonly uint[] _subscribeResponseFieldTags = new uint[] { 10, 18 };
    public static SubscribeResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_SubscribeResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeResponse, SubscribeResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_SubscribeResponse__FieldAccessorTable; }
    }
    
    public const int CollectionFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.channel_invitation.InvitationCollection> collection_ = new pbc::PopsicleList<global::bnet.protocol.channel_invitation.InvitationCollection>();
    public scg::IList<global::bnet.protocol.channel_invitation.InvitationCollection> CollectionList {
      get { return collection_; }
    }
    public int CollectionCount {
      get { return collection_.Count; }
    }
    public global::bnet.protocol.channel_invitation.InvitationCollection GetCollection(int index) {
      return collection_[index];
    }
    
    public const int ReceivedInvitationFieldNumber = 2;
    private pbc::PopsicleList<global::bnet.protocol.invitation.Invitation> receivedInvitation_ = new pbc::PopsicleList<global::bnet.protocol.invitation.Invitation>();
    public scg::IList<global::bnet.protocol.invitation.Invitation> ReceivedInvitationList {
      get { return receivedInvitation_; }
    }
    public int ReceivedInvitationCount {
      get { return receivedInvitation_.Count; }
    }
    public global::bnet.protocol.invitation.Invitation GetReceivedInvitation(int index) {
      return receivedInvitation_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.channel_invitation.InvitationCollection element in CollectionList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.invitation.Invitation element in ReceivedInvitationList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeResponseFieldNames;
      if (collection_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], collection_);
      }
      if (receivedInvitation_.Count > 0) {
        output.WriteMessageArray(2, field_names[1], receivedInvitation_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.channel_invitation.InvitationCollection element in CollectionList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        foreach (global::bnet.protocol.invitation.Invitation element in ReceivedInvitationList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeResponse MakeReadOnly() {
      collection_.MakeReadOnly();
      receivedInvitation_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeResponse result;
      
      private SubscribeResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeResponse original = result;
          result = new SubscribeResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel_invitation.SubscribeResponse.Descriptor; }
      }
      
      public override SubscribeResponse DefaultInstanceForType {
        get { return global::bnet.protocol.channel_invitation.SubscribeResponse.DefaultInstance; }
      }
      
      public override SubscribeResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeResponse) {
          return MergeFrom((SubscribeResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeResponse other) {
        if (other == global::bnet.protocol.channel_invitation.SubscribeResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.collection_.Count != 0) {
          result.collection_.Add(other.collection_);
        }
        if (other.receivedInvitation_.Count != 0) {
          result.receivedInvitation_.Add(other.receivedInvitation_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.collection_, global::bnet.protocol.channel_invitation.InvitationCollection.DefaultInstance, extensionRegistry);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.receivedInvitation_, global::bnet.protocol.invitation.Invitation.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.channel_invitation.InvitationCollection> CollectionList {
        get { return PrepareBuilder().collection_; }
      }
      public int CollectionCount {
        get { return result.CollectionCount; }
      }
      public global::bnet.protocol.channel_invitation.InvitationCollection GetCollection(int index) {
        return result.GetCollection(index);
      }
      public Builder SetCollection(int index, global::bnet.protocol.channel_invitation.InvitationCollection value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.collection_[index] = value;
        return this;
      }
      public Builder SetCollection(int index, global::bnet.protocol.channel_invitation.InvitationCollection.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.collection_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddCollection(global::bnet.protocol.channel_invitation.InvitationCollection value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.collection_.Add(value);
        return this;
      }
      public Builder AddCollection(global::bnet.protocol.channel_invitation.InvitationCollection.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.collection_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeCollection(scg::IEnumerable<global::bnet.protocol.channel_invitation.InvitationCollection> values) {
        PrepareBuilder();
        result.collection_.Add(values);
        return this;
      }
      public Builder ClearCollection() {
        PrepareBuilder();
        result.collection_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.invitation.Invitation> ReceivedInvitationList {
        get { return PrepareBuilder().receivedInvitation_; }
      }
      public int ReceivedInvitationCount {
        get { return result.ReceivedInvitationCount; }
      }
      public global::bnet.protocol.invitation.Invitation GetReceivedInvitation(int index) {
        return result.GetReceivedInvitation(index);
      }
      public Builder SetReceivedInvitation(int index, global::bnet.protocol.invitation.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.receivedInvitation_[index] = value;
        return this;
      }
      public Builder SetReceivedInvitation(int index, global::bnet.protocol.invitation.Invitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.receivedInvitation_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddReceivedInvitation(global::bnet.protocol.invitation.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.receivedInvitation_.Add(value);
        return this;
      }
      public Builder AddReceivedInvitation(global::bnet.protocol.invitation.Invitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.receivedInvitation_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeReceivedInvitation(scg::IEnumerable<global::bnet.protocol.invitation.Invitation> values) {
        PrepareBuilder();
        result.receivedInvitation_.Add(values);
        return this;
      }
      public Builder ClearReceivedInvitation() {
        PrepareBuilder();
        result.receivedInvitation_.Clear();
        return this;
      }
    }
    static SubscribeResponse() {
      object.ReferenceEquals(global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnsubscribeRequest : pb::GeneratedMessage<UnsubscribeRequest, UnsubscribeRequest.Builder> {
    private UnsubscribeRequest() { }
    private static readonly UnsubscribeRequest defaultInstance = new UnsubscribeRequest().MakeReadOnly();
    private static readonly string[] _unsubscribeRequestFieldNames = new string[] { "agent_id" };
    private static readonly uint[] _unsubscribeRequestFieldTags = new uint[] { 10 };
    public static UnsubscribeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnsubscribeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnsubscribeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_UnsubscribeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnsubscribeRequest, UnsubscribeRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_UnsubscribeRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unsubscribeRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnsubscribeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnsubscribeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnsubscribeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnsubscribeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnsubscribeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnsubscribeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnsubscribeRequest result;
      
      private UnsubscribeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnsubscribeRequest original = result;
          result = new UnsubscribeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnsubscribeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel_invitation.UnsubscribeRequest.Descriptor; }
      }
      
      public override UnsubscribeRequest DefaultInstanceForType {
        get { return global::bnet.protocol.channel_invitation.UnsubscribeRequest.DefaultInstance; }
      }
      
      public override UnsubscribeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnsubscribeRequest) {
          return MergeFrom((UnsubscribeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnsubscribeRequest other) {
        if (other == global::bnet.protocol.channel_invitation.UnsubscribeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unsubscribeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unsubscribeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
    }
    static UnsubscribeRequest() {
      object.ReferenceEquals(global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SuggestInvitationRequest : pb::GeneratedMessage<SuggestInvitationRequest, SuggestInvitationRequest.Builder> {
    private SuggestInvitationRequest() { }
    private static readonly SuggestInvitationRequest defaultInstance = new SuggestInvitationRequest().MakeReadOnly();
    private static readonly string[] _suggestInvitationRequestFieldNames = new string[] { "agent_id", "approval_id", "channel_id", "target_id" };
    private static readonly uint[] _suggestInvitationRequestFieldTags = new uint[] { 10, 34, 18, 26 };
    public static SuggestInvitationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SuggestInvitationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SuggestInvitationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_SuggestInvitationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SuggestInvitationRequest, SuggestInvitationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_SuggestInvitationRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ChannelIdFieldNumber = 2;
    private bool hasChannelId;
    private global::bnet.protocol.EntityId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bnet.protocol.EntityId ChannelId {
      get { return channelId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int TargetIdFieldNumber = 3;
    private bool hasTargetId;
    private global::bnet.protocol.EntityId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bnet.protocol.EntityId TargetId {
      get { return targetId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ApprovalIdFieldNumber = 4;
    private bool hasApprovalId;
    private global::bnet.protocol.EntityId approvalId_;
    public bool HasApprovalId {
      get { return hasApprovalId; }
    }
    public global::bnet.protocol.EntityId ApprovalId {
      get { return approvalId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasChannelId) return false;
        if (!hasTargetId) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (!ChannelId.IsInitialized) return false;
        if (!TargetId.IsInitialized) return false;
        if (HasApprovalId) {
          if (!ApprovalId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _suggestInvitationRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasChannelId) {
        output.WriteMessage(2, field_names[2], ChannelId);
      }
      if (hasTargetId) {
        output.WriteMessage(3, field_names[3], TargetId);
      }
      if (hasApprovalId) {
        output.WriteMessage(4, field_names[1], ApprovalId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, ChannelId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, TargetId);
        }
        if (hasApprovalId) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, ApprovalId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SuggestInvitationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuggestInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuggestInvitationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuggestInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuggestInvitationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuggestInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SuggestInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SuggestInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SuggestInvitationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuggestInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SuggestInvitationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SuggestInvitationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SuggestInvitationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SuggestInvitationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SuggestInvitationRequest result;
      
      private SuggestInvitationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SuggestInvitationRequest original = result;
          result = new SuggestInvitationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SuggestInvitationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel_invitation.SuggestInvitationRequest.Descriptor; }
      }
      
      public override SuggestInvitationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.channel_invitation.SuggestInvitationRequest.DefaultInstance; }
      }
      
      public override SuggestInvitationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SuggestInvitationRequest) {
          return MergeFrom((SuggestInvitationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SuggestInvitationRequest other) {
        if (other == global::bnet.protocol.channel_invitation.SuggestInvitationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        if (other.HasApprovalId) {
          MergeApprovalId(other.ApprovalId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_suggestInvitationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _suggestInvitationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasApprovalId) {
                subBuilder.MergeFrom(ApprovalId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ApprovalId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bnet.protocol.EntityId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.channelId_ = global::bnet.protocol.EntityId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bnet.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
      
      public bool HasApprovalId {
       get { return result.hasApprovalId; }
      }
      public global::bnet.protocol.EntityId ApprovalId {
        get { return result.ApprovalId; }
        set { SetApprovalId(value); }
      }
      public Builder SetApprovalId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasApprovalId = true;
        result.approvalId_ = value;
        return this;
      }
      public Builder SetApprovalId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasApprovalId = true;
        result.approvalId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeApprovalId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasApprovalId &&
            result.approvalId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.approvalId_ = global::bnet.protocol.EntityId.CreateBuilder(result.approvalId_).MergeFrom(value).BuildPartial();
        } else {
          result.approvalId_ = value;
        }
        result.hasApprovalId = true;
        return this;
      }
      public Builder ClearApprovalId() {
        PrepareBuilder();
        result.hasApprovalId = false;
        result.approvalId_ = null;
        return this;
      }
    }
    static SuggestInvitationRequest() {
      object.ReferenceEquals(global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RevokeInvitationRequest : pb::GeneratedMessage<RevokeInvitationRequest, RevokeInvitationRequest.Builder> {
    private RevokeInvitationRequest() { }
    private static readonly RevokeInvitationRequest defaultInstance = new RevokeInvitationRequest().MakeReadOnly();
    private static readonly string[] _revokeInvitationRequestFieldNames = new string[] { "agent_id", "channel_id", "invitation_id", "target_id" };
    private static readonly uint[] _revokeInvitationRequestFieldTags = new uint[] { 10, 34, 25, 18 };
    public static RevokeInvitationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RevokeInvitationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RevokeInvitationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_RevokeInvitationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RevokeInvitationRequest, RevokeInvitationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_RevokeInvitationRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int TargetIdFieldNumber = 2;
    private bool hasTargetId;
    private global::bnet.protocol.EntityId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bnet.protocol.EntityId TargetId {
      get { return targetId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int InvitationIdFieldNumber = 3;
    private bool hasInvitationId;
    private ulong invitationId_;
    public bool HasInvitationId {
      get { return hasInvitationId; }
    }
    public ulong InvitationId {
      get { return invitationId_; }
    }
    
    public const int ChannelIdFieldNumber = 4;
    private bool hasChannelId;
    private global::bnet.protocol.EntityId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bnet.protocol.EntityId ChannelId {
      get { return channelId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasInvitationId) return false;
        if (!hasChannelId) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasTargetId) {
          if (!TargetId.IsInitialized) return false;
        }
        if (!ChannelId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _revokeInvitationRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasTargetId) {
        output.WriteMessage(2, field_names[3], TargetId);
      }
      if (hasInvitationId) {
        output.WriteFixed64(3, field_names[2], InvitationId);
      }
      if (hasChannelId) {
        output.WriteMessage(4, field_names[1], ChannelId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, TargetId);
        }
        if (hasInvitationId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(3, InvitationId);
        }
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, ChannelId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RevokeInvitationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RevokeInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RevokeInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RevokeInvitationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RevokeInvitationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RevokeInvitationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RevokeInvitationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RevokeInvitationRequest result;
      
      private RevokeInvitationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RevokeInvitationRequest original = result;
          result = new RevokeInvitationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RevokeInvitationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel_invitation.RevokeInvitationRequest.Descriptor; }
      }
      
      public override RevokeInvitationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.channel_invitation.RevokeInvitationRequest.DefaultInstance; }
      }
      
      public override RevokeInvitationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RevokeInvitationRequest) {
          return MergeFrom((RevokeInvitationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RevokeInvitationRequest other) {
        if (other == global::bnet.protocol.channel_invitation.RevokeInvitationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        if (other.HasInvitationId) {
          InvitationId = other.InvitationId;
        }
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_revokeInvitationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _revokeInvitationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
            case 25: {
              result.hasInvitationId = input.ReadFixed64(ref result.invitationId_);
              break;
            }
            case 34: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bnet.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
      
      public bool HasInvitationId {
        get { return result.hasInvitationId; }
      }
      public ulong InvitationId {
        get { return result.InvitationId; }
        set { SetInvitationId(value); }
      }
      public Builder SetInvitationId(ulong value) {
        PrepareBuilder();
        result.hasInvitationId = true;
        result.invitationId_ = value;
        return this;
      }
      public Builder ClearInvitationId() {
        PrepareBuilder();
        result.hasInvitationId = false;
        result.invitationId_ = 0;
        return this;
      }
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bnet.protocol.EntityId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.channelId_ = global::bnet.protocol.EntityId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
    }
    static RevokeInvitationRequest() {
      object.ReferenceEquals(global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class HasRoomForInvitationRequest : pb::GeneratedMessage<HasRoomForInvitationRequest, HasRoomForInvitationRequest.Builder> {
    private HasRoomForInvitationRequest() { }
    private static readonly HasRoomForInvitationRequest defaultInstance = new HasRoomForInvitationRequest().MakeReadOnly();
    private static readonly string[] _hasRoomForInvitationRequestFieldNames = new string[] { "service_type" };
    private static readonly uint[] _hasRoomForInvitationRequestFieldTags = new uint[] { 8 };
    public static HasRoomForInvitationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override HasRoomForInvitationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override HasRoomForInvitationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_HasRoomForInvitationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<HasRoomForInvitationRequest, HasRoomForInvitationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_HasRoomForInvitationRequest__FieldAccessorTable; }
    }
    
    public const int ServiceTypeFieldNumber = 1;
    private bool hasServiceType;
    private uint serviceType_;
    public bool HasServiceType {
      get { return hasServiceType; }
    }
    public uint ServiceType {
      get { return serviceType_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasServiceType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _hasRoomForInvitationRequestFieldNames;
      if (hasServiceType) {
        output.WriteUInt32(1, field_names[0], ServiceType);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasServiceType) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, ServiceType);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static HasRoomForInvitationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HasRoomForInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HasRoomForInvitationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static HasRoomForInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static HasRoomForInvitationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HasRoomForInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static HasRoomForInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static HasRoomForInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static HasRoomForInvitationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static HasRoomForInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private HasRoomForInvitationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(HasRoomForInvitationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<HasRoomForInvitationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(HasRoomForInvitationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private HasRoomForInvitationRequest result;
      
      private HasRoomForInvitationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          HasRoomForInvitationRequest original = result;
          result = new HasRoomForInvitationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override HasRoomForInvitationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel_invitation.HasRoomForInvitationRequest.Descriptor; }
      }
      
      public override HasRoomForInvitationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.channel_invitation.HasRoomForInvitationRequest.DefaultInstance; }
      }
      
      public override HasRoomForInvitationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is HasRoomForInvitationRequest) {
          return MergeFrom((HasRoomForInvitationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(HasRoomForInvitationRequest other) {
        if (other == global::bnet.protocol.channel_invitation.HasRoomForInvitationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasServiceType) {
          ServiceType = other.ServiceType;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_hasRoomForInvitationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _hasRoomForInvitationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasServiceType = input.ReadUInt32(ref result.serviceType_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasServiceType {
        get { return result.hasServiceType; }
      }
      public uint ServiceType {
        get { return result.ServiceType; }
        set { SetServiceType(value); }
      }
      public Builder SetServiceType(uint value) {
        PrepareBuilder();
        result.hasServiceType = true;
        result.serviceType_ = value;
        return this;
      }
      public Builder ClearServiceType() {
        PrepareBuilder();
        result.hasServiceType = false;
        result.serviceType_ = 0;
        return this;
      }
    }
    static HasRoomForInvitationRequest() {
      object.ReferenceEquals(global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class InvitationAddedNotification : pb::GeneratedMessage<InvitationAddedNotification, InvitationAddedNotification.Builder> {
    private InvitationAddedNotification() { }
    private static readonly InvitationAddedNotification defaultInstance = new InvitationAddedNotification().MakeReadOnly();
    private static readonly string[] _invitationAddedNotificationFieldNames = new string[] { "invitation" };
    private static readonly uint[] _invitationAddedNotificationFieldTags = new uint[] { 10 };
    public static InvitationAddedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InvitationAddedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InvitationAddedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_InvitationAddedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InvitationAddedNotification, InvitationAddedNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_InvitationAddedNotification__FieldAccessorTable; }
    }
    
    public const int InvitationFieldNumber = 1;
    private bool hasInvitation;
    private global::bnet.protocol.invitation.Invitation invitation_;
    public bool HasInvitation {
      get { return hasInvitation; }
    }
    public global::bnet.protocol.invitation.Invitation Invitation {
      get { return invitation_ ?? global::bnet.protocol.invitation.Invitation.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasInvitation) return false;
        if (!Invitation.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _invitationAddedNotificationFieldNames;
      if (hasInvitation) {
        output.WriteMessage(1, field_names[0], Invitation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasInvitation) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Invitation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static InvitationAddedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InvitationAddedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InvitationAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InvitationAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InvitationAddedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InvitationAddedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<InvitationAddedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InvitationAddedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InvitationAddedNotification result;
      
      private InvitationAddedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          InvitationAddedNotification original = result;
          result = new InvitationAddedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InvitationAddedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel_invitation.InvitationAddedNotification.Descriptor; }
      }
      
      public override InvitationAddedNotification DefaultInstanceForType {
        get { return global::bnet.protocol.channel_invitation.InvitationAddedNotification.DefaultInstance; }
      }
      
      public override InvitationAddedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InvitationAddedNotification) {
          return MergeFrom((InvitationAddedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InvitationAddedNotification other) {
        if (other == global::bnet.protocol.channel_invitation.InvitationAddedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasInvitation) {
          MergeInvitation(other.Invitation);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_invitationAddedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _invitationAddedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.invitation.Invitation.Builder subBuilder = global::bnet.protocol.invitation.Invitation.CreateBuilder();
              if (result.hasInvitation) {
                subBuilder.MergeFrom(Invitation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Invitation = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasInvitation {
       get { return result.hasInvitation; }
      }
      public global::bnet.protocol.invitation.Invitation Invitation {
        get { return result.Invitation; }
        set { SetInvitation(value); }
      }
      public Builder SetInvitation(global::bnet.protocol.invitation.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = value;
        return this;
      }
      public Builder SetInvitation(global::bnet.protocol.invitation.Invitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInvitation(global::bnet.protocol.invitation.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInvitation &&
            result.invitation_ != global::bnet.protocol.invitation.Invitation.DefaultInstance) {
            result.invitation_ = global::bnet.protocol.invitation.Invitation.CreateBuilder(result.invitation_).MergeFrom(value).BuildPartial();
        } else {
          result.invitation_ = value;
        }
        result.hasInvitation = true;
        return this;
      }
      public Builder ClearInvitation() {
        PrepareBuilder();
        result.hasInvitation = false;
        result.invitation_ = null;
        return this;
      }
    }
    static InvitationAddedNotification() {
      object.ReferenceEquals(global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class InvitationRemovedNotification : pb::GeneratedMessage<InvitationRemovedNotification, InvitationRemovedNotification.Builder> {
    private InvitationRemovedNotification() { }
    private static readonly InvitationRemovedNotification defaultInstance = new InvitationRemovedNotification().MakeReadOnly();
    private static readonly string[] _invitationRemovedNotificationFieldNames = new string[] { "invitation", "reason" };
    private static readonly uint[] _invitationRemovedNotificationFieldTags = new uint[] { 10, 16 };
    public static InvitationRemovedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InvitationRemovedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InvitationRemovedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_InvitationRemovedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InvitationRemovedNotification, InvitationRemovedNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_InvitationRemovedNotification__FieldAccessorTable; }
    }
    
    public const int InvitationFieldNumber = 1;
    private bool hasInvitation;
    private global::bnet.protocol.invitation.Invitation invitation_;
    public bool HasInvitation {
      get { return hasInvitation; }
    }
    public global::bnet.protocol.invitation.Invitation Invitation {
      get { return invitation_ ?? global::bnet.protocol.invitation.Invitation.DefaultInstance; }
    }
    
    public const int ReasonFieldNumber = 2;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasInvitation) return false;
        if (!Invitation.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _invitationRemovedNotificationFieldNames;
      if (hasInvitation) {
        output.WriteMessage(1, field_names[0], Invitation);
      }
      if (hasReason) {
        output.WriteUInt32(2, field_names[1], Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasInvitation) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Invitation);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static InvitationRemovedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InvitationRemovedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InvitationRemovedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InvitationRemovedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InvitationRemovedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<InvitationRemovedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InvitationRemovedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InvitationRemovedNotification result;
      
      private InvitationRemovedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          InvitationRemovedNotification original = result;
          result = new InvitationRemovedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InvitationRemovedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel_invitation.InvitationRemovedNotification.Descriptor; }
      }
      
      public override InvitationRemovedNotification DefaultInstanceForType {
        get { return global::bnet.protocol.channel_invitation.InvitationRemovedNotification.DefaultInstance; }
      }
      
      public override InvitationRemovedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InvitationRemovedNotification) {
          return MergeFrom((InvitationRemovedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InvitationRemovedNotification other) {
        if (other == global::bnet.protocol.channel_invitation.InvitationRemovedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasInvitation) {
          MergeInvitation(other.Invitation);
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_invitationRemovedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _invitationRemovedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.invitation.Invitation.Builder subBuilder = global::bnet.protocol.invitation.Invitation.CreateBuilder();
              if (result.hasInvitation) {
                subBuilder.MergeFrom(Invitation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Invitation = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasReason = input.ReadUInt32(ref result.reason_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasInvitation {
       get { return result.hasInvitation; }
      }
      public global::bnet.protocol.invitation.Invitation Invitation {
        get { return result.Invitation; }
        set { SetInvitation(value); }
      }
      public Builder SetInvitation(global::bnet.protocol.invitation.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = value;
        return this;
      }
      public Builder SetInvitation(global::bnet.protocol.invitation.Invitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInvitation(global::bnet.protocol.invitation.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInvitation &&
            result.invitation_ != global::bnet.protocol.invitation.Invitation.DefaultInstance) {
            result.invitation_ = global::bnet.protocol.invitation.Invitation.CreateBuilder(result.invitation_).MergeFrom(value).BuildPartial();
        } else {
          result.invitation_ = value;
        }
        result.hasInvitation = true;
        return this;
      }
      public Builder ClearInvitation() {
        PrepareBuilder();
        result.hasInvitation = false;
        result.invitation_ = null;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
    }
    static InvitationRemovedNotification() {
      object.ReferenceEquals(global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SuggestionAddedNotification : pb::GeneratedMessage<SuggestionAddedNotification, SuggestionAddedNotification.Builder> {
    private SuggestionAddedNotification() { }
    private static readonly SuggestionAddedNotification defaultInstance = new SuggestionAddedNotification().MakeReadOnly();
    private static readonly string[] _suggestionAddedNotificationFieldNames = new string[] { "suggestion" };
    private static readonly uint[] _suggestionAddedNotificationFieldTags = new uint[] { 10 };
    public static SuggestionAddedNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SuggestionAddedNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SuggestionAddedNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_SuggestionAddedNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SuggestionAddedNotification, SuggestionAddedNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.internal__static_bnet_protocol_channel_invitation_SuggestionAddedNotification__FieldAccessorTable; }
    }
    
    public const int SuggestionFieldNumber = 1;
    private bool hasSuggestion;
    private global::bnet.protocol.invitation.Suggestion suggestion_;
    public bool HasSuggestion {
      get { return hasSuggestion; }
    }
    public global::bnet.protocol.invitation.Suggestion Suggestion {
      get { return suggestion_ ?? global::bnet.protocol.invitation.Suggestion.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSuggestion) return false;
        if (!Suggestion.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _suggestionAddedNotificationFieldNames;
      if (hasSuggestion) {
        output.WriteMessage(1, field_names[0], Suggestion);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSuggestion) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Suggestion);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SuggestionAddedNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SuggestionAddedNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SuggestionAddedNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SuggestionAddedNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SuggestionAddedNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SuggestionAddedNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SuggestionAddedNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SuggestionAddedNotification result;
      
      private SuggestionAddedNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          SuggestionAddedNotification original = result;
          result = new SuggestionAddedNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SuggestionAddedNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.channel_invitation.SuggestionAddedNotification.Descriptor; }
      }
      
      public override SuggestionAddedNotification DefaultInstanceForType {
        get { return global::bnet.protocol.channel_invitation.SuggestionAddedNotification.DefaultInstance; }
      }
      
      public override SuggestionAddedNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SuggestionAddedNotification) {
          return MergeFrom((SuggestionAddedNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SuggestionAddedNotification other) {
        if (other == global::bnet.protocol.channel_invitation.SuggestionAddedNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSuggestion) {
          MergeSuggestion(other.Suggestion);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_suggestionAddedNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _suggestionAddedNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.invitation.Suggestion.Builder subBuilder = global::bnet.protocol.invitation.Suggestion.CreateBuilder();
              if (result.hasSuggestion) {
                subBuilder.MergeFrom(Suggestion);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Suggestion = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSuggestion {
       get { return result.hasSuggestion; }
      }
      public global::bnet.protocol.invitation.Suggestion Suggestion {
        get { return result.Suggestion; }
        set { SetSuggestion(value); }
      }
      public Builder SetSuggestion(global::bnet.protocol.invitation.Suggestion value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggestion = true;
        result.suggestion_ = value;
        return this;
      }
      public Builder SetSuggestion(global::bnet.protocol.invitation.Suggestion.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSuggestion = true;
        result.suggestion_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuggestion(global::bnet.protocol.invitation.Suggestion value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSuggestion &&
            result.suggestion_ != global::bnet.protocol.invitation.Suggestion.DefaultInstance) {
            result.suggestion_ = global::bnet.protocol.invitation.Suggestion.CreateBuilder(result.suggestion_).MergeFrom(value).BuildPartial();
        } else {
          result.suggestion_ = value;
        }
        result.hasSuggestion = true;
        return this;
      }
      public Builder ClearSuggestion() {
        PrepareBuilder();
        result.hasSuggestion = false;
        result.suggestion_ = null;
        return this;
      }
    }
    static SuggestionAddedNotification() {
      object.ReferenceEquals(global::bnet.protocol.channel_invitation.Proto.ChannelInvitationService.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class ChannelInvitationService : pb::IService {
    public abstract void Subscribe(
        pb::IRpcController controller,
        global::bnet.protocol.channel_invitation.SubscribeRequest request,
        global::System.Action<global::bnet.protocol.channel_invitation.SubscribeResponse> done);
    public abstract void Unsubscribe(
        pb::IRpcController controller,
        global::bnet.protocol.channel_invitation.UnsubscribeRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void SendInvitation(
        pb::IRpcController controller,
        global::bnet.protocol.invitation.SendInvitationRequest request,
        global::System.Action<global::bnet.protocol.invitation.SendInvitationResponse> done);
    public abstract void AcceptInvitation(
        pb::IRpcController controller,
        global::bnet.protocol.channel_invitation.AcceptInvitationRequest request,
        global::System.Action<global::bnet.protocol.channel_invitation.AcceptInvitationResponse> done);
    public abstract void DeclineInvitation(
        pb::IRpcController controller,
        global::bnet.protocol.invitation.GenericRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void RevokeInvitation(
        pb::IRpcController controller,
        global::bnet.protocol.channel_invitation.RevokeInvitationRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void SuggestInvitation(
        pb::IRpcController controller,
        global::bnet.protocol.channel_invitation.SuggestInvitationRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.ChannelInvitationService.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.Subscribe(controller, (global::bnet.protocol.channel_invitation.SubscribeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.channel_invitation.SubscribeResponse>(
              done));
          return;
        case 1:
          this.Unsubscribe(controller, (global::bnet.protocol.channel_invitation.UnsubscribeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 2:
          this.SendInvitation(controller, (global::bnet.protocol.invitation.SendInvitationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.invitation.SendInvitationResponse>(
              done));
          return;
        case 3:
          this.AcceptInvitation(controller, (global::bnet.protocol.channel_invitation.AcceptInvitationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.channel_invitation.AcceptInvitationResponse>(
              done));
          return;
        case 4:
          this.DeclineInvitation(controller, (global::bnet.protocol.invitation.GenericRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 5:
          this.RevokeInvitation(controller, (global::bnet.protocol.channel_invitation.RevokeInvitationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 6:
          this.SuggestInvitation(controller, (global::bnet.protocol.channel_invitation.SuggestInvitationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.channel_invitation.SubscribeRequest.DefaultInstance;
        case 1:
          return global::bnet.protocol.channel_invitation.UnsubscribeRequest.DefaultInstance;
        case 2:
          return global::bnet.protocol.invitation.SendInvitationRequest.DefaultInstance;
        case 3:
          return global::bnet.protocol.channel_invitation.AcceptInvitationRequest.DefaultInstance;
        case 4:
          return global::bnet.protocol.invitation.GenericRequest.DefaultInstance;
        case 5:
          return global::bnet.protocol.channel_invitation.RevokeInvitationRequest.DefaultInstance;
        case 6:
          return global::bnet.protocol.channel_invitation.SuggestInvitationRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.channel_invitation.SubscribeResponse.DefaultInstance;
        case 1:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 2:
          return global::bnet.protocol.invitation.SendInvitationResponse.DefaultInstance;
        case 3:
          return global::bnet.protocol.channel_invitation.AcceptInvitationResponse.DefaultInstance;
        case 4:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 5:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 6:
          return global::bnet.protocol.NoData.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bnet.protocol.channel_invitation.ChannelInvitationService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void Subscribe(
          pb::IRpcController controller,
          global::bnet.protocol.channel_invitation.SubscribeRequest request,
          global::System.Action<global::bnet.protocol.channel_invitation.SubscribeResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.channel_invitation.SubscribeResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.channel_invitation.SubscribeResponse, global::bnet.protocol.channel_invitation.SubscribeResponse.Builder>(done, global::bnet.protocol.channel_invitation.SubscribeResponse.DefaultInstance));
      }
      
      public override void Unsubscribe(
          pb::IRpcController controller,
          global::bnet.protocol.channel_invitation.UnsubscribeRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void SendInvitation(
          pb::IRpcController controller,
          global::bnet.protocol.invitation.SendInvitationRequest request,
          global::System.Action<global::bnet.protocol.invitation.SendInvitationResponse> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.invitation.SendInvitationResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.invitation.SendInvitationResponse, global::bnet.protocol.invitation.SendInvitationResponse.Builder>(done, global::bnet.protocol.invitation.SendInvitationResponse.DefaultInstance));
      }
      
      public override void AcceptInvitation(
          pb::IRpcController controller,
          global::bnet.protocol.channel_invitation.AcceptInvitationRequest request,
          global::System.Action<global::bnet.protocol.channel_invitation.AcceptInvitationResponse> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bnet.protocol.channel_invitation.AcceptInvitationResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.channel_invitation.AcceptInvitationResponse, global::bnet.protocol.channel_invitation.AcceptInvitationResponse.Builder>(done, global::bnet.protocol.channel_invitation.AcceptInvitationResponse.DefaultInstance));
      }
      
      public override void DeclineInvitation(
          pb::IRpcController controller,
          global::bnet.protocol.invitation.GenericRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void RevokeInvitation(
          pb::IRpcController controller,
          global::bnet.protocol.channel_invitation.RevokeInvitationRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void SuggestInvitation(
          pb::IRpcController controller,
          global::bnet.protocol.channel_invitation.SuggestInvitationRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
    }
  }
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class ChannelInvitationNotify : pb::IService {
    public abstract void NotifyReceivedInvitationAdded(
        pb::IRpcController controller,
        global::bnet.protocol.channel_invitation.InvitationAddedNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyReceivedInvitationRemoved(
        pb::IRpcController controller,
        global::bnet.protocol.channel_invitation.InvitationRemovedNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyReceivedSuggestionAdded(
        pb::IRpcController controller,
        global::bnet.protocol.channel_invitation.SuggestionAddedNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void HasRoomForInvitation(
        pb::IRpcController controller,
        global::bnet.protocol.channel_invitation.HasRoomForInvitationRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.ChannelInvitationService.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.NotifyReceivedInvitationAdded(controller, (global::bnet.protocol.channel_invitation.InvitationAddedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 1:
          this.NotifyReceivedInvitationRemoved(controller, (global::bnet.protocol.channel_invitation.InvitationRemovedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 2:
          this.NotifyReceivedSuggestionAdded(controller, (global::bnet.protocol.channel_invitation.SuggestionAddedNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 3:
          this.HasRoomForInvitation(controller, (global::bnet.protocol.channel_invitation.HasRoomForInvitationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.channel_invitation.InvitationAddedNotification.DefaultInstance;
        case 1:
          return global::bnet.protocol.channel_invitation.InvitationRemovedNotification.DefaultInstance;
        case 2:
          return global::bnet.protocol.channel_invitation.SuggestionAddedNotification.DefaultInstance;
        case 3:
          return global::bnet.protocol.channel_invitation.HasRoomForInvitationRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 1:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 2:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 3:
          return global::bnet.protocol.NoData.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bnet.protocol.channel_invitation.ChannelInvitationNotify {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void NotifyReceivedInvitationAdded(
          pb::IRpcController controller,
          global::bnet.protocol.channel_invitation.InvitationAddedNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyReceivedInvitationRemoved(
          pb::IRpcController controller,
          global::bnet.protocol.channel_invitation.InvitationRemovedNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyReceivedSuggestionAdded(
          pb::IRpcController controller,
          global::bnet.protocol.channel_invitation.SuggestionAddedNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void HasRoomForInvitation(
          pb::IRpcController controller,
          global::bnet.protocol.channel_invitation.HasRoomForInvitationRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
