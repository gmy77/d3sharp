// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.authentication {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class Authentication {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_ModuleLoadRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ModuleLoadRequest, global::bnet.protocol.authentication.ModuleLoadRequest.Builder> internal__static_bnet_protocol_authentication_ModuleLoadRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_ModuleLoadResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ModuleLoadResponse, global::bnet.protocol.authentication.ModuleLoadResponse.Builder> internal__static_bnet_protocol_authentication_ModuleLoadResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_ModuleMessageRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ModuleMessageRequest, global::bnet.protocol.authentication.ModuleMessageRequest.Builder> internal__static_bnet_protocol_authentication_ModuleMessageRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_LogonRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.LogonRequest, global::bnet.protocol.authentication.LogonRequest.Builder> internal__static_bnet_protocol_authentication_LogonRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_LogonResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.LogonResponse, global::bnet.protocol.authentication.LogonResponse.Builder> internal__static_bnet_protocol_authentication_LogonResponse__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Authentication() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CjZzZXJ2aWNlL2F1dGhlbnRpY2F0aW9uL2RlZmluaXRpb24vYXV0aGVudGlj" + 
          "YXRpb24ucHJvdG8SHGJuZXQucHJvdG9jb2wuYXV0aGVudGljYXRpb24aEWxp" + 
          "Yi9ycGMvcnBjLnByb3RvGiFsaWIvcHJvdG9jb2wvY29udGVudF9oYW5kbGUu" + 
          "cHJvdG8aGWxpYi9wcm90b2NvbC9lbnRpdHkucHJvdG8iWQoRTW9kdWxlTG9h" + 
          "ZFJlcXVlc3QSMwoNbW9kdWxlX2hhbmRsZRgBIAIoCzIcLmJuZXQucHJvdG9j" + 
          "b2wuQ29udGVudEhhbmRsZRIPCgdtZXNzYWdlGAIgASgMIicKEk1vZHVsZUxv" + 
          "YWRSZXNwb25zZRIRCgltb2R1bGVfaWQYAiABKAUiOgoUTW9kdWxlTWVzc2Fn" + 
          "ZVJlcXVlc3QSEQoJbW9kdWxlX2lkGAEgAigFEg8KB21lc3NhZ2UYAiABKAwi" + 
          "kwEKDExvZ29uUmVxdWVzdBIPCgdwcm9ncmFtGAEgASgJEhAKCHBsYXRmb3Jt" + 
          "GAIgASgJEg4KBmxvY2FsZRgDIAEoCRINCgVlbWFpbBgEIAEoCRITCgtsaXN0" + 
          "ZW5lcl9pZBgFIAEoBBIPCgd2ZXJzaW9uGAYgASgJEhsKE2FwcGxpY2F0aW9u" + 
          "X3ZlcnNpb24YByABKAUiaAoNTG9nb25SZXNwb25zZRIoCgdhY2NvdW50GAEg" + 
          "AigLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJZBItCgxnYW1lX2FjY291bnQY" + 
          "AiACKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkMvYBChRBdXRoZW50aWNh" + 
          "dGlvbkNsaWVudBJ8CgpNb2R1bGVMb2FkEi8uYm5ldC5wcm90b2NvbC5hdXRo" + 
          "ZW50aWNhdGlvbi5Nb2R1bGVMb2FkUmVxdWVzdBowLmJuZXQucHJvdG9jb2wu" + 
          "YXV0aGVudGljYXRpb24uTW9kdWxlTG9hZFJlc3BvbnNlIguAtRgBlbUYAAA0" + 
          "QxJgCg1Nb2R1bGVNZXNzYWdlEjIuYm5ldC5wcm90b2NvbC5hdXRoZW50aWNh" + 
          "dGlvbi5Nb2R1bGVNZXNzYWdlUmVxdWVzdBoVLmJuZXQucHJvdG9jb2wuTm9E" + 
          "YXRhIgSAtRgCMucBChRBdXRoZW50aWNhdGlvblNlcnZlchJtCgVMb2dvbhIq" + 
          "LmJuZXQucHJvdG9jb2wuYXV0aGVudGljYXRpb24uTG9nb25SZXF1ZXN0Gisu" + 
          "Ym5ldC5wcm90b2NvbC5hdXRoZW50aWNhdGlvbi5Mb2dvblJlc3BvbnNlIguA" + 
          "tRgBlbUYAAAWRBJgCg1Nb2R1bGVNZXNzYWdlEjIuYm5ldC5wcm90b2NvbC5h" + 
          "dXRoZW50aWNhdGlvbi5Nb2R1bGVNZXNzYWdlUmVxdWVzdBoVLmJuZXQucHJv" + 
          "dG9jb2wuTm9EYXRhIgSAtRgCQgOAAQA=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bnet_protocol_authentication_ModuleLoadRequest__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bnet_protocol_authentication_ModuleLoadRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ModuleLoadRequest, global::bnet.protocol.authentication.ModuleLoadRequest.Builder>(internal__static_bnet_protocol_authentication_ModuleLoadRequest__Descriptor,
                new string[] { "ModuleHandle", "Message", });
        internal__static_bnet_protocol_authentication_ModuleLoadResponse__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bnet_protocol_authentication_ModuleLoadResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ModuleLoadResponse, global::bnet.protocol.authentication.ModuleLoadResponse.Builder>(internal__static_bnet_protocol_authentication_ModuleLoadResponse__Descriptor,
                new string[] { "ModuleId", });
        internal__static_bnet_protocol_authentication_ModuleMessageRequest__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bnet_protocol_authentication_ModuleMessageRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ModuleMessageRequest, global::bnet.protocol.authentication.ModuleMessageRequest.Builder>(internal__static_bnet_protocol_authentication_ModuleMessageRequest__Descriptor,
                new string[] { "ModuleId", "Message", });
        internal__static_bnet_protocol_authentication_LogonRequest__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bnet_protocol_authentication_LogonRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.LogonRequest, global::bnet.protocol.authentication.LogonRequest.Builder>(internal__static_bnet_protocol_authentication_LogonRequest__Descriptor,
                new string[] { "Program", "Platform", "Locale", "Email", "ListenerId", "Version", "ApplicationVersion", });
        internal__static_bnet_protocol_authentication_LogonResponse__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bnet_protocol_authentication_LogonResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.LogonResponse, global::bnet.protocol.authentication.LogonResponse.Builder>(internal__static_bnet_protocol_authentication_LogonResponse__Descriptor,
                new string[] { "Account", "GameAccount", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bnet.protocol.Rpc.RegisterAllExtensions(registry);
        global::bnet.protocol.Proto.ContentHandle.RegisterAllExtensions(registry);
        global::bnet.protocol.Entity.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bnet.protocol.Rpc.Descriptor, 
          global::bnet.protocol.Proto.ContentHandle.Descriptor, 
          global::bnet.protocol.Entity.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ModuleLoadRequest : pb::GeneratedMessage<ModuleLoadRequest, ModuleLoadRequest.Builder> {
    private ModuleLoadRequest() { }
    private static readonly ModuleLoadRequest defaultInstance = new ModuleLoadRequest().MakeReadOnly();
    private static readonly string[] _moduleLoadRequestFieldNames = new string[] { "message", "module_handle" };
    private static readonly uint[] _moduleLoadRequestFieldTags = new uint[] { 18, 10 };
    public static ModuleLoadRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ModuleLoadRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ModuleLoadRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_ModuleLoadRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ModuleLoadRequest, ModuleLoadRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_ModuleLoadRequest__FieldAccessorTable; }
    }
    
    public const int ModuleHandleFieldNumber = 1;
    private bool hasModuleHandle;
    private global::bnet.protocol.ContentHandle moduleHandle_;
    public bool HasModuleHandle {
      get { return hasModuleHandle; }
    }
    public global::bnet.protocol.ContentHandle ModuleHandle {
      get { return moduleHandle_ ?? global::bnet.protocol.ContentHandle.DefaultInstance; }
    }
    
    public const int MessageFieldNumber = 2;
    private bool hasMessage;
    private pb::ByteString message_ = pb::ByteString.Empty;
    public bool HasMessage {
      get { return hasMessage; }
    }
    public pb::ByteString Message {
      get { return message_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasModuleHandle) return false;
        if (!ModuleHandle.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _moduleLoadRequestFieldNames;
      if (hasModuleHandle) {
        output.WriteMessage(1, field_names[1], ModuleHandle);
      }
      if (hasMessage) {
        output.WriteBytes(2, field_names[0], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasModuleHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ModuleHandle);
        }
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, Message);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ModuleLoadRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ModuleLoadRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ModuleLoadRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ModuleLoadRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ModuleLoadRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ModuleLoadRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ModuleLoadRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ModuleLoadRequest result;
      
      private ModuleLoadRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ModuleLoadRequest original = result;
          result = new ModuleLoadRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ModuleLoadRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.ModuleLoadRequest.Descriptor; }
      }
      
      public override ModuleLoadRequest DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.ModuleLoadRequest.DefaultInstance; }
      }
      
      public override ModuleLoadRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ModuleLoadRequest) {
          return MergeFrom((ModuleLoadRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ModuleLoadRequest other) {
        if (other == global::bnet.protocol.authentication.ModuleLoadRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasModuleHandle) {
          MergeModuleHandle(other.ModuleHandle);
        }
        if (other.HasMessage) {
          Message = other.Message;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_moduleLoadRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _moduleLoadRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.ContentHandle.Builder subBuilder = global::bnet.protocol.ContentHandle.CreateBuilder();
              if (result.hasModuleHandle) {
                subBuilder.MergeFrom(ModuleHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ModuleHandle = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasMessage = input.ReadBytes(ref result.message_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasModuleHandle {
       get { return result.hasModuleHandle; }
      }
      public global::bnet.protocol.ContentHandle ModuleHandle {
        get { return result.ModuleHandle; }
        set { SetModuleHandle(value); }
      }
      public Builder SetModuleHandle(global::bnet.protocol.ContentHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasModuleHandle = true;
        result.moduleHandle_ = value;
        return this;
      }
      public Builder SetModuleHandle(global::bnet.protocol.ContentHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasModuleHandle = true;
        result.moduleHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeModuleHandle(global::bnet.protocol.ContentHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasModuleHandle &&
            result.moduleHandle_ != global::bnet.protocol.ContentHandle.DefaultInstance) {
            result.moduleHandle_ = global::bnet.protocol.ContentHandle.CreateBuilder(result.moduleHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.moduleHandle_ = value;
        }
        result.hasModuleHandle = true;
        return this;
      }
      public Builder ClearModuleHandle() {
        PrepareBuilder();
        result.hasModuleHandle = false;
        result.moduleHandle_ = null;
        return this;
      }
      
      public bool HasMessage {
        get { return result.hasMessage; }
      }
      public pb::ByteString Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = pb::ByteString.Empty;
        return this;
      }
    }
    static ModuleLoadRequest() {
      object.ReferenceEquals(global::bnet.protocol.authentication.Authentication.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ModuleLoadResponse : pb::GeneratedMessage<ModuleLoadResponse, ModuleLoadResponse.Builder> {
    private ModuleLoadResponse() { }
    private static readonly ModuleLoadResponse defaultInstance = new ModuleLoadResponse().MakeReadOnly();
    private static readonly string[] _moduleLoadResponseFieldNames = new string[] { "module_id" };
    private static readonly uint[] _moduleLoadResponseFieldTags = new uint[] { 16 };
    public static ModuleLoadResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ModuleLoadResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ModuleLoadResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_ModuleLoadResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ModuleLoadResponse, ModuleLoadResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_ModuleLoadResponse__FieldAccessorTable; }
    }
    
    public const int ModuleIdFieldNumber = 2;
    private bool hasModuleId;
    private int moduleId_;
    public bool HasModuleId {
      get { return hasModuleId; }
    }
    public int ModuleId {
      get { return moduleId_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _moduleLoadResponseFieldNames;
      if (hasModuleId) {
        output.WriteInt32(2, field_names[0], ModuleId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasModuleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, ModuleId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ModuleLoadResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModuleLoadResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModuleLoadResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModuleLoadResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModuleLoadResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModuleLoadResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ModuleLoadResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ModuleLoadResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ModuleLoadResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModuleLoadResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ModuleLoadResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ModuleLoadResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ModuleLoadResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ModuleLoadResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ModuleLoadResponse result;
      
      private ModuleLoadResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ModuleLoadResponse original = result;
          result = new ModuleLoadResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ModuleLoadResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.ModuleLoadResponse.Descriptor; }
      }
      
      public override ModuleLoadResponse DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.ModuleLoadResponse.DefaultInstance; }
      }
      
      public override ModuleLoadResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ModuleLoadResponse) {
          return MergeFrom((ModuleLoadResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ModuleLoadResponse other) {
        if (other == global::bnet.protocol.authentication.ModuleLoadResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasModuleId) {
          ModuleId = other.ModuleId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_moduleLoadResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _moduleLoadResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 16: {
              result.hasModuleId = input.ReadInt32(ref result.moduleId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasModuleId {
        get { return result.hasModuleId; }
      }
      public int ModuleId {
        get { return result.ModuleId; }
        set { SetModuleId(value); }
      }
      public Builder SetModuleId(int value) {
        PrepareBuilder();
        result.hasModuleId = true;
        result.moduleId_ = value;
        return this;
      }
      public Builder ClearModuleId() {
        PrepareBuilder();
        result.hasModuleId = false;
        result.moduleId_ = 0;
        return this;
      }
    }
    static ModuleLoadResponse() {
      object.ReferenceEquals(global::bnet.protocol.authentication.Authentication.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ModuleMessageRequest : pb::GeneratedMessage<ModuleMessageRequest, ModuleMessageRequest.Builder> {
    private ModuleMessageRequest() { }
    private static readonly ModuleMessageRequest defaultInstance = new ModuleMessageRequest().MakeReadOnly();
    private static readonly string[] _moduleMessageRequestFieldNames = new string[] { "message", "module_id" };
    private static readonly uint[] _moduleMessageRequestFieldTags = new uint[] { 18, 8 };
    public static ModuleMessageRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ModuleMessageRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ModuleMessageRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_ModuleMessageRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ModuleMessageRequest, ModuleMessageRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_ModuleMessageRequest__FieldAccessorTable; }
    }
    
    public const int ModuleIdFieldNumber = 1;
    private bool hasModuleId;
    private int moduleId_;
    public bool HasModuleId {
      get { return hasModuleId; }
    }
    public int ModuleId {
      get { return moduleId_; }
    }
    
    public const int MessageFieldNumber = 2;
    private bool hasMessage;
    private pb::ByteString message_ = pb::ByteString.Empty;
    public bool HasMessage {
      get { return hasMessage; }
    }
    public pb::ByteString Message {
      get { return message_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasModuleId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _moduleMessageRequestFieldNames;
      if (hasModuleId) {
        output.WriteInt32(1, field_names[1], ModuleId);
      }
      if (hasMessage) {
        output.WriteBytes(2, field_names[0], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasModuleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, ModuleId);
        }
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, Message);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ModuleMessageRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ModuleMessageRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ModuleMessageRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ModuleMessageRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ModuleMessageRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ModuleMessageRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ModuleMessageRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ModuleMessageRequest result;
      
      private ModuleMessageRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ModuleMessageRequest original = result;
          result = new ModuleMessageRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ModuleMessageRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.ModuleMessageRequest.Descriptor; }
      }
      
      public override ModuleMessageRequest DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.ModuleMessageRequest.DefaultInstance; }
      }
      
      public override ModuleMessageRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ModuleMessageRequest) {
          return MergeFrom((ModuleMessageRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ModuleMessageRequest other) {
        if (other == global::bnet.protocol.authentication.ModuleMessageRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasModuleId) {
          ModuleId = other.ModuleId;
        }
        if (other.HasMessage) {
          Message = other.Message;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_moduleMessageRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _moduleMessageRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasModuleId = input.ReadInt32(ref result.moduleId_);
              break;
            }
            case 18: {
              result.hasMessage = input.ReadBytes(ref result.message_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasModuleId {
        get { return result.hasModuleId; }
      }
      public int ModuleId {
        get { return result.ModuleId; }
        set { SetModuleId(value); }
      }
      public Builder SetModuleId(int value) {
        PrepareBuilder();
        result.hasModuleId = true;
        result.moduleId_ = value;
        return this;
      }
      public Builder ClearModuleId() {
        PrepareBuilder();
        result.hasModuleId = false;
        result.moduleId_ = 0;
        return this;
      }
      
      public bool HasMessage {
        get { return result.hasMessage; }
      }
      public pb::ByteString Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = pb::ByteString.Empty;
        return this;
      }
    }
    static ModuleMessageRequest() {
      object.ReferenceEquals(global::bnet.protocol.authentication.Authentication.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class LogonRequest : pb::GeneratedMessage<LogonRequest, LogonRequest.Builder> {
    private LogonRequest() { }
    private static readonly LogonRequest defaultInstance = new LogonRequest().MakeReadOnly();
    private static readonly string[] _logonRequestFieldNames = new string[] { "application_version", "email", "listener_id", "locale", "platform", "program", "version" };
    private static readonly uint[] _logonRequestFieldTags = new uint[] { 56, 34, 40, 26, 18, 10, 50 };
    public static LogonRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LogonRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LogonRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_LogonRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LogonRequest, LogonRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_LogonRequest__FieldAccessorTable; }
    }
    
    public const int ProgramFieldNumber = 1;
    private bool hasProgram;
    private string program_ = "";
    public bool HasProgram {
      get { return hasProgram; }
    }
    public string Program {
      get { return program_; }
    }
    
    public const int PlatformFieldNumber = 2;
    private bool hasPlatform;
    private string platform_ = "";
    public bool HasPlatform {
      get { return hasPlatform; }
    }
    public string Platform {
      get { return platform_; }
    }
    
    public const int LocaleFieldNumber = 3;
    private bool hasLocale;
    private string locale_ = "";
    public bool HasLocale {
      get { return hasLocale; }
    }
    public string Locale {
      get { return locale_; }
    }
    
    public const int EmailFieldNumber = 4;
    private bool hasEmail;
    private string email_ = "";
    public bool HasEmail {
      get { return hasEmail; }
    }
    public string Email {
      get { return email_; }
    }
    
    public const int ListenerIdFieldNumber = 5;
    private bool hasListenerId;
    private ulong listenerId_;
    public bool HasListenerId {
      get { return hasListenerId; }
    }
    public ulong ListenerId {
      get { return listenerId_; }
    }
    
    public const int VersionFieldNumber = 6;
    private bool hasVersion;
    private string version_ = "";
    public bool HasVersion {
      get { return hasVersion; }
    }
    public string Version {
      get { return version_; }
    }
    
    public const int ApplicationVersionFieldNumber = 7;
    private bool hasApplicationVersion;
    private int applicationVersion_;
    public bool HasApplicationVersion {
      get { return hasApplicationVersion; }
    }
    public int ApplicationVersion {
      get { return applicationVersion_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _logonRequestFieldNames;
      if (hasProgram) {
        output.WriteString(1, field_names[5], Program);
      }
      if (hasPlatform) {
        output.WriteString(2, field_names[4], Platform);
      }
      if (hasLocale) {
        output.WriteString(3, field_names[3], Locale);
      }
      if (hasEmail) {
        output.WriteString(4, field_names[1], Email);
      }
      if (hasListenerId) {
        output.WriteUInt64(5, field_names[2], ListenerId);
      }
      if (hasVersion) {
        output.WriteString(6, field_names[6], Version);
      }
      if (hasApplicationVersion) {
        output.WriteInt32(7, field_names[0], ApplicationVersion);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Program);
        }
        if (hasPlatform) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Platform);
        }
        if (hasLocale) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Locale);
        }
        if (hasEmail) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Email);
        }
        if (hasListenerId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(5, ListenerId);
        }
        if (hasVersion) {
          size += pb::CodedOutputStream.ComputeStringSize(6, Version);
        }
        if (hasApplicationVersion) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, ApplicationVersion);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LogonRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogonRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogonRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogonRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogonRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogonRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LogonRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LogonRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LogonRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogonRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LogonRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LogonRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<LogonRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LogonRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LogonRequest result;
      
      private LogonRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          LogonRequest original = result;
          result = new LogonRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LogonRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.LogonRequest.Descriptor; }
      }
      
      public override LogonRequest DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.LogonRequest.DefaultInstance; }
      }
      
      public override LogonRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LogonRequest) {
          return MergeFrom((LogonRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LogonRequest other) {
        if (other == global::bnet.protocol.authentication.LogonRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasPlatform) {
          Platform = other.Platform;
        }
        if (other.HasLocale) {
          Locale = other.Locale;
        }
        if (other.HasEmail) {
          Email = other.Email;
        }
        if (other.HasListenerId) {
          ListenerId = other.ListenerId;
        }
        if (other.HasVersion) {
          Version = other.Version;
        }
        if (other.HasApplicationVersion) {
          ApplicationVersion = other.ApplicationVersion;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_logonRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _logonRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasProgram = input.ReadString(ref result.program_);
              break;
            }
            case 18: {
              result.hasPlatform = input.ReadString(ref result.platform_);
              break;
            }
            case 26: {
              result.hasLocale = input.ReadString(ref result.locale_);
              break;
            }
            case 34: {
              result.hasEmail = input.ReadString(ref result.email_);
              break;
            }
            case 40: {
              result.hasListenerId = input.ReadUInt64(ref result.listenerId_);
              break;
            }
            case 50: {
              result.hasVersion = input.ReadString(ref result.version_);
              break;
            }
            case 56: {
              result.hasApplicationVersion = input.ReadInt32(ref result.applicationVersion_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public string Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = "";
        return this;
      }
      
      public bool HasPlatform {
        get { return result.hasPlatform; }
      }
      public string Platform {
        get { return result.Platform; }
        set { SetPlatform(value); }
      }
      public Builder SetPlatform(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPlatform = true;
        result.platform_ = value;
        return this;
      }
      public Builder ClearPlatform() {
        PrepareBuilder();
        result.hasPlatform = false;
        result.platform_ = "";
        return this;
      }
      
      public bool HasLocale {
        get { return result.hasLocale; }
      }
      public string Locale {
        get { return result.Locale; }
        set { SetLocale(value); }
      }
      public Builder SetLocale(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLocale = true;
        result.locale_ = value;
        return this;
      }
      public Builder ClearLocale() {
        PrepareBuilder();
        result.hasLocale = false;
        result.locale_ = "";
        return this;
      }
      
      public bool HasEmail {
        get { return result.hasEmail; }
      }
      public string Email {
        get { return result.Email; }
        set { SetEmail(value); }
      }
      public Builder SetEmail(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEmail = true;
        result.email_ = value;
        return this;
      }
      public Builder ClearEmail() {
        PrepareBuilder();
        result.hasEmail = false;
        result.email_ = "";
        return this;
      }
      
      public bool HasListenerId {
        get { return result.hasListenerId; }
      }
      public ulong ListenerId {
        get { return result.ListenerId; }
        set { SetListenerId(value); }
      }
      public Builder SetListenerId(ulong value) {
        PrepareBuilder();
        result.hasListenerId = true;
        result.listenerId_ = value;
        return this;
      }
      public Builder ClearListenerId() {
        PrepareBuilder();
        result.hasListenerId = false;
        result.listenerId_ = 0UL;
        return this;
      }
      
      public bool HasVersion {
        get { return result.hasVersion; }
      }
      public string Version {
        get { return result.Version; }
        set { SetVersion(value); }
      }
      public Builder SetVersion(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder ClearVersion() {
        PrepareBuilder();
        result.hasVersion = false;
        result.version_ = "";
        return this;
      }
      
      public bool HasApplicationVersion {
        get { return result.hasApplicationVersion; }
      }
      public int ApplicationVersion {
        get { return result.ApplicationVersion; }
        set { SetApplicationVersion(value); }
      }
      public Builder SetApplicationVersion(int value) {
        PrepareBuilder();
        result.hasApplicationVersion = true;
        result.applicationVersion_ = value;
        return this;
      }
      public Builder ClearApplicationVersion() {
        PrepareBuilder();
        result.hasApplicationVersion = false;
        result.applicationVersion_ = 0;
        return this;
      }
    }
    static LogonRequest() {
      object.ReferenceEquals(global::bnet.protocol.authentication.Authentication.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class LogonResponse : pb::GeneratedMessage<LogonResponse, LogonResponse.Builder> {
    private LogonResponse() { }
    private static readonly LogonResponse defaultInstance = new LogonResponse().MakeReadOnly();
    private static readonly string[] _logonResponseFieldNames = new string[] { "account", "game_account" };
    private static readonly uint[] _logonResponseFieldTags = new uint[] { 10, 18 };
    public static LogonResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LogonResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LogonResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_LogonResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LogonResponse, LogonResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.Authentication.internal__static_bnet_protocol_authentication_LogonResponse__FieldAccessorTable; }
    }
    
    public const int AccountFieldNumber = 1;
    private bool hasAccount;
    private global::bnet.protocol.EntityId account_;
    public bool HasAccount {
      get { return hasAccount; }
    }
    public global::bnet.protocol.EntityId Account {
      get { return account_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int GameAccountFieldNumber = 2;
    private bool hasGameAccount;
    private global::bnet.protocol.EntityId gameAccount_;
    public bool HasGameAccount {
      get { return hasGameAccount; }
    }
    public global::bnet.protocol.EntityId GameAccount {
      get { return gameAccount_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAccount) return false;
        if (!hasGameAccount) return false;
        if (!Account.IsInitialized) return false;
        if (!GameAccount.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _logonResponseFieldNames;
      if (hasAccount) {
        output.WriteMessage(1, field_names[0], Account);
      }
      if (hasGameAccount) {
        output.WriteMessage(2, field_names[1], GameAccount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Account);
        }
        if (hasGameAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, GameAccount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LogonResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogonResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogonResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogonResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogonResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogonResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LogonResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LogonResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LogonResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogonResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LogonResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LogonResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<LogonResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LogonResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LogonResponse result;
      
      private LogonResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          LogonResponse original = result;
          result = new LogonResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LogonResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.LogonResponse.Descriptor; }
      }
      
      public override LogonResponse DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.LogonResponse.DefaultInstance; }
      }
      
      public override LogonResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LogonResponse) {
          return MergeFrom((LogonResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LogonResponse other) {
        if (other == global::bnet.protocol.authentication.LogonResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAccount) {
          MergeAccount(other.Account);
        }
        if (other.HasGameAccount) {
          MergeGameAccount(other.GameAccount);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_logonResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _logonResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAccount) {
                subBuilder.MergeFrom(Account);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Account = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasGameAccount) {
                subBuilder.MergeFrom(GameAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameAccount = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAccount {
       get { return result.hasAccount; }
      }
      public global::bnet.protocol.EntityId Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder SetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccount &&
            result.account_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.account_ = global::bnet.protocol.EntityId.CreateBuilder(result.account_).MergeFrom(value).BuildPartial();
        } else {
          result.account_ = value;
        }
        result.hasAccount = true;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = null;
        return this;
      }
      
      public bool HasGameAccount {
       get { return result.hasGameAccount; }
      }
      public global::bnet.protocol.EntityId GameAccount {
        get { return result.GameAccount; }
        set { SetGameAccount(value); }
      }
      public Builder SetGameAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameAccount = true;
        result.gameAccount_ = value;
        return this;
      }
      public Builder SetGameAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameAccount = true;
        result.gameAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameAccount &&
            result.gameAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.gameAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.gameAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccount_ = value;
        }
        result.hasGameAccount = true;
        return this;
      }
      public Builder ClearGameAccount() {
        PrepareBuilder();
        result.hasGameAccount = false;
        result.gameAccount_ = null;
        return this;
      }
    }
    static LogonResponse() {
      object.ReferenceEquals(global::bnet.protocol.authentication.Authentication.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class AuthenticationClient : pb::IService {
    public abstract void ModuleLoad(
        pb::IRpcController controller,
        global::bnet.protocol.authentication.ModuleLoadRequest request,
        global::System.Action<global::bnet.protocol.authentication.ModuleLoadResponse> done);
    public abstract void ModuleMessage(
        pb::IRpcController controller,
        global::bnet.protocol.authentication.ModuleMessageRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Authentication.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.ModuleLoad(controller, (global::bnet.protocol.authentication.ModuleLoadRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.authentication.ModuleLoadResponse>(
              done));
          return;
        case 1:
          this.ModuleMessage(controller, (global::bnet.protocol.authentication.ModuleMessageRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.authentication.ModuleLoadRequest.DefaultInstance;
        case 1:
          return global::bnet.protocol.authentication.ModuleMessageRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.authentication.ModuleLoadResponse.DefaultInstance;
        case 1:
          return global::bnet.protocol.NoData.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bnet.protocol.authentication.AuthenticationClient {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void ModuleLoad(
          pb::IRpcController controller,
          global::bnet.protocol.authentication.ModuleLoadRequest request,
          global::System.Action<global::bnet.protocol.authentication.ModuleLoadResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.authentication.ModuleLoadResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.authentication.ModuleLoadResponse, global::bnet.protocol.authentication.ModuleLoadResponse.Builder>(done, global::bnet.protocol.authentication.ModuleLoadResponse.DefaultInstance));
      }
      
      public override void ModuleMessage(
          pb::IRpcController controller,
          global::bnet.protocol.authentication.ModuleMessageRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
    }
  }
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class AuthenticationServer : pb::IService {
    public abstract void Logon(
        pb::IRpcController controller,
        global::bnet.protocol.authentication.LogonRequest request,
        global::System.Action<global::bnet.protocol.authentication.LogonResponse> done);
    public abstract void ModuleMessage(
        pb::IRpcController controller,
        global::bnet.protocol.authentication.ModuleMessageRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Authentication.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.Logon(controller, (global::bnet.protocol.authentication.LogonRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.authentication.LogonResponse>(
              done));
          return;
        case 1:
          this.ModuleMessage(controller, (global::bnet.protocol.authentication.ModuleMessageRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.authentication.LogonRequest.DefaultInstance;
        case 1:
          return global::bnet.protocol.authentication.ModuleMessageRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.authentication.LogonResponse.DefaultInstance;
        case 1:
          return global::bnet.protocol.NoData.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bnet.protocol.authentication.AuthenticationServer {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void Logon(
          pb::IRpcController controller,
          global::bnet.protocol.authentication.LogonRequest request,
          global::System.Action<global::bnet.protocol.authentication.LogonResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.authentication.LogonResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.authentication.LogonResponse, global::bnet.protocol.authentication.LogonResponse.Builder>(done, global::bnet.protocol.authentication.LogonResponse.DefaultInstance));
      }
      
      public override void ModuleMessage(
          pb::IRpcController controller,
          global::bnet.protocol.authentication.ModuleMessageRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
