// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.authentication {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class AuthenticationService {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_ModuleLoadRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ModuleLoadRequest, global::bnet.protocol.authentication.ModuleLoadRequest.Builder> internal__static_bnet_protocol_authentication_ModuleLoadRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_ModuleNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ModuleNotification, global::bnet.protocol.authentication.ModuleNotification.Builder> internal__static_bnet_protocol_authentication_ModuleNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_ModuleMessageRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ModuleMessageRequest, global::bnet.protocol.authentication.ModuleMessageRequest.Builder> internal__static_bnet_protocol_authentication_ModuleMessageRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_LogonRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.LogonRequest, global::bnet.protocol.authentication.LogonRequest.Builder> internal__static_bnet_protocol_authentication_LogonRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_LogonResult__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.LogonResult, global::bnet.protocol.authentication.LogonResult.Builder> internal__static_bnet_protocol_authentication_LogonResult__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_LogonUpdateRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.LogonUpdateRequest, global::bnet.protocol.authentication.LogonUpdateRequest.Builder> internal__static_bnet_protocol_authentication_LogonUpdateRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_AccountSettingsNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.AccountSettingsNotification, global::bnet.protocol.authentication.AccountSettingsNotification.Builder> internal__static_bnet_protocol_authentication_AccountSettingsNotification__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_ServerStateChangeRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ServerStateChangeRequest, global::bnet.protocol.authentication.ServerStateChangeRequest.Builder> internal__static_bnet_protocol_authentication_ServerStateChangeRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_MemModuleLoadRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.MemModuleLoadRequest, global::bnet.protocol.authentication.MemModuleLoadRequest.Builder> internal__static_bnet_protocol_authentication_MemModuleLoadRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_authentication_MemModuleLoadResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.MemModuleLoadResponse, global::bnet.protocol.authentication.MemModuleLoadResponse.Builder> internal__static_bnet_protocol_authentication_MemModuleLoadResponse__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static AuthenticationService() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CiFibmV0L2F1dGhlbnRpY2F0aW9uX3NlcnZpY2UucHJvdG8SHGJuZXQucHJv" + 
          "dG9jb2wuYXV0aGVudGljYXRpb24aGGJuZXQvYWNjb3VudF90eXBlcy5wcm90" + 
          "bxoOYm5ldC9ycGMucHJvdG8aGWJuZXQvY29udGVudF9oYW5kbGUucHJvdG8a" + 
          "EWJuZXQvZW50aXR5LnByb3RvIlkKEU1vZHVsZUxvYWRSZXF1ZXN0EjMKDW1v" + 
          "ZHVsZV9oYW5kbGUYASACKAsyHC5ibmV0LnByb3RvY29sLkNvbnRlbnRIYW5k" + 
          "bGUSDwoHbWVzc2FnZRgCIAEoDCI3ChJNb2R1bGVOb3RpZmljYXRpb24SEQoJ" + 
          "bW9kdWxlX2lkGAIgASgFEg4KBnJlc3VsdBgDIAEoDSI6ChRNb2R1bGVNZXNz" + 
          "YWdlUmVxdWVzdBIRCgltb2R1bGVfaWQYASACKAUSDwoHbWVzc2FnZRgCIAEo" + 
          "DCKTAQoMTG9nb25SZXF1ZXN0Eg8KB3Byb2dyYW0YASABKAkSEAoIcGxhdGZv" + 
          "cm0YAiABKAkSDgoGbG9jYWxlGAMgASgJEg0KBWVtYWlsGAQgASgJEg8KB3Zl" + 
          "cnNpb24YBSABKAkSGwoTYXBwbGljYXRpb25fdmVyc2lvbhgGIAEoBRITCgtj" + 
          "b29raWVfb25seRgHIAEoCCJ6CgtMb2dvblJlc3VsdBISCgplcnJvcl9jb2Rl" + 
          "GAEgAigNEigKB2FjY291bnQYAiABKAsyFy5ibmV0LnByb3RvY29sLkVudGl0" + 
          "eUlkEi0KDGdhbWVfYWNjb3VudBgDIAMoCzIXLmJuZXQucHJvdG9jb2wuRW50" + 
          "aXR5SWQiKAoSTG9nb25VcGRhdGVSZXF1ZXN0EhIKCmVycm9yX2NvZGUYASAC" + 
          "KA0ivAEKG0FjY291bnRTZXR0aW5nc05vdGlmaWNhdGlvbhI3CghsaWNlbnNl" + 
          "cxgBIAMoCzIlLmJuZXQucHJvdG9jb2wuYWNjb3VudC5BY2NvdW50TGljZW5z" + 
          "ZRIUCgxpc191c2luZ19yaWQYAiABKAgSGwoTaXNfcGxheWluZ19mcm9tX2ln" + 
          "chgDIAEoCBIZChFjYW5fcmVjZWl2ZV92b2ljZRgEIAEoCBIWCg5jYW5fc2Vu" + 
          "ZF92b2ljZRgFIAEoCCI9ChhTZXJ2ZXJTdGF0ZUNoYW5nZVJlcXVlc3QSDQoF" + 
          "c3RhdGUYASACKA0SEgoKZXZlbnRfdGltZRgCIAIoBCJgChRNZW1Nb2R1bGVM" + 
          "b2FkUmVxdWVzdBIsCgZoYW5kbGUYASACKAsyHC5ibmV0LnByb3RvY29sLkNv" + 
          "bnRlbnRIYW5kbGUSCwoDa2V5GAIgAigMEg0KBWlucHV0GAMgAigMIiUKFU1l" + 
          "bU1vZHVsZUxvYWRSZXNwb25zZRIMCgRkYXRhGAEgAigMMvkFChRBdXRoZW50" + 
          "aWNhdGlvbkNsaWVudBJfCgpNb2R1bGVMb2FkEi8uYm5ldC5wcm90b2NvbC5h" + 
          "dXRoZW50aWNhdGlvbi5Nb2R1bGVMb2FkUmVxdWVzdBoaLmJuZXQucHJvdG9j" + 
          "b2wuTk9fUkVTUE9OU0UiBIC1GAESYAoNTW9kdWxlTWVzc2FnZRIyLmJuZXQu" + 
          "cHJvdG9jb2wuYXV0aGVudGljYXRpb24uTW9kdWxlTWVzc2FnZVJlcXVlc3Qa" + 
          "FS5ibmV0LnByb3RvY29sLk5vRGF0YSIEgLUYAhJuCg9BY2NvdW50U2V0dGlu" + 
          "Z3MSOS5ibmV0LnByb3RvY29sLmF1dGhlbnRpY2F0aW9uLkFjY291bnRTZXR0" + 
          "aW5nc05vdGlmaWNhdGlvbhoaLmJuZXQucHJvdG9jb2wuTk9fUkVTUE9OU0Ui" + 
          "BIC1GAMSbQoRU2VydmVyU3RhdGVDaGFuZ2USNi5ibmV0LnByb3RvY29sLmF1" + 
          "dGhlbnRpY2F0aW9uLlNlcnZlclN0YXRlQ2hhbmdlUmVxdWVzdBoaLmJuZXQu" + 
          "cHJvdG9jb2wuTk9fUkVTUE9OU0UiBIC1GAQSXAoNTG9nb25Db21wbGV0ZRIp" + 
          "LmJuZXQucHJvdG9jb2wuYXV0aGVudGljYXRpb24uTG9nb25SZXN1bHQaGi5i" + 
          "bmV0LnByb3RvY29sLk5PX1JFU1BPTlNFIgSAtRgFEn4KDU1lbU1vZHVsZUxv" + 
          "YWQSMi5ibmV0LnByb3RvY29sLmF1dGhlbnRpY2F0aW9uLk1lbU1vZHVsZUxv" + 
          "YWRSZXF1ZXN0GjMuYm5ldC5wcm90b2NvbC5hdXRoZW50aWNhdGlvbi5NZW1N" + 
          "b2R1bGVMb2FkUmVzcG9uc2UiBIC1GAYSYQoLTG9nb25VcGRhdGUSMC5ibmV0" + 
          "LnByb3RvY29sLmF1dGhlbnRpY2F0aW9uLkxvZ29uVXBkYXRlUmVxdWVzdBoa" + 
          "LmJuZXQucHJvdG9jb2wuTk9fUkVTUE9OU0UiBIC1GAoy9AIKFEF1dGhlbnRp" + 
          "Y2F0aW9uU2VydmVyElAKBUxvZ29uEiouYm5ldC5wcm90b2NvbC5hdXRoZW50" + 
          "aWNhdGlvbi5Mb2dvblJlcXVlc3QaFS5ibmV0LnByb3RvY29sLk5vRGF0YSIE" + 
          "gLUYARJdCgxNb2R1bGVOb3RpZnkSMC5ibmV0LnByb3RvY29sLmF1dGhlbnRp" + 
          "Y2F0aW9uLk1vZHVsZU5vdGlmaWNhdGlvbhoVLmJuZXQucHJvdG9jb2wuTm9E" + 
          "YXRhIgSAtRgCEmAKDU1vZHVsZU1lc3NhZ2USMi5ibmV0LnByb3RvY29sLmF1" + 
          "dGhlbnRpY2F0aW9uLk1vZHVsZU1lc3NhZ2VSZXF1ZXN0GhUuYm5ldC5wcm90" + 
          "b2NvbC5Ob0RhdGEiBIC1GAMSSQoRU2VsZWN0R2FtZUFjY291bnQSFy5ibmV0" + 
          "LnByb3RvY29sLkVudGl0eUlkGhUuYm5ldC5wcm90b2NvbC5Ob0RhdGEiBIC1" + 
          "GARCA4ABAA==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bnet_protocol_authentication_ModuleLoadRequest__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bnet_protocol_authentication_ModuleLoadRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ModuleLoadRequest, global::bnet.protocol.authentication.ModuleLoadRequest.Builder>(internal__static_bnet_protocol_authentication_ModuleLoadRequest__Descriptor,
                new string[] { "ModuleHandle", "Message", });
        internal__static_bnet_protocol_authentication_ModuleNotification__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bnet_protocol_authentication_ModuleNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ModuleNotification, global::bnet.protocol.authentication.ModuleNotification.Builder>(internal__static_bnet_protocol_authentication_ModuleNotification__Descriptor,
                new string[] { "ModuleId", "Result", });
        internal__static_bnet_protocol_authentication_ModuleMessageRequest__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bnet_protocol_authentication_ModuleMessageRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ModuleMessageRequest, global::bnet.protocol.authentication.ModuleMessageRequest.Builder>(internal__static_bnet_protocol_authentication_ModuleMessageRequest__Descriptor,
                new string[] { "ModuleId", "Message", });
        internal__static_bnet_protocol_authentication_LogonRequest__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bnet_protocol_authentication_LogonRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.LogonRequest, global::bnet.protocol.authentication.LogonRequest.Builder>(internal__static_bnet_protocol_authentication_LogonRequest__Descriptor,
                new string[] { "Program", "Platform", "Locale", "Email", "Version", "ApplicationVersion", "CookieOnly", });
        internal__static_bnet_protocol_authentication_LogonResult__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bnet_protocol_authentication_LogonResult__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.LogonResult, global::bnet.protocol.authentication.LogonResult.Builder>(internal__static_bnet_protocol_authentication_LogonResult__Descriptor,
                new string[] { "ErrorCode", "Account", "GameAccount", });
        internal__static_bnet_protocol_authentication_LogonUpdateRequest__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bnet_protocol_authentication_LogonUpdateRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.LogonUpdateRequest, global::bnet.protocol.authentication.LogonUpdateRequest.Builder>(internal__static_bnet_protocol_authentication_LogonUpdateRequest__Descriptor,
                new string[] { "ErrorCode", });
        internal__static_bnet_protocol_authentication_AccountSettingsNotification__Descriptor = Descriptor.MessageTypes[6];
        internal__static_bnet_protocol_authentication_AccountSettingsNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.AccountSettingsNotification, global::bnet.protocol.authentication.AccountSettingsNotification.Builder>(internal__static_bnet_protocol_authentication_AccountSettingsNotification__Descriptor,
                new string[] { "Licenses", "IsUsingRid", "IsPlayingFromIgr", "CanReceiveVoice", "CanSendVoice", });
        internal__static_bnet_protocol_authentication_ServerStateChangeRequest__Descriptor = Descriptor.MessageTypes[7];
        internal__static_bnet_protocol_authentication_ServerStateChangeRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.ServerStateChangeRequest, global::bnet.protocol.authentication.ServerStateChangeRequest.Builder>(internal__static_bnet_protocol_authentication_ServerStateChangeRequest__Descriptor,
                new string[] { "State", "EventTime", });
        internal__static_bnet_protocol_authentication_MemModuleLoadRequest__Descriptor = Descriptor.MessageTypes[8];
        internal__static_bnet_protocol_authentication_MemModuleLoadRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.MemModuleLoadRequest, global::bnet.protocol.authentication.MemModuleLoadRequest.Builder>(internal__static_bnet_protocol_authentication_MemModuleLoadRequest__Descriptor,
                new string[] { "Handle", "Key", "Input", });
        internal__static_bnet_protocol_authentication_MemModuleLoadResponse__Descriptor = Descriptor.MessageTypes[9];
        internal__static_bnet_protocol_authentication_MemModuleLoadResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.authentication.MemModuleLoadResponse, global::bnet.protocol.authentication.MemModuleLoadResponse.Builder>(internal__static_bnet_protocol_authentication_MemModuleLoadResponse__Descriptor,
                new string[] { "Data", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bnet.protocol.account.AccountTypes.RegisterAllExtensions(registry);
        global::bnet.protocol.Rpc.RegisterAllExtensions(registry);
        global::bnet.protocol.Proto.ContentHandle.RegisterAllExtensions(registry);
        global::bnet.protocol.Entity.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bnet.protocol.account.AccountTypes.Descriptor, 
          global::bnet.protocol.Rpc.Descriptor, 
          global::bnet.protocol.Proto.ContentHandle.Descriptor, 
          global::bnet.protocol.Entity.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ModuleLoadRequest : pb::GeneratedMessage<ModuleLoadRequest, ModuleLoadRequest.Builder> {
    private ModuleLoadRequest() { }
    private static readonly ModuleLoadRequest defaultInstance = new ModuleLoadRequest().MakeReadOnly();
    private static readonly string[] _moduleLoadRequestFieldNames = new string[] { "message", "module_handle" };
    private static readonly uint[] _moduleLoadRequestFieldTags = new uint[] { 18, 10 };
    public static ModuleLoadRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ModuleLoadRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ModuleLoadRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_ModuleLoadRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ModuleLoadRequest, ModuleLoadRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_ModuleLoadRequest__FieldAccessorTable; }
    }
    
    public const int ModuleHandleFieldNumber = 1;
    private bool hasModuleHandle;
    private global::bnet.protocol.ContentHandle moduleHandle_;
    public bool HasModuleHandle {
      get { return hasModuleHandle; }
    }
    public global::bnet.protocol.ContentHandle ModuleHandle {
      get { return moduleHandle_ ?? global::bnet.protocol.ContentHandle.DefaultInstance; }
    }
    
    public const int MessageFieldNumber = 2;
    private bool hasMessage;
    private pb::ByteString message_ = pb::ByteString.Empty;
    public bool HasMessage {
      get { return hasMessage; }
    }
    public pb::ByteString Message {
      get { return message_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasModuleHandle) return false;
        if (!ModuleHandle.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _moduleLoadRequestFieldNames;
      if (hasModuleHandle) {
        output.WriteMessage(1, field_names[1], ModuleHandle);
      }
      if (hasMessage) {
        output.WriteBytes(2, field_names[0], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasModuleHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ModuleHandle);
        }
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, Message);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ModuleLoadRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ModuleLoadRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ModuleLoadRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModuleLoadRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ModuleLoadRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ModuleLoadRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ModuleLoadRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ModuleLoadRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ModuleLoadRequest result;
      
      private ModuleLoadRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ModuleLoadRequest original = result;
          result = new ModuleLoadRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ModuleLoadRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.ModuleLoadRequest.Descriptor; }
      }
      
      public override ModuleLoadRequest DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.ModuleLoadRequest.DefaultInstance; }
      }
      
      public override ModuleLoadRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ModuleLoadRequest) {
          return MergeFrom((ModuleLoadRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ModuleLoadRequest other) {
        if (other == global::bnet.protocol.authentication.ModuleLoadRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasModuleHandle) {
          MergeModuleHandle(other.ModuleHandle);
        }
        if (other.HasMessage) {
          Message = other.Message;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_moduleLoadRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _moduleLoadRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.ContentHandle.Builder subBuilder = global::bnet.protocol.ContentHandle.CreateBuilder();
              if (result.hasModuleHandle) {
                subBuilder.MergeFrom(ModuleHandle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ModuleHandle = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasMessage = input.ReadBytes(ref result.message_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasModuleHandle {
       get { return result.hasModuleHandle; }
      }
      public global::bnet.protocol.ContentHandle ModuleHandle {
        get { return result.ModuleHandle; }
        set { SetModuleHandle(value); }
      }
      public Builder SetModuleHandle(global::bnet.protocol.ContentHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasModuleHandle = true;
        result.moduleHandle_ = value;
        return this;
      }
      public Builder SetModuleHandle(global::bnet.protocol.ContentHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasModuleHandle = true;
        result.moduleHandle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeModuleHandle(global::bnet.protocol.ContentHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasModuleHandle &&
            result.moduleHandle_ != global::bnet.protocol.ContentHandle.DefaultInstance) {
            result.moduleHandle_ = global::bnet.protocol.ContentHandle.CreateBuilder(result.moduleHandle_).MergeFrom(value).BuildPartial();
        } else {
          result.moduleHandle_ = value;
        }
        result.hasModuleHandle = true;
        return this;
      }
      public Builder ClearModuleHandle() {
        PrepareBuilder();
        result.hasModuleHandle = false;
        result.moduleHandle_ = null;
        return this;
      }
      
      public bool HasMessage {
        get { return result.hasMessage; }
      }
      public pb::ByteString Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = pb::ByteString.Empty;
        return this;
      }
    }
    static ModuleLoadRequest() {
      object.ReferenceEquals(global::bnet.protocol.authentication.AuthenticationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ModuleNotification : pb::GeneratedMessage<ModuleNotification, ModuleNotification.Builder> {
    private ModuleNotification() { }
    private static readonly ModuleNotification defaultInstance = new ModuleNotification().MakeReadOnly();
    private static readonly string[] _moduleNotificationFieldNames = new string[] { "module_id", "result" };
    private static readonly uint[] _moduleNotificationFieldTags = new uint[] { 16, 24 };
    public static ModuleNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ModuleNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ModuleNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_ModuleNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ModuleNotification, ModuleNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_ModuleNotification__FieldAccessorTable; }
    }
    
    public const int ModuleIdFieldNumber = 2;
    private bool hasModuleId;
    private int moduleId_;
    public bool HasModuleId {
      get { return hasModuleId; }
    }
    public int ModuleId {
      get { return moduleId_; }
    }
    
    public const int ResultFieldNumber = 3;
    private bool hasResult;
    private uint result_;
    public bool HasResult {
      get { return hasResult; }
    }
    public uint Result {
      get { return result_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _moduleNotificationFieldNames;
      if (hasModuleId) {
        output.WriteInt32(2, field_names[0], ModuleId);
      }
      if (hasResult) {
        output.WriteUInt32(3, field_names[1], Result);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasModuleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, ModuleId);
        }
        if (hasResult) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Result);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ModuleNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModuleNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModuleNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModuleNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModuleNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModuleNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ModuleNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ModuleNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ModuleNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModuleNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ModuleNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ModuleNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ModuleNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ModuleNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ModuleNotification result;
      
      private ModuleNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          ModuleNotification original = result;
          result = new ModuleNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ModuleNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.ModuleNotification.Descriptor; }
      }
      
      public override ModuleNotification DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.ModuleNotification.DefaultInstance; }
      }
      
      public override ModuleNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ModuleNotification) {
          return MergeFrom((ModuleNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ModuleNotification other) {
        if (other == global::bnet.protocol.authentication.ModuleNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasModuleId) {
          ModuleId = other.ModuleId;
        }
        if (other.HasResult) {
          Result = other.Result;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_moduleNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _moduleNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 16: {
              result.hasModuleId = input.ReadInt32(ref result.moduleId_);
              break;
            }
            case 24: {
              result.hasResult = input.ReadUInt32(ref result.result_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasModuleId {
        get { return result.hasModuleId; }
      }
      public int ModuleId {
        get { return result.ModuleId; }
        set { SetModuleId(value); }
      }
      public Builder SetModuleId(int value) {
        PrepareBuilder();
        result.hasModuleId = true;
        result.moduleId_ = value;
        return this;
      }
      public Builder ClearModuleId() {
        PrepareBuilder();
        result.hasModuleId = false;
        result.moduleId_ = 0;
        return this;
      }
      
      public bool HasResult {
        get { return result.hasResult; }
      }
      public uint Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(uint value) {
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = 0;
        return this;
      }
    }
    static ModuleNotification() {
      object.ReferenceEquals(global::bnet.protocol.authentication.AuthenticationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ModuleMessageRequest : pb::GeneratedMessage<ModuleMessageRequest, ModuleMessageRequest.Builder> {
    private ModuleMessageRequest() { }
    private static readonly ModuleMessageRequest defaultInstance = new ModuleMessageRequest().MakeReadOnly();
    private static readonly string[] _moduleMessageRequestFieldNames = new string[] { "message", "module_id" };
    private static readonly uint[] _moduleMessageRequestFieldTags = new uint[] { 18, 8 };
    public static ModuleMessageRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ModuleMessageRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ModuleMessageRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_ModuleMessageRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ModuleMessageRequest, ModuleMessageRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_ModuleMessageRequest__FieldAccessorTable; }
    }
    
    public const int ModuleIdFieldNumber = 1;
    private bool hasModuleId;
    private int moduleId_;
    public bool HasModuleId {
      get { return hasModuleId; }
    }
    public int ModuleId {
      get { return moduleId_; }
    }
    
    public const int MessageFieldNumber = 2;
    private bool hasMessage;
    private pb::ByteString message_ = pb::ByteString.Empty;
    public bool HasMessage {
      get { return hasMessage; }
    }
    public pb::ByteString Message {
      get { return message_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasModuleId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _moduleMessageRequestFieldNames;
      if (hasModuleId) {
        output.WriteInt32(1, field_names[1], ModuleId);
      }
      if (hasMessage) {
        output.WriteBytes(2, field_names[0], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasModuleId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, ModuleId);
        }
        if (hasMessage) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, Message);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ModuleMessageRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ModuleMessageRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ModuleMessageRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ModuleMessageRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ModuleMessageRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ModuleMessageRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ModuleMessageRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ModuleMessageRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ModuleMessageRequest result;
      
      private ModuleMessageRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ModuleMessageRequest original = result;
          result = new ModuleMessageRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ModuleMessageRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.ModuleMessageRequest.Descriptor; }
      }
      
      public override ModuleMessageRequest DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.ModuleMessageRequest.DefaultInstance; }
      }
      
      public override ModuleMessageRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ModuleMessageRequest) {
          return MergeFrom((ModuleMessageRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ModuleMessageRequest other) {
        if (other == global::bnet.protocol.authentication.ModuleMessageRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasModuleId) {
          ModuleId = other.ModuleId;
        }
        if (other.HasMessage) {
          Message = other.Message;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_moduleMessageRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _moduleMessageRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasModuleId = input.ReadInt32(ref result.moduleId_);
              break;
            }
            case 18: {
              result.hasMessage = input.ReadBytes(ref result.message_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasModuleId {
        get { return result.hasModuleId; }
      }
      public int ModuleId {
        get { return result.ModuleId; }
        set { SetModuleId(value); }
      }
      public Builder SetModuleId(int value) {
        PrepareBuilder();
        result.hasModuleId = true;
        result.moduleId_ = value;
        return this;
      }
      public Builder ClearModuleId() {
        PrepareBuilder();
        result.hasModuleId = false;
        result.moduleId_ = 0;
        return this;
      }
      
      public bool HasMessage {
        get { return result.hasMessage; }
      }
      public pb::ByteString Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = pb::ByteString.Empty;
        return this;
      }
    }
    static ModuleMessageRequest() {
      object.ReferenceEquals(global::bnet.protocol.authentication.AuthenticationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class LogonRequest : pb::GeneratedMessage<LogonRequest, LogonRequest.Builder> {
    private LogonRequest() { }
    private static readonly LogonRequest defaultInstance = new LogonRequest().MakeReadOnly();
    private static readonly string[] _logonRequestFieldNames = new string[] { "application_version", "cookie_only", "email", "locale", "platform", "program", "version" };
    private static readonly uint[] _logonRequestFieldTags = new uint[] { 48, 56, 34, 26, 18, 10, 42 };
    public static LogonRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LogonRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LogonRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_LogonRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LogonRequest, LogonRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_LogonRequest__FieldAccessorTable; }
    }
    
    public const int ProgramFieldNumber = 1;
    private bool hasProgram;
    private string program_ = "";
    public bool HasProgram {
      get { return hasProgram; }
    }
    public string Program {
      get { return program_; }
    }
    
    public const int PlatformFieldNumber = 2;
    private bool hasPlatform;
    private string platform_ = "";
    public bool HasPlatform {
      get { return hasPlatform; }
    }
    public string Platform {
      get { return platform_; }
    }
    
    public const int LocaleFieldNumber = 3;
    private bool hasLocale;
    private string locale_ = "";
    public bool HasLocale {
      get { return hasLocale; }
    }
    public string Locale {
      get { return locale_; }
    }
    
    public const int EmailFieldNumber = 4;
    private bool hasEmail;
    private string email_ = "";
    public bool HasEmail {
      get { return hasEmail; }
    }
    public string Email {
      get { return email_; }
    }
    
    public const int VersionFieldNumber = 5;
    private bool hasVersion;
    private string version_ = "";
    public bool HasVersion {
      get { return hasVersion; }
    }
    public string Version {
      get { return version_; }
    }
    
    public const int ApplicationVersionFieldNumber = 6;
    private bool hasApplicationVersion;
    private int applicationVersion_;
    public bool HasApplicationVersion {
      get { return hasApplicationVersion; }
    }
    public int ApplicationVersion {
      get { return applicationVersion_; }
    }
    
    public const int CookieOnlyFieldNumber = 7;
    private bool hasCookieOnly;
    private bool cookieOnly_;
    public bool HasCookieOnly {
      get { return hasCookieOnly; }
    }
    public bool CookieOnly {
      get { return cookieOnly_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _logonRequestFieldNames;
      if (hasProgram) {
        output.WriteString(1, field_names[5], Program);
      }
      if (hasPlatform) {
        output.WriteString(2, field_names[4], Platform);
      }
      if (hasLocale) {
        output.WriteString(3, field_names[3], Locale);
      }
      if (hasEmail) {
        output.WriteString(4, field_names[2], Email);
      }
      if (hasVersion) {
        output.WriteString(5, field_names[6], Version);
      }
      if (hasApplicationVersion) {
        output.WriteInt32(6, field_names[0], ApplicationVersion);
      }
      if (hasCookieOnly) {
        output.WriteBool(7, field_names[1], CookieOnly);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasProgram) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Program);
        }
        if (hasPlatform) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Platform);
        }
        if (hasLocale) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Locale);
        }
        if (hasEmail) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Email);
        }
        if (hasVersion) {
          size += pb::CodedOutputStream.ComputeStringSize(5, Version);
        }
        if (hasApplicationVersion) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, ApplicationVersion);
        }
        if (hasCookieOnly) {
          size += pb::CodedOutputStream.ComputeBoolSize(7, CookieOnly);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LogonRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogonRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogonRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogonRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogonRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogonRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LogonRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LogonRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LogonRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogonRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LogonRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LogonRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<LogonRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LogonRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LogonRequest result;
      
      private LogonRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          LogonRequest original = result;
          result = new LogonRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LogonRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.LogonRequest.Descriptor; }
      }
      
      public override LogonRequest DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.LogonRequest.DefaultInstance; }
      }
      
      public override LogonRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LogonRequest) {
          return MergeFrom((LogonRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LogonRequest other) {
        if (other == global::bnet.protocol.authentication.LogonRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasProgram) {
          Program = other.Program;
        }
        if (other.HasPlatform) {
          Platform = other.Platform;
        }
        if (other.HasLocale) {
          Locale = other.Locale;
        }
        if (other.HasEmail) {
          Email = other.Email;
        }
        if (other.HasVersion) {
          Version = other.Version;
        }
        if (other.HasApplicationVersion) {
          ApplicationVersion = other.ApplicationVersion;
        }
        if (other.HasCookieOnly) {
          CookieOnly = other.CookieOnly;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_logonRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _logonRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasProgram = input.ReadString(ref result.program_);
              break;
            }
            case 18: {
              result.hasPlatform = input.ReadString(ref result.platform_);
              break;
            }
            case 26: {
              result.hasLocale = input.ReadString(ref result.locale_);
              break;
            }
            case 34: {
              result.hasEmail = input.ReadString(ref result.email_);
              break;
            }
            case 42: {
              result.hasVersion = input.ReadString(ref result.version_);
              break;
            }
            case 48: {
              result.hasApplicationVersion = input.ReadInt32(ref result.applicationVersion_);
              break;
            }
            case 56: {
              result.hasCookieOnly = input.ReadBool(ref result.cookieOnly_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasProgram {
        get { return result.hasProgram; }
      }
      public string Program {
        get { return result.Program; }
        set { SetProgram(value); }
      }
      public Builder SetProgram(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasProgram = true;
        result.program_ = value;
        return this;
      }
      public Builder ClearProgram() {
        PrepareBuilder();
        result.hasProgram = false;
        result.program_ = "";
        return this;
      }
      
      public bool HasPlatform {
        get { return result.hasPlatform; }
      }
      public string Platform {
        get { return result.Platform; }
        set { SetPlatform(value); }
      }
      public Builder SetPlatform(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPlatform = true;
        result.platform_ = value;
        return this;
      }
      public Builder ClearPlatform() {
        PrepareBuilder();
        result.hasPlatform = false;
        result.platform_ = "";
        return this;
      }
      
      public bool HasLocale {
        get { return result.hasLocale; }
      }
      public string Locale {
        get { return result.Locale; }
        set { SetLocale(value); }
      }
      public Builder SetLocale(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLocale = true;
        result.locale_ = value;
        return this;
      }
      public Builder ClearLocale() {
        PrepareBuilder();
        result.hasLocale = false;
        result.locale_ = "";
        return this;
      }
      
      public bool HasEmail {
        get { return result.hasEmail; }
      }
      public string Email {
        get { return result.Email; }
        set { SetEmail(value); }
      }
      public Builder SetEmail(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEmail = true;
        result.email_ = value;
        return this;
      }
      public Builder ClearEmail() {
        PrepareBuilder();
        result.hasEmail = false;
        result.email_ = "";
        return this;
      }
      
      public bool HasVersion {
        get { return result.hasVersion; }
      }
      public string Version {
        get { return result.Version; }
        set { SetVersion(value); }
      }
      public Builder SetVersion(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder ClearVersion() {
        PrepareBuilder();
        result.hasVersion = false;
        result.version_ = "";
        return this;
      }
      
      public bool HasApplicationVersion {
        get { return result.hasApplicationVersion; }
      }
      public int ApplicationVersion {
        get { return result.ApplicationVersion; }
        set { SetApplicationVersion(value); }
      }
      public Builder SetApplicationVersion(int value) {
        PrepareBuilder();
        result.hasApplicationVersion = true;
        result.applicationVersion_ = value;
        return this;
      }
      public Builder ClearApplicationVersion() {
        PrepareBuilder();
        result.hasApplicationVersion = false;
        result.applicationVersion_ = 0;
        return this;
      }
      
      public bool HasCookieOnly {
        get { return result.hasCookieOnly; }
      }
      public bool CookieOnly {
        get { return result.CookieOnly; }
        set { SetCookieOnly(value); }
      }
      public Builder SetCookieOnly(bool value) {
        PrepareBuilder();
        result.hasCookieOnly = true;
        result.cookieOnly_ = value;
        return this;
      }
      public Builder ClearCookieOnly() {
        PrepareBuilder();
        result.hasCookieOnly = false;
        result.cookieOnly_ = false;
        return this;
      }
    }
    static LogonRequest() {
      object.ReferenceEquals(global::bnet.protocol.authentication.AuthenticationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class LogonResult : pb::GeneratedMessage<LogonResult, LogonResult.Builder> {
    private LogonResult() { }
    private static readonly LogonResult defaultInstance = new LogonResult().MakeReadOnly();
    private static readonly string[] _logonResultFieldNames = new string[] { "account", "error_code", "game_account" };
    private static readonly uint[] _logonResultFieldTags = new uint[] { 18, 8, 26 };
    public static LogonResult DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LogonResult DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LogonResult ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_LogonResult__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LogonResult, LogonResult.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_LogonResult__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private uint errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public uint ErrorCode {
      get { return errorCode_; }
    }
    
    public const int AccountFieldNumber = 2;
    private bool hasAccount;
    private global::bnet.protocol.EntityId account_;
    public bool HasAccount {
      get { return hasAccount; }
    }
    public global::bnet.protocol.EntityId Account {
      get { return account_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int GameAccountFieldNumber = 3;
    private pbc::PopsicleList<global::bnet.protocol.EntityId> gameAccount_ = new pbc::PopsicleList<global::bnet.protocol.EntityId>();
    public scg::IList<global::bnet.protocol.EntityId> GameAccountList {
      get { return gameAccount_; }
    }
    public int GameAccountCount {
      get { return gameAccount_.Count; }
    }
    public global::bnet.protocol.EntityId GetGameAccount(int index) {
      return gameAccount_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        if (HasAccount) {
          if (!Account.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.EntityId element in GameAccountList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _logonResultFieldNames;
      if (hasErrorCode) {
        output.WriteUInt32(1, field_names[1], ErrorCode);
      }
      if (hasAccount) {
        output.WriteMessage(2, field_names[0], Account);
      }
      if (gameAccount_.Count > 0) {
        output.WriteMessageArray(3, field_names[2], gameAccount_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasErrorCode) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, ErrorCode);
        }
        if (hasAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Account);
        }
        foreach (global::bnet.protocol.EntityId element in GameAccountList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LogonResult ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogonResult ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogonResult ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogonResult ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogonResult ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogonResult ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LogonResult ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LogonResult ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LogonResult ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogonResult ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LogonResult MakeReadOnly() {
      gameAccount_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LogonResult prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<LogonResult, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LogonResult cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LogonResult result;
      
      private LogonResult PrepareBuilder() {
        if (resultIsReadOnly) {
          LogonResult original = result;
          result = new LogonResult();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LogonResult MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.LogonResult.Descriptor; }
      }
      
      public override LogonResult DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.LogonResult.DefaultInstance; }
      }
      
      public override LogonResult BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LogonResult) {
          return MergeFrom((LogonResult) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LogonResult other) {
        if (other == global::bnet.protocol.authentication.LogonResult.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        if (other.HasAccount) {
          MergeAccount(other.Account);
        }
        if (other.gameAccount_.Count != 0) {
          result.gameAccount_.Add(other.gameAccount_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_logonResultFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _logonResultFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadUInt32(ref result.errorCode_);
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAccount) {
                subBuilder.MergeFrom(Account);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Account = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.gameAccount_, global::bnet.protocol.EntityId.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public uint ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(uint value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      public bool HasAccount {
       get { return result.hasAccount; }
      }
      public global::bnet.protocol.EntityId Account {
        get { return result.Account; }
        set { SetAccount(value); }
      }
      public Builder SetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder SetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAccount = true;
        result.account_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAccount &&
            result.account_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.account_ = global::bnet.protocol.EntityId.CreateBuilder(result.account_).MergeFrom(value).BuildPartial();
        } else {
          result.account_ = value;
        }
        result.hasAccount = true;
        return this;
      }
      public Builder ClearAccount() {
        PrepareBuilder();
        result.hasAccount = false;
        result.account_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.EntityId> GameAccountList {
        get { return PrepareBuilder().gameAccount_; }
      }
      public int GameAccountCount {
        get { return result.GameAccountCount; }
      }
      public global::bnet.protocol.EntityId GetGameAccount(int index) {
        return result.GetGameAccount(index);
      }
      public Builder SetGameAccount(int index, global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameAccount_[index] = value;
        return this;
      }
      public Builder SetGameAccount(int index, global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gameAccount_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGameAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.gameAccount_.Add(value);
        return this;
      }
      public Builder AddGameAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.gameAccount_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGameAccount(scg::IEnumerable<global::bnet.protocol.EntityId> values) {
        PrepareBuilder();
        result.gameAccount_.Add(values);
        return this;
      }
      public Builder ClearGameAccount() {
        PrepareBuilder();
        result.gameAccount_.Clear();
        return this;
      }
    }
    static LogonResult() {
      object.ReferenceEquals(global::bnet.protocol.authentication.AuthenticationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class LogonUpdateRequest : pb::GeneratedMessage<LogonUpdateRequest, LogonUpdateRequest.Builder> {
    private LogonUpdateRequest() { }
    private static readonly LogonUpdateRequest defaultInstance = new LogonUpdateRequest().MakeReadOnly();
    private static readonly string[] _logonUpdateRequestFieldNames = new string[] { "error_code" };
    private static readonly uint[] _logonUpdateRequestFieldTags = new uint[] { 8 };
    public static LogonUpdateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LogonUpdateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LogonUpdateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_LogonUpdateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LogonUpdateRequest, LogonUpdateRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_LogonUpdateRequest__FieldAccessorTable; }
    }
    
    public const int ErrorCodeFieldNumber = 1;
    private bool hasErrorCode;
    private uint errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public uint ErrorCode {
      get { return errorCode_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasErrorCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _logonUpdateRequestFieldNames;
      if (hasErrorCode) {
        output.WriteUInt32(1, field_names[0], ErrorCode);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasErrorCode) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, ErrorCode);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LogonUpdateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogonUpdateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogonUpdateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LogonUpdateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LogonUpdateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogonUpdateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LogonUpdateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LogonUpdateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LogonUpdateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LogonUpdateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LogonUpdateRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LogonUpdateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<LogonUpdateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LogonUpdateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LogonUpdateRequest result;
      
      private LogonUpdateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          LogonUpdateRequest original = result;
          result = new LogonUpdateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LogonUpdateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.LogonUpdateRequest.Descriptor; }
      }
      
      public override LogonUpdateRequest DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.LogonUpdateRequest.DefaultInstance; }
      }
      
      public override LogonUpdateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LogonUpdateRequest) {
          return MergeFrom((LogonUpdateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LogonUpdateRequest other) {
        if (other == global::bnet.protocol.authentication.LogonUpdateRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_logonUpdateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _logonUpdateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasErrorCode = input.ReadUInt32(ref result.errorCode_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public uint ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(uint value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
    }
    static LogonUpdateRequest() {
      object.ReferenceEquals(global::bnet.protocol.authentication.AuthenticationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AccountSettingsNotification : pb::GeneratedMessage<AccountSettingsNotification, AccountSettingsNotification.Builder> {
    private AccountSettingsNotification() { }
    private static readonly AccountSettingsNotification defaultInstance = new AccountSettingsNotification().MakeReadOnly();
    private static readonly string[] _accountSettingsNotificationFieldNames = new string[] { "can_receive_voice", "can_send_voice", "is_playing_from_igr", "is_using_rid", "licenses" };
    private static readonly uint[] _accountSettingsNotificationFieldTags = new uint[] { 32, 40, 24, 16, 10 };
    public static AccountSettingsNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AccountSettingsNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AccountSettingsNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_AccountSettingsNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AccountSettingsNotification, AccountSettingsNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_AccountSettingsNotification__FieldAccessorTable; }
    }
    
    public const int LicensesFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.account.AccountLicense> licenses_ = new pbc::PopsicleList<global::bnet.protocol.account.AccountLicense>();
    public scg::IList<global::bnet.protocol.account.AccountLicense> LicensesList {
      get { return licenses_; }
    }
    public int LicensesCount {
      get { return licenses_.Count; }
    }
    public global::bnet.protocol.account.AccountLicense GetLicenses(int index) {
      return licenses_[index];
    }
    
    public const int IsUsingRidFieldNumber = 2;
    private bool hasIsUsingRid;
    private bool isUsingRid_;
    public bool HasIsUsingRid {
      get { return hasIsUsingRid; }
    }
    public bool IsUsingRid {
      get { return isUsingRid_; }
    }
    
    public const int IsPlayingFromIgrFieldNumber = 3;
    private bool hasIsPlayingFromIgr;
    private bool isPlayingFromIgr_;
    public bool HasIsPlayingFromIgr {
      get { return hasIsPlayingFromIgr; }
    }
    public bool IsPlayingFromIgr {
      get { return isPlayingFromIgr_; }
    }
    
    public const int CanReceiveVoiceFieldNumber = 4;
    private bool hasCanReceiveVoice;
    private bool canReceiveVoice_;
    public bool HasCanReceiveVoice {
      get { return hasCanReceiveVoice; }
    }
    public bool CanReceiveVoice {
      get { return canReceiveVoice_; }
    }
    
    public const int CanSendVoiceFieldNumber = 5;
    private bool hasCanSendVoice;
    private bool canSendVoice_;
    public bool HasCanSendVoice {
      get { return hasCanSendVoice; }
    }
    public bool CanSendVoice {
      get { return canSendVoice_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.account.AccountLicense element in LicensesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _accountSettingsNotificationFieldNames;
      if (licenses_.Count > 0) {
        output.WriteMessageArray(1, field_names[4], licenses_);
      }
      if (hasIsUsingRid) {
        output.WriteBool(2, field_names[3], IsUsingRid);
      }
      if (hasIsPlayingFromIgr) {
        output.WriteBool(3, field_names[2], IsPlayingFromIgr);
      }
      if (hasCanReceiveVoice) {
        output.WriteBool(4, field_names[0], CanReceiveVoice);
      }
      if (hasCanSendVoice) {
        output.WriteBool(5, field_names[1], CanSendVoice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.account.AccountLicense element in LicensesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasIsUsingRid) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, IsUsingRid);
        }
        if (hasIsPlayingFromIgr) {
          size += pb::CodedOutputStream.ComputeBoolSize(3, IsPlayingFromIgr);
        }
        if (hasCanReceiveVoice) {
          size += pb::CodedOutputStream.ComputeBoolSize(4, CanReceiveVoice);
        }
        if (hasCanSendVoice) {
          size += pb::CodedOutputStream.ComputeBoolSize(5, CanSendVoice);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AccountSettingsNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountSettingsNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountSettingsNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AccountSettingsNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AccountSettingsNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountSettingsNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AccountSettingsNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AccountSettingsNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AccountSettingsNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AccountSettingsNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AccountSettingsNotification MakeReadOnly() {
      licenses_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AccountSettingsNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AccountSettingsNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AccountSettingsNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AccountSettingsNotification result;
      
      private AccountSettingsNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          AccountSettingsNotification original = result;
          result = new AccountSettingsNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AccountSettingsNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.AccountSettingsNotification.Descriptor; }
      }
      
      public override AccountSettingsNotification DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.AccountSettingsNotification.DefaultInstance; }
      }
      
      public override AccountSettingsNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AccountSettingsNotification) {
          return MergeFrom((AccountSettingsNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AccountSettingsNotification other) {
        if (other == global::bnet.protocol.authentication.AccountSettingsNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.licenses_.Count != 0) {
          result.licenses_.Add(other.licenses_);
        }
        if (other.HasIsUsingRid) {
          IsUsingRid = other.IsUsingRid;
        }
        if (other.HasIsPlayingFromIgr) {
          IsPlayingFromIgr = other.IsPlayingFromIgr;
        }
        if (other.HasCanReceiveVoice) {
          CanReceiveVoice = other.CanReceiveVoice;
        }
        if (other.HasCanSendVoice) {
          CanSendVoice = other.CanSendVoice;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_accountSettingsNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _accountSettingsNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.licenses_, global::bnet.protocol.account.AccountLicense.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasIsUsingRid = input.ReadBool(ref result.isUsingRid_);
              break;
            }
            case 24: {
              result.hasIsPlayingFromIgr = input.ReadBool(ref result.isPlayingFromIgr_);
              break;
            }
            case 32: {
              result.hasCanReceiveVoice = input.ReadBool(ref result.canReceiveVoice_);
              break;
            }
            case 40: {
              result.hasCanSendVoice = input.ReadBool(ref result.canSendVoice_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.account.AccountLicense> LicensesList {
        get { return PrepareBuilder().licenses_; }
      }
      public int LicensesCount {
        get { return result.LicensesCount; }
      }
      public global::bnet.protocol.account.AccountLicense GetLicenses(int index) {
        return result.GetLicenses(index);
      }
      public Builder SetLicenses(int index, global::bnet.protocol.account.AccountLicense value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.licenses_[index] = value;
        return this;
      }
      public Builder SetLicenses(int index, global::bnet.protocol.account.AccountLicense.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.licenses_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLicenses(global::bnet.protocol.account.AccountLicense value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.licenses_.Add(value);
        return this;
      }
      public Builder AddLicenses(global::bnet.protocol.account.AccountLicense.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.licenses_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLicenses(scg::IEnumerable<global::bnet.protocol.account.AccountLicense> values) {
        PrepareBuilder();
        result.licenses_.Add(values);
        return this;
      }
      public Builder ClearLicenses() {
        PrepareBuilder();
        result.licenses_.Clear();
        return this;
      }
      
      public bool HasIsUsingRid {
        get { return result.hasIsUsingRid; }
      }
      public bool IsUsingRid {
        get { return result.IsUsingRid; }
        set { SetIsUsingRid(value); }
      }
      public Builder SetIsUsingRid(bool value) {
        PrepareBuilder();
        result.hasIsUsingRid = true;
        result.isUsingRid_ = value;
        return this;
      }
      public Builder ClearIsUsingRid() {
        PrepareBuilder();
        result.hasIsUsingRid = false;
        result.isUsingRid_ = false;
        return this;
      }
      
      public bool HasIsPlayingFromIgr {
        get { return result.hasIsPlayingFromIgr; }
      }
      public bool IsPlayingFromIgr {
        get { return result.IsPlayingFromIgr; }
        set { SetIsPlayingFromIgr(value); }
      }
      public Builder SetIsPlayingFromIgr(bool value) {
        PrepareBuilder();
        result.hasIsPlayingFromIgr = true;
        result.isPlayingFromIgr_ = value;
        return this;
      }
      public Builder ClearIsPlayingFromIgr() {
        PrepareBuilder();
        result.hasIsPlayingFromIgr = false;
        result.isPlayingFromIgr_ = false;
        return this;
      }
      
      public bool HasCanReceiveVoice {
        get { return result.hasCanReceiveVoice; }
      }
      public bool CanReceiveVoice {
        get { return result.CanReceiveVoice; }
        set { SetCanReceiveVoice(value); }
      }
      public Builder SetCanReceiveVoice(bool value) {
        PrepareBuilder();
        result.hasCanReceiveVoice = true;
        result.canReceiveVoice_ = value;
        return this;
      }
      public Builder ClearCanReceiveVoice() {
        PrepareBuilder();
        result.hasCanReceiveVoice = false;
        result.canReceiveVoice_ = false;
        return this;
      }
      
      public bool HasCanSendVoice {
        get { return result.hasCanSendVoice; }
      }
      public bool CanSendVoice {
        get { return result.CanSendVoice; }
        set { SetCanSendVoice(value); }
      }
      public Builder SetCanSendVoice(bool value) {
        PrepareBuilder();
        result.hasCanSendVoice = true;
        result.canSendVoice_ = value;
        return this;
      }
      public Builder ClearCanSendVoice() {
        PrepareBuilder();
        result.hasCanSendVoice = false;
        result.canSendVoice_ = false;
        return this;
      }
    }
    static AccountSettingsNotification() {
      object.ReferenceEquals(global::bnet.protocol.authentication.AuthenticationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ServerStateChangeRequest : pb::GeneratedMessage<ServerStateChangeRequest, ServerStateChangeRequest.Builder> {
    private ServerStateChangeRequest() { }
    private static readonly ServerStateChangeRequest defaultInstance = new ServerStateChangeRequest().MakeReadOnly();
    private static readonly string[] _serverStateChangeRequestFieldNames = new string[] { "event_time", "state" };
    private static readonly uint[] _serverStateChangeRequestFieldTags = new uint[] { 16, 8 };
    public static ServerStateChangeRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ServerStateChangeRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ServerStateChangeRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_ServerStateChangeRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ServerStateChangeRequest, ServerStateChangeRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_ServerStateChangeRequest__FieldAccessorTable; }
    }
    
    public const int StateFieldNumber = 1;
    private bool hasState;
    private uint state_;
    public bool HasState {
      get { return hasState; }
    }
    public uint State {
      get { return state_; }
    }
    
    public const int EventTimeFieldNumber = 2;
    private bool hasEventTime;
    private ulong eventTime_;
    public bool HasEventTime {
      get { return hasEventTime; }
    }
    public ulong EventTime {
      get { return eventTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasState) return false;
        if (!hasEventTime) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _serverStateChangeRequestFieldNames;
      if (hasState) {
        output.WriteUInt32(1, field_names[1], State);
      }
      if (hasEventTime) {
        output.WriteUInt64(2, field_names[0], EventTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasState) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, State);
        }
        if (hasEventTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, EventTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ServerStateChangeRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ServerStateChangeRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ServerStateChangeRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ServerStateChangeRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ServerStateChangeRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ServerStateChangeRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ServerStateChangeRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ServerStateChangeRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ServerStateChangeRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ServerStateChangeRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ServerStateChangeRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ServerStateChangeRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ServerStateChangeRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ServerStateChangeRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ServerStateChangeRequest result;
      
      private ServerStateChangeRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ServerStateChangeRequest original = result;
          result = new ServerStateChangeRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ServerStateChangeRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.ServerStateChangeRequest.Descriptor; }
      }
      
      public override ServerStateChangeRequest DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.ServerStateChangeRequest.DefaultInstance; }
      }
      
      public override ServerStateChangeRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ServerStateChangeRequest) {
          return MergeFrom((ServerStateChangeRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ServerStateChangeRequest other) {
        if (other == global::bnet.protocol.authentication.ServerStateChangeRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasState) {
          State = other.State;
        }
        if (other.HasEventTime) {
          EventTime = other.EventTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_serverStateChangeRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _serverStateChangeRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasState = input.ReadUInt32(ref result.state_);
              break;
            }
            case 16: {
              result.hasEventTime = input.ReadUInt64(ref result.eventTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasState {
        get { return result.hasState; }
      }
      public uint State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(uint value) {
        PrepareBuilder();
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder ClearState() {
        PrepareBuilder();
        result.hasState = false;
        result.state_ = 0;
        return this;
      }
      
      public bool HasEventTime {
        get { return result.hasEventTime; }
      }
      public ulong EventTime {
        get { return result.EventTime; }
        set { SetEventTime(value); }
      }
      public Builder SetEventTime(ulong value) {
        PrepareBuilder();
        result.hasEventTime = true;
        result.eventTime_ = value;
        return this;
      }
      public Builder ClearEventTime() {
        PrepareBuilder();
        result.hasEventTime = false;
        result.eventTime_ = 0UL;
        return this;
      }
    }
    static ServerStateChangeRequest() {
      object.ReferenceEquals(global::bnet.protocol.authentication.AuthenticationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemModuleLoadRequest : pb::GeneratedMessage<MemModuleLoadRequest, MemModuleLoadRequest.Builder> {
    private MemModuleLoadRequest() { }
    private static readonly MemModuleLoadRequest defaultInstance = new MemModuleLoadRequest().MakeReadOnly();
    private static readonly string[] _memModuleLoadRequestFieldNames = new string[] { "handle", "input", "key" };
    private static readonly uint[] _memModuleLoadRequestFieldTags = new uint[] { 10, 26, 18 };
    public static MemModuleLoadRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemModuleLoadRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemModuleLoadRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_MemModuleLoadRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemModuleLoadRequest, MemModuleLoadRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_MemModuleLoadRequest__FieldAccessorTable; }
    }
    
    public const int HandleFieldNumber = 1;
    private bool hasHandle;
    private global::bnet.protocol.ContentHandle handle_;
    public bool HasHandle {
      get { return hasHandle; }
    }
    public global::bnet.protocol.ContentHandle Handle {
      get { return handle_ ?? global::bnet.protocol.ContentHandle.DefaultInstance; }
    }
    
    public const int KeyFieldNumber = 2;
    private bool hasKey;
    private pb::ByteString key_ = pb::ByteString.Empty;
    public bool HasKey {
      get { return hasKey; }
    }
    public pb::ByteString Key {
      get { return key_; }
    }
    
    public const int InputFieldNumber = 3;
    private bool hasInput;
    private pb::ByteString input_ = pb::ByteString.Empty;
    public bool HasInput {
      get { return hasInput; }
    }
    public pb::ByteString Input {
      get { return input_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasHandle) return false;
        if (!hasKey) return false;
        if (!hasInput) return false;
        if (!Handle.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memModuleLoadRequestFieldNames;
      if (hasHandle) {
        output.WriteMessage(1, field_names[0], Handle);
      }
      if (hasKey) {
        output.WriteBytes(2, field_names[2], Key);
      }
      if (hasInput) {
        output.WriteBytes(3, field_names[1], Input);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasHandle) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Handle);
        }
        if (hasKey) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, Key);
        }
        if (hasInput) {
          size += pb::CodedOutputStream.ComputeBytesSize(3, Input);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemModuleLoadRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemModuleLoadRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemModuleLoadRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemModuleLoadRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemModuleLoadRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemModuleLoadRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemModuleLoadRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemModuleLoadRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemModuleLoadRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemModuleLoadRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemModuleLoadRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemModuleLoadRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemModuleLoadRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemModuleLoadRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemModuleLoadRequest result;
      
      private MemModuleLoadRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          MemModuleLoadRequest original = result;
          result = new MemModuleLoadRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemModuleLoadRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.MemModuleLoadRequest.Descriptor; }
      }
      
      public override MemModuleLoadRequest DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.MemModuleLoadRequest.DefaultInstance; }
      }
      
      public override MemModuleLoadRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemModuleLoadRequest) {
          return MergeFrom((MemModuleLoadRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemModuleLoadRequest other) {
        if (other == global::bnet.protocol.authentication.MemModuleLoadRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasHandle) {
          MergeHandle(other.Handle);
        }
        if (other.HasKey) {
          Key = other.Key;
        }
        if (other.HasInput) {
          Input = other.Input;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memModuleLoadRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memModuleLoadRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.ContentHandle.Builder subBuilder = global::bnet.protocol.ContentHandle.CreateBuilder();
              if (result.hasHandle) {
                subBuilder.MergeFrom(Handle);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Handle = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasKey = input.ReadBytes(ref result.key_);
              break;
            }
            case 26: {
              result.hasInput = input.ReadBytes(ref result.input_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasHandle {
       get { return result.hasHandle; }
      }
      public global::bnet.protocol.ContentHandle Handle {
        get { return result.Handle; }
        set { SetHandle(value); }
      }
      public Builder SetHandle(global::bnet.protocol.ContentHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHandle = true;
        result.handle_ = value;
        return this;
      }
      public Builder SetHandle(global::bnet.protocol.ContentHandle.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasHandle = true;
        result.handle_ = builderForValue.Build();
        return this;
      }
      public Builder MergeHandle(global::bnet.protocol.ContentHandle value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasHandle &&
            result.handle_ != global::bnet.protocol.ContentHandle.DefaultInstance) {
            result.handle_ = global::bnet.protocol.ContentHandle.CreateBuilder(result.handle_).MergeFrom(value).BuildPartial();
        } else {
          result.handle_ = value;
        }
        result.hasHandle = true;
        return this;
      }
      public Builder ClearHandle() {
        PrepareBuilder();
        result.hasHandle = false;
        result.handle_ = null;
        return this;
      }
      
      public bool HasKey {
        get { return result.hasKey; }
      }
      public pb::ByteString Key {
        get { return result.Key; }
        set { SetKey(value); }
      }
      public Builder SetKey(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasKey = true;
        result.key_ = value;
        return this;
      }
      public Builder ClearKey() {
        PrepareBuilder();
        result.hasKey = false;
        result.key_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasInput {
        get { return result.hasInput; }
      }
      public pb::ByteString Input {
        get { return result.Input; }
        set { SetInput(value); }
      }
      public Builder SetInput(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInput = true;
        result.input_ = value;
        return this;
      }
      public Builder ClearInput() {
        PrepareBuilder();
        result.hasInput = false;
        result.input_ = pb::ByteString.Empty;
        return this;
      }
    }
    static MemModuleLoadRequest() {
      object.ReferenceEquals(global::bnet.protocol.authentication.AuthenticationService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class MemModuleLoadResponse : pb::GeneratedMessage<MemModuleLoadResponse, MemModuleLoadResponse.Builder> {
    private MemModuleLoadResponse() { }
    private static readonly MemModuleLoadResponse defaultInstance = new MemModuleLoadResponse().MakeReadOnly();
    private static readonly string[] _memModuleLoadResponseFieldNames = new string[] { "data" };
    private static readonly uint[] _memModuleLoadResponseFieldTags = new uint[] { 10 };
    public static MemModuleLoadResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MemModuleLoadResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MemModuleLoadResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_MemModuleLoadResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MemModuleLoadResponse, MemModuleLoadResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.authentication.AuthenticationService.internal__static_bnet_protocol_authentication_MemModuleLoadResponse__FieldAccessorTable; }
    }
    
    public const int DataFieldNumber = 1;
    private bool hasData;
    private pb::ByteString data_ = pb::ByteString.Empty;
    public bool HasData {
      get { return hasData; }
    }
    public pb::ByteString Data {
      get { return data_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasData) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _memModuleLoadResponseFieldNames;
      if (hasData) {
        output.WriteBytes(1, field_names[0], Data);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasData) {
          size += pb::CodedOutputStream.ComputeBytesSize(1, Data);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MemModuleLoadResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemModuleLoadResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemModuleLoadResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MemModuleLoadResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MemModuleLoadResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemModuleLoadResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MemModuleLoadResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MemModuleLoadResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MemModuleLoadResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MemModuleLoadResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MemModuleLoadResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MemModuleLoadResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<MemModuleLoadResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MemModuleLoadResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MemModuleLoadResponse result;
      
      private MemModuleLoadResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          MemModuleLoadResponse original = result;
          result = new MemModuleLoadResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MemModuleLoadResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.authentication.MemModuleLoadResponse.Descriptor; }
      }
      
      public override MemModuleLoadResponse DefaultInstanceForType {
        get { return global::bnet.protocol.authentication.MemModuleLoadResponse.DefaultInstance; }
      }
      
      public override MemModuleLoadResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MemModuleLoadResponse) {
          return MergeFrom((MemModuleLoadResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MemModuleLoadResponse other) {
        if (other == global::bnet.protocol.authentication.MemModuleLoadResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasData) {
          Data = other.Data;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_memModuleLoadResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _memModuleLoadResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasData = input.ReadBytes(ref result.data_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasData {
        get { return result.hasData; }
      }
      public pb::ByteString Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder ClearData() {
        PrepareBuilder();
        result.hasData = false;
        result.data_ = pb::ByteString.Empty;
        return this;
      }
    }
    static MemModuleLoadResponse() {
      object.ReferenceEquals(global::bnet.protocol.authentication.AuthenticationService.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class AuthenticationClient : pb::IService {
    public abstract void ModuleLoad(
        pb::IRpcController controller,
        global::bnet.protocol.authentication.ModuleLoadRequest request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void ModuleMessage(
        pb::IRpcController controller,
        global::bnet.protocol.authentication.ModuleMessageRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void AccountSettings(
        pb::IRpcController controller,
        global::bnet.protocol.authentication.AccountSettingsNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void ServerStateChange(
        pb::IRpcController controller,
        global::bnet.protocol.authentication.ServerStateChangeRequest request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void LogonComplete(
        pb::IRpcController controller,
        global::bnet.protocol.authentication.LogonResult request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void MemModuleLoad(
        pb::IRpcController controller,
        global::bnet.protocol.authentication.MemModuleLoadRequest request,
        global::System.Action<global::bnet.protocol.authentication.MemModuleLoadResponse> done);
    public abstract void LogonUpdate(
        pb::IRpcController controller,
        global::bnet.protocol.authentication.LogonUpdateRequest request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return AuthenticationService.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.ModuleLoad(controller, (global::bnet.protocol.authentication.ModuleLoadRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 1:
          this.ModuleMessage(controller, (global::bnet.protocol.authentication.ModuleMessageRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 2:
          this.AccountSettings(controller, (global::bnet.protocol.authentication.AccountSettingsNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 3:
          this.ServerStateChange(controller, (global::bnet.protocol.authentication.ServerStateChangeRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 4:
          this.LogonComplete(controller, (global::bnet.protocol.authentication.LogonResult) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 5:
          this.MemModuleLoad(controller, (global::bnet.protocol.authentication.MemModuleLoadRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.authentication.MemModuleLoadResponse>(
              done));
          return;
        case 6:
          this.LogonUpdate(controller, (global::bnet.protocol.authentication.LogonUpdateRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.authentication.ModuleLoadRequest.DefaultInstance;
        case 1:
          return global::bnet.protocol.authentication.ModuleMessageRequest.DefaultInstance;
        case 2:
          return global::bnet.protocol.authentication.AccountSettingsNotification.DefaultInstance;
        case 3:
          return global::bnet.protocol.authentication.ServerStateChangeRequest.DefaultInstance;
        case 4:
          return global::bnet.protocol.authentication.LogonResult.DefaultInstance;
        case 5:
          return global::bnet.protocol.authentication.MemModuleLoadRequest.DefaultInstance;
        case 6:
          return global::bnet.protocol.authentication.LogonUpdateRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 1:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 2:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 3:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 4:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 5:
          return global::bnet.protocol.authentication.MemModuleLoadResponse.DefaultInstance;
        case 6:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bnet.protocol.authentication.AuthenticationClient {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void ModuleLoad(
          pb::IRpcController controller,
          global::bnet.protocol.authentication.ModuleLoadRequest request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void ModuleMessage(
          pb::IRpcController controller,
          global::bnet.protocol.authentication.ModuleMessageRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void AccountSettings(
          pb::IRpcController controller,
          global::bnet.protocol.authentication.AccountSettingsNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void ServerStateChange(
          pb::IRpcController controller,
          global::bnet.protocol.authentication.ServerStateChangeRequest request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void LogonComplete(
          pb::IRpcController controller,
          global::bnet.protocol.authentication.LogonResult request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void MemModuleLoad(
          pb::IRpcController controller,
          global::bnet.protocol.authentication.MemModuleLoadRequest request,
          global::System.Action<global::bnet.protocol.authentication.MemModuleLoadResponse> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bnet.protocol.authentication.MemModuleLoadResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.authentication.MemModuleLoadResponse, global::bnet.protocol.authentication.MemModuleLoadResponse.Builder>(done, global::bnet.protocol.authentication.MemModuleLoadResponse.DefaultInstance));
      }
      
      public override void LogonUpdate(
          pb::IRpcController controller,
          global::bnet.protocol.authentication.LogonUpdateRequest request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class AuthenticationServer : pb::IService {
    public abstract void Logon(
        pb::IRpcController controller,
        global::bnet.protocol.authentication.LogonRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void ModuleNotify(
        pb::IRpcController controller,
        global::bnet.protocol.authentication.ModuleNotification request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void ModuleMessage(
        pb::IRpcController controller,
        global::bnet.protocol.authentication.ModuleMessageRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void SelectGameAccount(
        pb::IRpcController controller,
        global::bnet.protocol.EntityId request,
        global::System.Action<global::bnet.protocol.NoData> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return AuthenticationService.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.Logon(controller, (global::bnet.protocol.authentication.LogonRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 1:
          this.ModuleNotify(controller, (global::bnet.protocol.authentication.ModuleNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 2:
          this.ModuleMessage(controller, (global::bnet.protocol.authentication.ModuleMessageRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 3:
          this.SelectGameAccount(controller, (global::bnet.protocol.EntityId) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.authentication.LogonRequest.DefaultInstance;
        case 1:
          return global::bnet.protocol.authentication.ModuleNotification.DefaultInstance;
        case 2:
          return global::bnet.protocol.authentication.ModuleMessageRequest.DefaultInstance;
        case 3:
          return global::bnet.protocol.EntityId.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 1:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 2:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 3:
          return global::bnet.protocol.NoData.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bnet.protocol.authentication.AuthenticationServer {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void Logon(
          pb::IRpcController controller,
          global::bnet.protocol.authentication.LogonRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void ModuleNotify(
          pb::IRpcController controller,
          global::bnet.protocol.authentication.ModuleNotification request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void ModuleMessage(
          pb::IRpcController controller,
          global::bnet.protocol.authentication.ModuleMessageRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void SelectGameAccount(
          pb::IRpcController controller,
          global::bnet.protocol.EntityId request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
