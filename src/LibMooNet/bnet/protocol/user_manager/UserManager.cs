// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.user_manager {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class UserManager {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_PlayerReport__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.PlayerReport, global::bnet.protocol.user_manager.PlayerReport.Builder> internal__static_bnet_protocol_user_manager_PlayerReport__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_RecentPlayer__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RecentPlayer, global::bnet.protocol.user_manager.RecentPlayer.Builder> internal__static_bnet_protocol_user_manager_RecentPlayer__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.SubscribeToUserManagerRequest, global::bnet.protocol.user_manager.SubscribeToUserManagerRequest.Builder> internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.SubscribeToUserManagerResponse, global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.Builder> internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_ReportToonRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.ReportToonRequest, global::bnet.protocol.user_manager.ReportToonRequest.Builder> internal__static_bnet_protocol_user_manager_ReportToonRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_ReportToonResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.ReportToonResponse, global::bnet.protocol.user_manager.ReportToonResponse.Builder> internal__static_bnet_protocol_user_manager_ReportToonResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.AddRecentPlayersRequest, global::bnet.protocol.user_manager.AddRecentPlayersRequest.Builder> internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.AddRecentPlayersResponse, global::bnet.protocol.user_manager.AddRecentPlayersResponse.Builder> internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_RemoveRecentPlayersRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RemoveRecentPlayersRequest, global::bnet.protocol.user_manager.RemoveRecentPlayersRequest.Builder> internal__static_bnet_protocol_user_manager_RemoveRecentPlayersRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_RemoveRecentPlayersResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RemoveRecentPlayersResponse, global::bnet.protocol.user_manager.RemoveRecentPlayersResponse.Builder> internal__static_bnet_protocol_user_manager_RemoveRecentPlayersResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_ReportAccountRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.ReportAccountRequest, global::bnet.protocol.user_manager.ReportAccountRequest.Builder> internal__static_bnet_protocol_user_manager_ReportAccountRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_ReportAccountResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.ReportAccountResponse, global::bnet.protocol.user_manager.ReportAccountResponse.Builder> internal__static_bnet_protocol_user_manager_ReportAccountResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_IgnoreInviterRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.IgnoreInviterRequest, global::bnet.protocol.user_manager.IgnoreInviterRequest.Builder> internal__static_bnet_protocol_user_manager_IgnoreInviterRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_UnignoreInvitersRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.UnignoreInvitersRequest, global::bnet.protocol.user_manager.UnignoreInvitersRequest.Builder> internal__static_bnet_protocol_user_manager_UnignoreInvitersRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_BlockToonRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.BlockToonRequest, global::bnet.protocol.user_manager.BlockToonRequest.Builder> internal__static_bnet_protocol_user_manager_BlockToonRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_UnblockToonsRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.UnblockToonsRequest, global::bnet.protocol.user_manager.UnblockToonsRequest.Builder> internal__static_bnet_protocol_user_manager_UnblockToonsRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_UnblockToonsResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.UnblockToonsResponse, global::bnet.protocol.user_manager.UnblockToonsResponse.Builder> internal__static_bnet_protocol_user_manager_UnblockToonsResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_UnignoreInvitersResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.UnignoreInvitersResponse, global::bnet.protocol.user_manager.UnignoreInvitersResponse.Builder> internal__static_bnet_protocol_user_manager_UnignoreInvitersResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_user_manager_InviterIgnoredNotification__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.InviterIgnoredNotification, global::bnet.protocol.user_manager.InviterIgnoredNotification.Builder> internal__static_bnet_protocol_user_manager_InviterIgnoredNotification__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static UserManager() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CjJzZXJ2aWNlL3VzZXJfbWFuYWdlci9kZWZpbml0aW9uL3VzZXJfbWFuYWdl" + 
          "ci5wcm90bxIaYm5ldC5wcm90b2NvbC51c2VyX21hbmFnZXIaHGxpYi9wcm90" + 
          "b2NvbC9hdHRyaWJ1dGUucHJvdG8aGWxpYi9wcm90b2NvbC9lbnRpdHkucHJv" + 
          "dG8aEWxpYi9ycGMvcnBjLnByb3RvIsgCCgxQbGF5ZXJSZXBvcnQSUgoOY29t" + 
          "cGxhaW50X2NvZGUYASACKA4yOi5ibmV0LnByb3RvY29sLnVzZXJfbWFuYWdl" + 
          "ci5QbGF5ZXJSZXBvcnQuVXNlckNvbXBsYWludENvZGUSFgoOY29tcGxhaW50" + 
          "X25vdGUYAiACKAkiywEKEVVzZXJDb21wbGFpbnRDb2RlEhcKE1VTRVJfQ09N" + 
          "UExBSU5UX1NQQU0QABIdChlVU0VSX0NPTVBMQUlOVF9IQVJBU1NNRU5UEAES" + 
          "IwofVVNFUl9DT01QTEFJTlRfUkVBTF9MSUZFX1RIUkVBVBACEiUKIVVTRVJf" + 
          "Q09NUExBSU5UX0lOQVBQUk9QUklBVEVfTkFNRRADEhoKFlVTRVJfQ09NUExB" + 
          "SU5UX0hBQ0tJTkcQBBIWChJVU0VSX0NPTVBMQUlOVF9BTlkQBSKJAQoMUmVj" + 
          "ZW50UGxheWVyEicKBnBsYXllchgBIAIoCzIXLmJuZXQucHJvdG9jb2wuRW50" + 
          "aXR5SWQSGAoQdGltZXN0YW1wX3BsYXllZBgCIAEoBhI2CgphdHRyaWJ1dGVz" + 
          "GAMgAygLMiIuYm5ldC5wcm90b2NvbC5hdHRyaWJ1dGUuQXR0cmlidXRlIjIK" + 
          "HVN1YnNjcmliZVRvVXNlck1hbmFnZXJSZXF1ZXN0EhEKCW9iamVjdF9pZBgB" + 
          "IAIoBCLFAQoeU3Vic2NyaWJlVG9Vc2VyTWFuYWdlclJlc3BvbnNlEkAKDnJl" + 
          "Y2VudF9wbGF5ZXJzGAIgAygLMiguYm5ldC5wcm90b2NvbC51c2VyX21hbmFn" + 
          "ZXIuUmVjZW50UGxheWVyEi4KDWJsb2NrZWRfdG9vbnMYAyADKAsyFy5ibmV0" + 
          "LnByb3RvY29sLkVudGl0eUlkEjEKEGlnbm9yZWRfaW52aXRlcnMYBCADKAsy" + 
          "Fy5ibmV0LnByb3RvY29sLkVudGl0eUlkIvwBChFSZXBvcnRUb29uUmVxdWVz" + 
          "dBIqCgl0YXJnZXRfaWQYASACKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlk" + 
          "EjgKBnJlcG9ydBgCIAIoCzIoLmJuZXQucHJvdG9jb2wudXNlcl9tYW5hZ2Vy" + 
          "LlBsYXllclJlcG9ydBJSCg9ibG9ja2luZ19hY3Rpb24YAyABKA4yOS5ibmV0" + 
          "LnByb3RvY29sLnVzZXJfbWFuYWdlci5SZXBvcnRUb29uUmVxdWVzdC5CbG9j" + 
          "a0FjdGlvbiItCgtCbG9ja0FjdGlvbhIeChpTRVNTSU9OX0JMT0NLX0dBTUVf" + 
          "QUNDT1VOVBABIkQKElJlcG9ydFRvb25SZXNwb25zZRIuCg1yZXBvcnRlZF90" + 
          "b29uGAEgASgLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJZCJUChdBZGRSZWNl" + 
          "bnRQbGF5ZXJzUmVxdWVzdBI5CgdwbGF5ZXJzGAEgAygLMiguYm5ldC5wcm90" + 
          "b2NvbC51c2VyX21hbmFnZXIuUmVjZW50UGxheWVyIp4BChhBZGRSZWNlbnRQ" + 
          "bGF5ZXJzUmVzcG9uc2USPwoNcGxheWVyc19hZGRlZBgBIAMoCzIoLmJuZXQu" + 
          "cHJvdG9jb2wudXNlcl9tYW5hZ2VyLlJlY2VudFBsYXllchJBCg9wbGF5ZXJz" + 
          "X3JlbW92ZWQYAyADKAsyKC5ibmV0LnByb3RvY29sLnVzZXJfbWFuYWdlci5S" + 
          "ZWNlbnRQbGF5ZXIiVwoaUmVtb3ZlUmVjZW50UGxheWVyc1JlcXVlc3QSOQoH" + 
          "cGxheWVycxgCIAMoCzIoLmJuZXQucHJvdG9jb2wudXNlcl9tYW5hZ2VyLlJl" + 
          "Y2VudFBsYXllciJgChtSZW1vdmVSZWNlbnRQbGF5ZXJzUmVzcG9uc2USQQoP" + 
          "cGxheWVyc19yZW1vdmVkGAEgAygLMiguYm5ldC5wcm90b2NvbC51c2VyX21h" + 
          "bmFnZXIuUmVjZW50UGxheWVyIoEBChRSZXBvcnRBY2NvdW50UmVxdWVzdBIv" + 
          "Cg50YXJnZXRfYWNjb3VudBgBIAIoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5" + 
          "SWQSOAoGcmVwb3J0GAIgAigLMiguYm5ldC5wcm90b2NvbC51c2VyX21hbmFn" + 
          "ZXIuUGxheWVyUmVwb3J0IkoKFVJlcG9ydEFjY291bnRSZXNwb25zZRIxChBy" + 
          "ZXBvcnRlZF9hY2NvdW50GAEgASgLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJ" + 
          "ZCJCChRJZ25vcmVJbnZpdGVyUmVxdWVzdBIqCgl0YXJnZXRfaWQYASACKAsy" + 
          "Fy5ibmV0LnByb3RvY29sLkVudGl0eUlkIkUKF1VuaWdub3JlSW52aXRlcnNS" + 
          "ZXF1ZXN0EioKCXRhcmdldF9pZBgBIAMoCzIXLmJuZXQucHJvdG9jb2wuRW50" + 
          "aXR5SWQiPgoQQmxvY2tUb29uUmVxdWVzdBIqCgl0YXJnZXRfaWQYASACKAsy" + 
          "Fy5ibmV0LnByb3RvY29sLkVudGl0eUlkIkEKE1VuYmxvY2tUb29uc1JlcXVl" + 
          "c3QSKgoJdGFyZ2V0X2lkGAEgAygLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJ" + 
          "ZCJHChRVbmJsb2NrVG9vbnNSZXNwb25zZRIvCg51bmJsb2NrZWRfdG9vbhgB" + 
          "IAMoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQiTgoYVW5pZ25vcmVJbnZp" + 
          "dGVyc1Jlc3BvbnNlEjIKEXVuaWdub3JlZF9pbnZpdGVyGAEgAygLMhcuYm5l" + 
          "dC5wcm90b2NvbC5FbnRpdHlJZCJGChpJbnZpdGVySWdub3JlZE5vdGlmaWNh" + 
          "dGlvbhIoCgdwbGF5ZXJzGAEgAygLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJ" + 
          "ZDLnCAoSVXNlck1hbmFnZXJTZXJ2aWNlEpUBChZTdWJzY3JpYmVUb1VzZXJN" + 
          "YW5hZ2VyEjkuYm5ldC5wcm90b2NvbC51c2VyX21hbmFnZXIuU3Vic2NyaWJl" + 
          "VG9Vc2VyTWFuYWdlclJlcXVlc3QaOi5ibmV0LnByb3RvY29sLnVzZXJfbWFu" + 
          "YWdlci5TdWJzY3JpYmVUb1VzZXJNYW5hZ2VyUmVzcG9uc2UiBIC1GAESgwEK" + 
          "EEFkZFJlY2VudFBsYXllcnMSMy5ibmV0LnByb3RvY29sLnVzZXJfbWFuYWdl" + 
          "ci5BZGRSZWNlbnRQbGF5ZXJzUmVxdWVzdBo0LmJuZXQucHJvdG9jb2wudXNl" + 
          "cl9tYW5hZ2VyLkFkZFJlY2VudFBsYXllcnNSZXNwb25zZSIEgLUYBRKMAQoT" + 
          "UmVtb3ZlUmVjZW50UGxheWVycxI2LmJuZXQucHJvdG9jb2wudXNlcl9tYW5h" + 
          "Z2VyLlJlbW92ZVJlY2VudFBsYXllcnNSZXF1ZXN0GjcuYm5ldC5wcm90b2Nv" + 
          "bC51c2VyX21hbmFnZXIuUmVtb3ZlUmVjZW50UGxheWVyc1Jlc3BvbnNlIgSA" + 
          "tRgGEnEKClJlcG9ydFRvb24SLS5ibmV0LnByb3RvY29sLnVzZXJfbWFuYWdl" + 
          "ci5SZXBvcnRUb29uUmVxdWVzdBouLmJuZXQucHJvdG9jb2wudXNlcl9tYW5h" + 
          "Z2VyLlJlcG9ydFRvb25SZXNwb25zZSIEgLUYBxJWCglCbG9ja1Rvb24SLC5i" + 
          "bmV0LnByb3RvY29sLnVzZXJfbWFuYWdlci5CbG9ja1Rvb25SZXF1ZXN0GhUu" + 
          "Ym5ldC5wcm90b2NvbC5Ob0RhdGEiBIC1GAgSdwoMVW5ibG9ja1Rvb25zEi8u" + 
          "Ym5ldC5wcm90b2NvbC51c2VyX21hbmFnZXIuVW5ibG9ja1Rvb25zUmVxdWVz" + 
          "dBowLmJuZXQucHJvdG9jb2wudXNlcl9tYW5hZ2VyLlVuYmxvY2tUb29uc1Jl" + 
          "c3BvbnNlIgSAtRgNEnoKDVJlcG9ydEFjY291bnQSMC5ibmV0LnByb3RvY29s" + 
          "LnVzZXJfbWFuYWdlci5SZXBvcnRBY2NvdW50UmVxdWVzdBoxLmJuZXQucHJv" + 
          "dG9jb2wudXNlcl9tYW5hZ2VyLlJlcG9ydEFjY291bnRSZXNwb25zZSIEgLUY" + 
          "ChJeCg1JZ25vcmVJbnZpdGVyEjAuYm5ldC5wcm90b2NvbC51c2VyX21hbmFn" + 
          "ZXIuSWdub3JlSW52aXRlclJlcXVlc3QaFS5ibmV0LnByb3RvY29sLk5vRGF0" + 
          "YSIEgLUYCxKDAQoQVW5pZ25vcmVJbnZpdGVycxIzLmJuZXQucHJvdG9jb2wu" + 
          "dXNlcl9tYW5hZ2VyLlVuaWdub3JlSW52aXRlcnNSZXF1ZXN0GjQuYm5ldC5w" + 
          "cm90b2NvbC51c2VyX21hbmFnZXIuVW5pZ25vcmVJbnZpdGVyc1Jlc3BvbnNl" + 
          "IgSAtRgOMvkBChFVc2VyTWFuYWdlck5vdGlmeRJwChROb3RpZnlJbnZpdGVy" + 
          "SWdub3JlZBI2LmJuZXQucHJvdG9jb2wudXNlcl9tYW5hZ2VyLkludml0ZXJJ" + 
          "Z25vcmVkTm90aWZpY2F0aW9uGhouYm5ldC5wcm90b2NvbC5OT19SRVNQT05T" + 
          "RSIEgLUYAxJyChZOb3RpZnlJbnZpdGVyVW5pZ25vcmVkEjYuYm5ldC5wcm90" + 
          "b2NvbC51c2VyX21hbmFnZXIuSW52aXRlcklnbm9yZWROb3RpZmljYXRpb24a" + 
          "Gi5ibmV0LnByb3RvY29sLk5PX1JFU1BPTlNFIgSAtRgEQgOAAQA=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bnet_protocol_user_manager_PlayerReport__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bnet_protocol_user_manager_PlayerReport__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.PlayerReport, global::bnet.protocol.user_manager.PlayerReport.Builder>(internal__static_bnet_protocol_user_manager_PlayerReport__Descriptor,
                new string[] { "ComplaintCode", "ComplaintNote", });
        internal__static_bnet_protocol_user_manager_RecentPlayer__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bnet_protocol_user_manager_RecentPlayer__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RecentPlayer, global::bnet.protocol.user_manager.RecentPlayer.Builder>(internal__static_bnet_protocol_user_manager_RecentPlayer__Descriptor,
                new string[] { "Player", "TimestampPlayed", "Attributes", });
        internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.SubscribeToUserManagerRequest, global::bnet.protocol.user_manager.SubscribeToUserManagerRequest.Builder>(internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__Descriptor,
                new string[] { "ObjectId", });
        internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.SubscribeToUserManagerResponse, global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.Builder>(internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__Descriptor,
                new string[] { "RecentPlayers", "BlockedToons", "IgnoredInviters", });
        internal__static_bnet_protocol_user_manager_ReportToonRequest__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bnet_protocol_user_manager_ReportToonRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.ReportToonRequest, global::bnet.protocol.user_manager.ReportToonRequest.Builder>(internal__static_bnet_protocol_user_manager_ReportToonRequest__Descriptor,
                new string[] { "TargetId", "Report", "BlockingAction", });
        internal__static_bnet_protocol_user_manager_ReportToonResponse__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bnet_protocol_user_manager_ReportToonResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.ReportToonResponse, global::bnet.protocol.user_manager.ReportToonResponse.Builder>(internal__static_bnet_protocol_user_manager_ReportToonResponse__Descriptor,
                new string[] { "ReportedToon", });
        internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__Descriptor = Descriptor.MessageTypes[6];
        internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.AddRecentPlayersRequest, global::bnet.protocol.user_manager.AddRecentPlayersRequest.Builder>(internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__Descriptor,
                new string[] { "Players", });
        internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__Descriptor = Descriptor.MessageTypes[7];
        internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.AddRecentPlayersResponse, global::bnet.protocol.user_manager.AddRecentPlayersResponse.Builder>(internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__Descriptor,
                new string[] { "PlayersAdded", "PlayersRemoved", });
        internal__static_bnet_protocol_user_manager_RemoveRecentPlayersRequest__Descriptor = Descriptor.MessageTypes[8];
        internal__static_bnet_protocol_user_manager_RemoveRecentPlayersRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RemoveRecentPlayersRequest, global::bnet.protocol.user_manager.RemoveRecentPlayersRequest.Builder>(internal__static_bnet_protocol_user_manager_RemoveRecentPlayersRequest__Descriptor,
                new string[] { "Players", });
        internal__static_bnet_protocol_user_manager_RemoveRecentPlayersResponse__Descriptor = Descriptor.MessageTypes[9];
        internal__static_bnet_protocol_user_manager_RemoveRecentPlayersResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.RemoveRecentPlayersResponse, global::bnet.protocol.user_manager.RemoveRecentPlayersResponse.Builder>(internal__static_bnet_protocol_user_manager_RemoveRecentPlayersResponse__Descriptor,
                new string[] { "PlayersRemoved", });
        internal__static_bnet_protocol_user_manager_ReportAccountRequest__Descriptor = Descriptor.MessageTypes[10];
        internal__static_bnet_protocol_user_manager_ReportAccountRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.ReportAccountRequest, global::bnet.protocol.user_manager.ReportAccountRequest.Builder>(internal__static_bnet_protocol_user_manager_ReportAccountRequest__Descriptor,
                new string[] { "TargetAccount", "Report", });
        internal__static_bnet_protocol_user_manager_ReportAccountResponse__Descriptor = Descriptor.MessageTypes[11];
        internal__static_bnet_protocol_user_manager_ReportAccountResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.ReportAccountResponse, global::bnet.protocol.user_manager.ReportAccountResponse.Builder>(internal__static_bnet_protocol_user_manager_ReportAccountResponse__Descriptor,
                new string[] { "ReportedAccount", });
        internal__static_bnet_protocol_user_manager_IgnoreInviterRequest__Descriptor = Descriptor.MessageTypes[12];
        internal__static_bnet_protocol_user_manager_IgnoreInviterRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.IgnoreInviterRequest, global::bnet.protocol.user_manager.IgnoreInviterRequest.Builder>(internal__static_bnet_protocol_user_manager_IgnoreInviterRequest__Descriptor,
                new string[] { "TargetId", });
        internal__static_bnet_protocol_user_manager_UnignoreInvitersRequest__Descriptor = Descriptor.MessageTypes[13];
        internal__static_bnet_protocol_user_manager_UnignoreInvitersRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.UnignoreInvitersRequest, global::bnet.protocol.user_manager.UnignoreInvitersRequest.Builder>(internal__static_bnet_protocol_user_manager_UnignoreInvitersRequest__Descriptor,
                new string[] { "TargetId", });
        internal__static_bnet_protocol_user_manager_BlockToonRequest__Descriptor = Descriptor.MessageTypes[14];
        internal__static_bnet_protocol_user_manager_BlockToonRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.BlockToonRequest, global::bnet.protocol.user_manager.BlockToonRequest.Builder>(internal__static_bnet_protocol_user_manager_BlockToonRequest__Descriptor,
                new string[] { "TargetId", });
        internal__static_bnet_protocol_user_manager_UnblockToonsRequest__Descriptor = Descriptor.MessageTypes[15];
        internal__static_bnet_protocol_user_manager_UnblockToonsRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.UnblockToonsRequest, global::bnet.protocol.user_manager.UnblockToonsRequest.Builder>(internal__static_bnet_protocol_user_manager_UnblockToonsRequest__Descriptor,
                new string[] { "TargetId", });
        internal__static_bnet_protocol_user_manager_UnblockToonsResponse__Descriptor = Descriptor.MessageTypes[16];
        internal__static_bnet_protocol_user_manager_UnblockToonsResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.UnblockToonsResponse, global::bnet.protocol.user_manager.UnblockToonsResponse.Builder>(internal__static_bnet_protocol_user_manager_UnblockToonsResponse__Descriptor,
                new string[] { "UnblockedToon", });
        internal__static_bnet_protocol_user_manager_UnignoreInvitersResponse__Descriptor = Descriptor.MessageTypes[17];
        internal__static_bnet_protocol_user_manager_UnignoreInvitersResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.UnignoreInvitersResponse, global::bnet.protocol.user_manager.UnignoreInvitersResponse.Builder>(internal__static_bnet_protocol_user_manager_UnignoreInvitersResponse__Descriptor,
                new string[] { "UnignoredInviter", });
        internal__static_bnet_protocol_user_manager_InviterIgnoredNotification__Descriptor = Descriptor.MessageTypes[18];
        internal__static_bnet_protocol_user_manager_InviterIgnoredNotification__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.user_manager.InviterIgnoredNotification, global::bnet.protocol.user_manager.InviterIgnoredNotification.Builder>(internal__static_bnet_protocol_user_manager_InviterIgnoredNotification__Descriptor,
                new string[] { "Players", });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        global::bnet.protocol.attribute.Proto.Attribute.RegisterAllExtensions(registry);
        global::bnet.protocol.Entity.RegisterAllExtensions(registry);
        global::bnet.protocol.Rpc.RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bnet.protocol.attribute.Proto.Attribute.Descriptor, 
          global::bnet.protocol.Entity.Descriptor, 
          global::bnet.protocol.Rpc.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class PlayerReport : pb::GeneratedMessage<PlayerReport, PlayerReport.Builder> {
    private PlayerReport() { }
    private static readonly PlayerReport defaultInstance = new PlayerReport().MakeReadOnly();
    private static readonly string[] _playerReportFieldNames = new string[] { "complaint_code", "complaint_note" };
    private static readonly uint[] _playerReportFieldTags = new uint[] { 8, 18 };
    public static PlayerReport DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override PlayerReport DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override PlayerReport ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_PlayerReport__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<PlayerReport, PlayerReport.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_PlayerReport__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static class Types {
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
      public enum UserComplaintCode {
        USER_COMPLAINT_SPAM = 0,
        USER_COMPLAINT_HARASSMENT = 1,
        USER_COMPLAINT_REAL_LIFE_THREAT = 2,
        USER_COMPLAINT_INAPPROPRIATE_NAME = 3,
        USER_COMPLAINT_HACKING = 4,
        USER_COMPLAINT_ANY = 5,
      }
      
    }
    #endregion
    
    public const int ComplaintCodeFieldNumber = 1;
    private bool hasComplaintCode;
    private global::bnet.protocol.user_manager.PlayerReport.Types.UserComplaintCode complaintCode_ = global::bnet.protocol.user_manager.PlayerReport.Types.UserComplaintCode.USER_COMPLAINT_SPAM;
    public bool HasComplaintCode {
      get { return hasComplaintCode; }
    }
    public global::bnet.protocol.user_manager.PlayerReport.Types.UserComplaintCode ComplaintCode {
      get { return complaintCode_; }
    }
    
    public const int ComplaintNoteFieldNumber = 2;
    private bool hasComplaintNote;
    private string complaintNote_ = "";
    public bool HasComplaintNote {
      get { return hasComplaintNote; }
    }
    public string ComplaintNote {
      get { return complaintNote_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasComplaintCode) return false;
        if (!hasComplaintNote) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _playerReportFieldNames;
      if (hasComplaintCode) {
        output.WriteEnum(1, field_names[0], (int) ComplaintCode, ComplaintCode);
      }
      if (hasComplaintNote) {
        output.WriteString(2, field_names[1], ComplaintNote);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasComplaintCode) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) ComplaintCode);
        }
        if (hasComplaintNote) {
          size += pb::CodedOutputStream.ComputeStringSize(2, ComplaintNote);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static PlayerReport ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlayerReport ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlayerReport ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static PlayerReport ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static PlayerReport ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlayerReport ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static PlayerReport ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static PlayerReport ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static PlayerReport ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static PlayerReport ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private PlayerReport MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(PlayerReport prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<PlayerReport, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(PlayerReport cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private PlayerReport result;
      
      private PlayerReport PrepareBuilder() {
        if (resultIsReadOnly) {
          PlayerReport original = result;
          result = new PlayerReport();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override PlayerReport MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.PlayerReport.Descriptor; }
      }
      
      public override PlayerReport DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.PlayerReport.DefaultInstance; }
      }
      
      public override PlayerReport BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is PlayerReport) {
          return MergeFrom((PlayerReport) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(PlayerReport other) {
        if (other == global::bnet.protocol.user_manager.PlayerReport.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasComplaintCode) {
          ComplaintCode = other.ComplaintCode;
        }
        if (other.HasComplaintNote) {
          ComplaintNote = other.ComplaintNote;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_playerReportFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _playerReportFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.complaintCode_, out unknown)) {
                result.hasComplaintCode = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasComplaintNote = input.ReadString(ref result.complaintNote_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasComplaintCode {
       get { return result.hasComplaintCode; }
      }
      public global::bnet.protocol.user_manager.PlayerReport.Types.UserComplaintCode ComplaintCode {
        get { return result.ComplaintCode; }
        set { SetComplaintCode(value); }
      }
      public Builder SetComplaintCode(global::bnet.protocol.user_manager.PlayerReport.Types.UserComplaintCode value) {
        PrepareBuilder();
        result.hasComplaintCode = true;
        result.complaintCode_ = value;
        return this;
      }
      public Builder ClearComplaintCode() {
        PrepareBuilder();
        result.hasComplaintCode = false;
        result.complaintCode_ = global::bnet.protocol.user_manager.PlayerReport.Types.UserComplaintCode.USER_COMPLAINT_SPAM;
        return this;
      }
      
      public bool HasComplaintNote {
        get { return result.hasComplaintNote; }
      }
      public string ComplaintNote {
        get { return result.ComplaintNote; }
        set { SetComplaintNote(value); }
      }
      public Builder SetComplaintNote(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasComplaintNote = true;
        result.complaintNote_ = value;
        return this;
      }
      public Builder ClearComplaintNote() {
        PrepareBuilder();
        result.hasComplaintNote = false;
        result.complaintNote_ = "";
        return this;
      }
    }
    static PlayerReport() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RecentPlayer : pb::GeneratedMessage<RecentPlayer, RecentPlayer.Builder> {
    private RecentPlayer() { }
    private static readonly RecentPlayer defaultInstance = new RecentPlayer().MakeReadOnly();
    private static readonly string[] _recentPlayerFieldNames = new string[] { "attributes", "player", "timestamp_played" };
    private static readonly uint[] _recentPlayerFieldTags = new uint[] { 26, 10, 17 };
    public static RecentPlayer DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RecentPlayer DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RecentPlayer ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_RecentPlayer__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RecentPlayer, RecentPlayer.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_RecentPlayer__FieldAccessorTable; }
    }
    
    public const int PlayerFieldNumber = 1;
    private bool hasPlayer;
    private global::bnet.protocol.EntityId player_;
    public bool HasPlayer {
      get { return hasPlayer; }
    }
    public global::bnet.protocol.EntityId Player {
      get { return player_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int TimestampPlayedFieldNumber = 2;
    private bool hasTimestampPlayed;
    private ulong timestampPlayed_;
    public bool HasTimestampPlayed {
      get { return hasTimestampPlayed; }
    }
    public ulong TimestampPlayed {
      get { return timestampPlayed_; }
    }
    
    public const int AttributesFieldNumber = 3;
    private pbc::PopsicleList<global::bnet.protocol.attribute.Attribute> attributes_ = new pbc::PopsicleList<global::bnet.protocol.attribute.Attribute>();
    public scg::IList<global::bnet.protocol.attribute.Attribute> AttributesList {
      get { return attributes_; }
    }
    public int AttributesCount {
      get { return attributes_.Count; }
    }
    public global::bnet.protocol.attribute.Attribute GetAttributes(int index) {
      return attributes_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPlayer) return false;
        if (!Player.IsInitialized) return false;
        foreach (global::bnet.protocol.attribute.Attribute element in AttributesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _recentPlayerFieldNames;
      if (hasPlayer) {
        output.WriteMessage(1, field_names[1], Player);
      }
      if (hasTimestampPlayed) {
        output.WriteFixed64(2, field_names[2], TimestampPlayed);
      }
      if (attributes_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], attributes_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasPlayer) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Player);
        }
        if (hasTimestampPlayed) {
          size += pb::CodedOutputStream.ComputeFixed64Size(2, TimestampPlayed);
        }
        foreach (global::bnet.protocol.attribute.Attribute element in AttributesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RecentPlayer ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RecentPlayer ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RecentPlayer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RecentPlayer ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RecentPlayer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RecentPlayer MakeReadOnly() {
      attributes_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RecentPlayer prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RecentPlayer, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RecentPlayer cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RecentPlayer result;
      
      private RecentPlayer PrepareBuilder() {
        if (resultIsReadOnly) {
          RecentPlayer original = result;
          result = new RecentPlayer();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RecentPlayer MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.RecentPlayer.Descriptor; }
      }
      
      public override RecentPlayer DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance; }
      }
      
      public override RecentPlayer BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RecentPlayer) {
          return MergeFrom((RecentPlayer) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RecentPlayer other) {
        if (other == global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPlayer) {
          MergePlayer(other.Player);
        }
        if (other.HasTimestampPlayed) {
          TimestampPlayed = other.TimestampPlayed;
        }
        if (other.attributes_.Count != 0) {
          result.attributes_.Add(other.attributes_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_recentPlayerFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _recentPlayerFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasPlayer) {
                subBuilder.MergeFrom(Player);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Player = subBuilder.BuildPartial();
              break;
            }
            case 17: {
              result.hasTimestampPlayed = input.ReadFixed64(ref result.timestampPlayed_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.attributes_, global::bnet.protocol.attribute.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPlayer {
       get { return result.hasPlayer; }
      }
      public global::bnet.protocol.EntityId Player {
        get { return result.Player; }
        set { SetPlayer(value); }
      }
      public Builder SetPlayer(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPlayer = true;
        result.player_ = value;
        return this;
      }
      public Builder SetPlayer(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasPlayer = true;
        result.player_ = builderForValue.Build();
        return this;
      }
      public Builder MergePlayer(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasPlayer &&
            result.player_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.player_ = global::bnet.protocol.EntityId.CreateBuilder(result.player_).MergeFrom(value).BuildPartial();
        } else {
          result.player_ = value;
        }
        result.hasPlayer = true;
        return this;
      }
      public Builder ClearPlayer() {
        PrepareBuilder();
        result.hasPlayer = false;
        result.player_ = null;
        return this;
      }
      
      public bool HasTimestampPlayed {
        get { return result.hasTimestampPlayed; }
      }
      public ulong TimestampPlayed {
        get { return result.TimestampPlayed; }
        set { SetTimestampPlayed(value); }
      }
      public Builder SetTimestampPlayed(ulong value) {
        PrepareBuilder();
        result.hasTimestampPlayed = true;
        result.timestampPlayed_ = value;
        return this;
      }
      public Builder ClearTimestampPlayed() {
        PrepareBuilder();
        result.hasTimestampPlayed = false;
        result.timestampPlayed_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.attribute.Attribute> AttributesList {
        get { return PrepareBuilder().attributes_; }
      }
      public int AttributesCount {
        get { return result.AttributesCount; }
      }
      public global::bnet.protocol.attribute.Attribute GetAttributes(int index) {
        return result.GetAttributes(index);
      }
      public Builder SetAttributes(int index, global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributes_[index] = value;
        return this;
      }
      public Builder SetAttributes(int index, global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributes_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttributes(global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attributes_.Add(value);
        return this;
      }
      public Builder AddAttributes(global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attributes_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttributes(scg::IEnumerable<global::bnet.protocol.attribute.Attribute> values) {
        PrepareBuilder();
        result.attributes_.Add(values);
        return this;
      }
      public Builder ClearAttributes() {
        PrepareBuilder();
        result.attributes_.Clear();
        return this;
      }
    }
    static RecentPlayer() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeToUserManagerRequest : pb::GeneratedMessage<SubscribeToUserManagerRequest, SubscribeToUserManagerRequest.Builder> {
    private SubscribeToUserManagerRequest() { }
    private static readonly SubscribeToUserManagerRequest defaultInstance = new SubscribeToUserManagerRequest().MakeReadOnly();
    private static readonly string[] _subscribeToUserManagerRequestFieldNames = new string[] { "object_id" };
    private static readonly uint[] _subscribeToUserManagerRequestFieldTags = new uint[] { 8 };
    public static SubscribeToUserManagerRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeToUserManagerRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeToUserManagerRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeToUserManagerRequest, SubscribeToUserManagerRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_SubscribeToUserManagerRequest__FieldAccessorTable; }
    }
    
    public const int ObjectIdFieldNumber = 1;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasObjectId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeToUserManagerRequestFieldNames;
      if (hasObjectId) {
        output.WriteUInt64(1, field_names[0], ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(1, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeToUserManagerRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeToUserManagerRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeToUserManagerRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeToUserManagerRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeToUserManagerRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeToUserManagerRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeToUserManagerRequest result;
      
      private SubscribeToUserManagerRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeToUserManagerRequest original = result;
          result = new SubscribeToUserManagerRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeToUserManagerRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.SubscribeToUserManagerRequest.Descriptor; }
      }
      
      public override SubscribeToUserManagerRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.SubscribeToUserManagerRequest.DefaultInstance; }
      }
      
      public override SubscribeToUserManagerRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeToUserManagerRequest) {
          return MergeFrom((SubscribeToUserManagerRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeToUserManagerRequest other) {
        if (other == global::bnet.protocol.user_manager.SubscribeToUserManagerRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeToUserManagerRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeToUserManagerRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static SubscribeToUserManagerRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeToUserManagerResponse : pb::GeneratedMessage<SubscribeToUserManagerResponse, SubscribeToUserManagerResponse.Builder> {
    private SubscribeToUserManagerResponse() { }
    private static readonly SubscribeToUserManagerResponse defaultInstance = new SubscribeToUserManagerResponse().MakeReadOnly();
    private static readonly string[] _subscribeToUserManagerResponseFieldNames = new string[] { "blocked_toons", "ignored_inviters", "recent_players" };
    private static readonly uint[] _subscribeToUserManagerResponseFieldTags = new uint[] { 26, 34, 18 };
    public static SubscribeToUserManagerResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeToUserManagerResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeToUserManagerResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeToUserManagerResponse, SubscribeToUserManagerResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_SubscribeToUserManagerResponse__FieldAccessorTable; }
    }
    
    public const int RecentPlayersFieldNumber = 2;
    private pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer> recentPlayers_ = new pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer>();
    public scg::IList<global::bnet.protocol.user_manager.RecentPlayer> RecentPlayersList {
      get { return recentPlayers_; }
    }
    public int RecentPlayersCount {
      get { return recentPlayers_.Count; }
    }
    public global::bnet.protocol.user_manager.RecentPlayer GetRecentPlayers(int index) {
      return recentPlayers_[index];
    }
    
    public const int BlockedToonsFieldNumber = 3;
    private pbc::PopsicleList<global::bnet.protocol.EntityId> blockedToons_ = new pbc::PopsicleList<global::bnet.protocol.EntityId>();
    public scg::IList<global::bnet.protocol.EntityId> BlockedToonsList {
      get { return blockedToons_; }
    }
    public int BlockedToonsCount {
      get { return blockedToons_.Count; }
    }
    public global::bnet.protocol.EntityId GetBlockedToons(int index) {
      return blockedToons_[index];
    }
    
    public const int IgnoredInvitersFieldNumber = 4;
    private pbc::PopsicleList<global::bnet.protocol.EntityId> ignoredInviters_ = new pbc::PopsicleList<global::bnet.protocol.EntityId>();
    public scg::IList<global::bnet.protocol.EntityId> IgnoredInvitersList {
      get { return ignoredInviters_; }
    }
    public int IgnoredInvitersCount {
      get { return ignoredInviters_.Count; }
    }
    public global::bnet.protocol.EntityId GetIgnoredInviters(int index) {
      return ignoredInviters_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in RecentPlayersList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.EntityId element in BlockedToonsList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.EntityId element in IgnoredInvitersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeToUserManagerResponseFieldNames;
      if (recentPlayers_.Count > 0) {
        output.WriteMessageArray(2, field_names[2], recentPlayers_);
      }
      if (blockedToons_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], blockedToons_);
      }
      if (ignoredInviters_.Count > 0) {
        output.WriteMessageArray(4, field_names[1], ignoredInviters_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in RecentPlayersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        foreach (global::bnet.protocol.EntityId element in BlockedToonsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        foreach (global::bnet.protocol.EntityId element in IgnoredInvitersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeToUserManagerResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeToUserManagerResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeToUserManagerResponse MakeReadOnly() {
      recentPlayers_.MakeReadOnly();
      blockedToons_.MakeReadOnly();
      ignoredInviters_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeToUserManagerResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeToUserManagerResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeToUserManagerResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeToUserManagerResponse result;
      
      private SubscribeToUserManagerResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeToUserManagerResponse original = result;
          result = new SubscribeToUserManagerResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeToUserManagerResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.Descriptor; }
      }
      
      public override SubscribeToUserManagerResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.DefaultInstance; }
      }
      
      public override SubscribeToUserManagerResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeToUserManagerResponse) {
          return MergeFrom((SubscribeToUserManagerResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeToUserManagerResponse other) {
        if (other == global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.recentPlayers_.Count != 0) {
          result.recentPlayers_.Add(other.recentPlayers_);
        }
        if (other.blockedToons_.Count != 0) {
          result.blockedToons_.Add(other.blockedToons_);
        }
        if (other.ignoredInviters_.Count != 0) {
          result.ignoredInviters_.Add(other.ignoredInviters_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeToUserManagerResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeToUserManagerResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.recentPlayers_, global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.blockedToons_, global::bnet.protocol.EntityId.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.ignoredInviters_, global::bnet.protocol.EntityId.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.user_manager.RecentPlayer> RecentPlayersList {
        get { return PrepareBuilder().recentPlayers_; }
      }
      public int RecentPlayersCount {
        get { return result.RecentPlayersCount; }
      }
      public global::bnet.protocol.user_manager.RecentPlayer GetRecentPlayers(int index) {
        return result.GetRecentPlayers(index);
      }
      public Builder SetRecentPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.recentPlayers_[index] = value;
        return this;
      }
      public Builder SetRecentPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.recentPlayers_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRecentPlayers(global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.recentPlayers_.Add(value);
        return this;
      }
      public Builder AddRecentPlayers(global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.recentPlayers_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRecentPlayers(scg::IEnumerable<global::bnet.protocol.user_manager.RecentPlayer> values) {
        PrepareBuilder();
        result.recentPlayers_.Add(values);
        return this;
      }
      public Builder ClearRecentPlayers() {
        PrepareBuilder();
        result.recentPlayers_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.EntityId> BlockedToonsList {
        get { return PrepareBuilder().blockedToons_; }
      }
      public int BlockedToonsCount {
        get { return result.BlockedToonsCount; }
      }
      public global::bnet.protocol.EntityId GetBlockedToons(int index) {
        return result.GetBlockedToons(index);
      }
      public Builder SetBlockedToons(int index, global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.blockedToons_[index] = value;
        return this;
      }
      public Builder SetBlockedToons(int index, global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.blockedToons_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBlockedToons(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.blockedToons_.Add(value);
        return this;
      }
      public Builder AddBlockedToons(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.blockedToons_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBlockedToons(scg::IEnumerable<global::bnet.protocol.EntityId> values) {
        PrepareBuilder();
        result.blockedToons_.Add(values);
        return this;
      }
      public Builder ClearBlockedToons() {
        PrepareBuilder();
        result.blockedToons_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.EntityId> IgnoredInvitersList {
        get { return PrepareBuilder().ignoredInviters_; }
      }
      public int IgnoredInvitersCount {
        get { return result.IgnoredInvitersCount; }
      }
      public global::bnet.protocol.EntityId GetIgnoredInviters(int index) {
        return result.GetIgnoredInviters(index);
      }
      public Builder SetIgnoredInviters(int index, global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ignoredInviters_[index] = value;
        return this;
      }
      public Builder SetIgnoredInviters(int index, global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ignoredInviters_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddIgnoredInviters(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.ignoredInviters_.Add(value);
        return this;
      }
      public Builder AddIgnoredInviters(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.ignoredInviters_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeIgnoredInviters(scg::IEnumerable<global::bnet.protocol.EntityId> values) {
        PrepareBuilder();
        result.ignoredInviters_.Add(values);
        return this;
      }
      public Builder ClearIgnoredInviters() {
        PrepareBuilder();
        result.ignoredInviters_.Clear();
        return this;
      }
    }
    static SubscribeToUserManagerResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ReportToonRequest : pb::GeneratedMessage<ReportToonRequest, ReportToonRequest.Builder> {
    private ReportToonRequest() { }
    private static readonly ReportToonRequest defaultInstance = new ReportToonRequest().MakeReadOnly();
    private static readonly string[] _reportToonRequestFieldNames = new string[] { "blocking_action", "report", "target_id" };
    private static readonly uint[] _reportToonRequestFieldTags = new uint[] { 24, 18, 10 };
    public static ReportToonRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReportToonRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReportToonRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_ReportToonRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReportToonRequest, ReportToonRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_ReportToonRequest__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static class Types {
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
      public enum BlockAction {
        SESSION_BLOCK_GAME_ACCOUNT = 1,
      }
      
    }
    #endregion
    
    public const int TargetIdFieldNumber = 1;
    private bool hasTargetId;
    private global::bnet.protocol.EntityId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bnet.protocol.EntityId TargetId {
      get { return targetId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ReportFieldNumber = 2;
    private bool hasReport;
    private global::bnet.protocol.user_manager.PlayerReport report_;
    public bool HasReport {
      get { return hasReport; }
    }
    public global::bnet.protocol.user_manager.PlayerReport Report {
      get { return report_ ?? global::bnet.protocol.user_manager.PlayerReport.DefaultInstance; }
    }
    
    public const int BlockingActionFieldNumber = 3;
    private bool hasBlockingAction;
    private global::bnet.protocol.user_manager.ReportToonRequest.Types.BlockAction blockingAction_ = global::bnet.protocol.user_manager.ReportToonRequest.Types.BlockAction.SESSION_BLOCK_GAME_ACCOUNT;
    public bool HasBlockingAction {
      get { return hasBlockingAction; }
    }
    public global::bnet.protocol.user_manager.ReportToonRequest.Types.BlockAction BlockingAction {
      get { return blockingAction_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTargetId) return false;
        if (!hasReport) return false;
        if (!TargetId.IsInitialized) return false;
        if (!Report.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _reportToonRequestFieldNames;
      if (hasTargetId) {
        output.WriteMessage(1, field_names[2], TargetId);
      }
      if (hasReport) {
        output.WriteMessage(2, field_names[1], Report);
      }
      if (hasBlockingAction) {
        output.WriteEnum(3, field_names[0], (int) BlockingAction, BlockingAction);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, TargetId);
        }
        if (hasReport) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Report);
        }
        if (hasBlockingAction) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) BlockingAction);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReportToonRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportToonRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportToonRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportToonRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportToonRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportToonRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReportToonRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReportToonRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReportToonRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportToonRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReportToonRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReportToonRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ReportToonRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReportToonRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReportToonRequest result;
      
      private ReportToonRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ReportToonRequest original = result;
          result = new ReportToonRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReportToonRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.ReportToonRequest.Descriptor; }
      }
      
      public override ReportToonRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.ReportToonRequest.DefaultInstance; }
      }
      
      public override ReportToonRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReportToonRequest) {
          return MergeFrom((ReportToonRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReportToonRequest other) {
        if (other == global::bnet.protocol.user_manager.ReportToonRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        if (other.HasReport) {
          MergeReport(other.Report);
        }
        if (other.HasBlockingAction) {
          BlockingAction = other.BlockingAction;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reportToonRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reportToonRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.user_manager.PlayerReport.Builder subBuilder = global::bnet.protocol.user_manager.PlayerReport.CreateBuilder();
              if (result.hasReport) {
                subBuilder.MergeFrom(Report);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Report = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.blockingAction_, out unknown)) {
                result.hasBlockingAction = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bnet.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
      
      public bool HasReport {
       get { return result.hasReport; }
      }
      public global::bnet.protocol.user_manager.PlayerReport Report {
        get { return result.Report; }
        set { SetReport(value); }
      }
      public Builder SetReport(global::bnet.protocol.user_manager.PlayerReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReport = true;
        result.report_ = value;
        return this;
      }
      public Builder SetReport(global::bnet.protocol.user_manager.PlayerReport.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReport = true;
        result.report_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReport(global::bnet.protocol.user_manager.PlayerReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReport &&
            result.report_ != global::bnet.protocol.user_manager.PlayerReport.DefaultInstance) {
            result.report_ = global::bnet.protocol.user_manager.PlayerReport.CreateBuilder(result.report_).MergeFrom(value).BuildPartial();
        } else {
          result.report_ = value;
        }
        result.hasReport = true;
        return this;
      }
      public Builder ClearReport() {
        PrepareBuilder();
        result.hasReport = false;
        result.report_ = null;
        return this;
      }
      
      public bool HasBlockingAction {
       get { return result.hasBlockingAction; }
      }
      public global::bnet.protocol.user_manager.ReportToonRequest.Types.BlockAction BlockingAction {
        get { return result.BlockingAction; }
        set { SetBlockingAction(value); }
      }
      public Builder SetBlockingAction(global::bnet.protocol.user_manager.ReportToonRequest.Types.BlockAction value) {
        PrepareBuilder();
        result.hasBlockingAction = true;
        result.blockingAction_ = value;
        return this;
      }
      public Builder ClearBlockingAction() {
        PrepareBuilder();
        result.hasBlockingAction = false;
        result.blockingAction_ = global::bnet.protocol.user_manager.ReportToonRequest.Types.BlockAction.SESSION_BLOCK_GAME_ACCOUNT;
        return this;
      }
    }
    static ReportToonRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ReportToonResponse : pb::GeneratedMessage<ReportToonResponse, ReportToonResponse.Builder> {
    private ReportToonResponse() { }
    private static readonly ReportToonResponse defaultInstance = new ReportToonResponse().MakeReadOnly();
    private static readonly string[] _reportToonResponseFieldNames = new string[] { "reported_toon" };
    private static readonly uint[] _reportToonResponseFieldTags = new uint[] { 10 };
    public static ReportToonResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReportToonResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReportToonResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_ReportToonResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReportToonResponse, ReportToonResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_ReportToonResponse__FieldAccessorTable; }
    }
    
    public const int ReportedToonFieldNumber = 1;
    private bool hasReportedToon;
    private global::bnet.protocol.EntityId reportedToon_;
    public bool HasReportedToon {
      get { return hasReportedToon; }
    }
    public global::bnet.protocol.EntityId ReportedToon {
      get { return reportedToon_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasReportedToon) {
          if (!ReportedToon.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _reportToonResponseFieldNames;
      if (hasReportedToon) {
        output.WriteMessage(1, field_names[0], ReportedToon);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasReportedToon) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ReportedToon);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReportToonResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportToonResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportToonResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportToonResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportToonResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportToonResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReportToonResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReportToonResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReportToonResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportToonResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReportToonResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReportToonResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ReportToonResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReportToonResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReportToonResponse result;
      
      private ReportToonResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ReportToonResponse original = result;
          result = new ReportToonResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReportToonResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.ReportToonResponse.Descriptor; }
      }
      
      public override ReportToonResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.ReportToonResponse.DefaultInstance; }
      }
      
      public override ReportToonResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReportToonResponse) {
          return MergeFrom((ReportToonResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReportToonResponse other) {
        if (other == global::bnet.protocol.user_manager.ReportToonResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasReportedToon) {
          MergeReportedToon(other.ReportedToon);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reportToonResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reportToonResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasReportedToon) {
                subBuilder.MergeFrom(ReportedToon);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReportedToon = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasReportedToon {
       get { return result.hasReportedToon; }
      }
      public global::bnet.protocol.EntityId ReportedToon {
        get { return result.ReportedToon; }
        set { SetReportedToon(value); }
      }
      public Builder SetReportedToon(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReportedToon = true;
        result.reportedToon_ = value;
        return this;
      }
      public Builder SetReportedToon(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReportedToon = true;
        result.reportedToon_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReportedToon(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReportedToon &&
            result.reportedToon_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.reportedToon_ = global::bnet.protocol.EntityId.CreateBuilder(result.reportedToon_).MergeFrom(value).BuildPartial();
        } else {
          result.reportedToon_ = value;
        }
        result.hasReportedToon = true;
        return this;
      }
      public Builder ClearReportedToon() {
        PrepareBuilder();
        result.hasReportedToon = false;
        result.reportedToon_ = null;
        return this;
      }
    }
    static ReportToonResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AddRecentPlayersRequest : pb::GeneratedMessage<AddRecentPlayersRequest, AddRecentPlayersRequest.Builder> {
    private AddRecentPlayersRequest() { }
    private static readonly AddRecentPlayersRequest defaultInstance = new AddRecentPlayersRequest().MakeReadOnly();
    private static readonly string[] _addRecentPlayersRequestFieldNames = new string[] { "players" };
    private static readonly uint[] _addRecentPlayersRequestFieldTags = new uint[] { 10 };
    public static AddRecentPlayersRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddRecentPlayersRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AddRecentPlayersRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddRecentPlayersRequest, AddRecentPlayersRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_AddRecentPlayersRequest__FieldAccessorTable; }
    }
    
    public const int PlayersFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer> players_ = new pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer>();
    public scg::IList<global::bnet.protocol.user_manager.RecentPlayer> PlayersList {
      get { return players_; }
    }
    public int PlayersCount {
      get { return players_.Count; }
    }
    public global::bnet.protocol.user_manager.RecentPlayer GetPlayers(int index) {
      return players_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _addRecentPlayersRequestFieldNames;
      if (players_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], players_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AddRecentPlayersRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddRecentPlayersRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AddRecentPlayersRequest MakeReadOnly() {
      players_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddRecentPlayersRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AddRecentPlayersRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AddRecentPlayersRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AddRecentPlayersRequest result;
      
      private AddRecentPlayersRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AddRecentPlayersRequest original = result;
          result = new AddRecentPlayersRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AddRecentPlayersRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.AddRecentPlayersRequest.Descriptor; }
      }
      
      public override AddRecentPlayersRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.AddRecentPlayersRequest.DefaultInstance; }
      }
      
      public override AddRecentPlayersRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddRecentPlayersRequest) {
          return MergeFrom((AddRecentPlayersRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddRecentPlayersRequest other) {
        if (other == global::bnet.protocol.user_manager.AddRecentPlayersRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.players_.Count != 0) {
          result.players_.Add(other.players_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addRecentPlayersRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addRecentPlayersRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.players_, global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.user_manager.RecentPlayer> PlayersList {
        get { return PrepareBuilder().players_; }
      }
      public int PlayersCount {
        get { return result.PlayersCount; }
      }
      public global::bnet.protocol.user_manager.RecentPlayer GetPlayers(int index) {
        return result.GetPlayers(index);
      }
      public Builder SetPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.players_[index] = value;
        return this;
      }
      public Builder SetPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.players_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayers(global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.players_.Add(value);
        return this;
      }
      public Builder AddPlayers(global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.players_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayers(scg::IEnumerable<global::bnet.protocol.user_manager.RecentPlayer> values) {
        PrepareBuilder();
        result.players_.Add(values);
        return this;
      }
      public Builder ClearPlayers() {
        PrepareBuilder();
        result.players_.Clear();
        return this;
      }
    }
    static AddRecentPlayersRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AddRecentPlayersResponse : pb::GeneratedMessage<AddRecentPlayersResponse, AddRecentPlayersResponse.Builder> {
    private AddRecentPlayersResponse() { }
    private static readonly AddRecentPlayersResponse defaultInstance = new AddRecentPlayersResponse().MakeReadOnly();
    private static readonly string[] _addRecentPlayersResponseFieldNames = new string[] { "players_added", "players_removed" };
    private static readonly uint[] _addRecentPlayersResponseFieldTags = new uint[] { 10, 26 };
    public static AddRecentPlayersResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AddRecentPlayersResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AddRecentPlayersResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AddRecentPlayersResponse, AddRecentPlayersResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_AddRecentPlayersResponse__FieldAccessorTable; }
    }
    
    public const int PlayersAddedFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer> playersAdded_ = new pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer>();
    public scg::IList<global::bnet.protocol.user_manager.RecentPlayer> PlayersAddedList {
      get { return playersAdded_; }
    }
    public int PlayersAddedCount {
      get { return playersAdded_.Count; }
    }
    public global::bnet.protocol.user_manager.RecentPlayer GetPlayersAdded(int index) {
      return playersAdded_[index];
    }
    
    public const int PlayersRemovedFieldNumber = 3;
    private pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer> playersRemoved_ = new pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer>();
    public scg::IList<global::bnet.protocol.user_manager.RecentPlayer> PlayersRemovedList {
      get { return playersRemoved_; }
    }
    public int PlayersRemovedCount {
      get { return playersRemoved_.Count; }
    }
    public global::bnet.protocol.user_manager.RecentPlayer GetPlayersRemoved(int index) {
      return playersRemoved_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersAddedList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersRemovedList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _addRecentPlayersResponseFieldNames;
      if (playersAdded_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], playersAdded_);
      }
      if (playersRemoved_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], playersRemoved_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersAddedList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersRemovedList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AddRecentPlayersResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AddRecentPlayersResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AddRecentPlayersResponse MakeReadOnly() {
      playersAdded_.MakeReadOnly();
      playersRemoved_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AddRecentPlayersResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AddRecentPlayersResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AddRecentPlayersResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AddRecentPlayersResponse result;
      
      private AddRecentPlayersResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          AddRecentPlayersResponse original = result;
          result = new AddRecentPlayersResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AddRecentPlayersResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.AddRecentPlayersResponse.Descriptor; }
      }
      
      public override AddRecentPlayersResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.AddRecentPlayersResponse.DefaultInstance; }
      }
      
      public override AddRecentPlayersResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AddRecentPlayersResponse) {
          return MergeFrom((AddRecentPlayersResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AddRecentPlayersResponse other) {
        if (other == global::bnet.protocol.user_manager.AddRecentPlayersResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.playersAdded_.Count != 0) {
          result.playersAdded_.Add(other.playersAdded_);
        }
        if (other.playersRemoved_.Count != 0) {
          result.playersRemoved_.Add(other.playersRemoved_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_addRecentPlayersResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _addRecentPlayersResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.playersAdded_, global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.playersRemoved_, global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.user_manager.RecentPlayer> PlayersAddedList {
        get { return PrepareBuilder().playersAdded_; }
      }
      public int PlayersAddedCount {
        get { return result.PlayersAddedCount; }
      }
      public global::bnet.protocol.user_manager.RecentPlayer GetPlayersAdded(int index) {
        return result.GetPlayersAdded(index);
      }
      public Builder SetPlayersAdded(int index, global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.playersAdded_[index] = value;
        return this;
      }
      public Builder SetPlayersAdded(int index, global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.playersAdded_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayersAdded(global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.playersAdded_.Add(value);
        return this;
      }
      public Builder AddPlayersAdded(global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.playersAdded_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayersAdded(scg::IEnumerable<global::bnet.protocol.user_manager.RecentPlayer> values) {
        PrepareBuilder();
        result.playersAdded_.Add(values);
        return this;
      }
      public Builder ClearPlayersAdded() {
        PrepareBuilder();
        result.playersAdded_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.user_manager.RecentPlayer> PlayersRemovedList {
        get { return PrepareBuilder().playersRemoved_; }
      }
      public int PlayersRemovedCount {
        get { return result.PlayersRemovedCount; }
      }
      public global::bnet.protocol.user_manager.RecentPlayer GetPlayersRemoved(int index) {
        return result.GetPlayersRemoved(index);
      }
      public Builder SetPlayersRemoved(int index, global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.playersRemoved_[index] = value;
        return this;
      }
      public Builder SetPlayersRemoved(int index, global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.playersRemoved_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayersRemoved(global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.playersRemoved_.Add(value);
        return this;
      }
      public Builder AddPlayersRemoved(global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.playersRemoved_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayersRemoved(scg::IEnumerable<global::bnet.protocol.user_manager.RecentPlayer> values) {
        PrepareBuilder();
        result.playersRemoved_.Add(values);
        return this;
      }
      public Builder ClearPlayersRemoved() {
        PrepareBuilder();
        result.playersRemoved_.Clear();
        return this;
      }
    }
    static AddRecentPlayersResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RemoveRecentPlayersRequest : pb::GeneratedMessage<RemoveRecentPlayersRequest, RemoveRecentPlayersRequest.Builder> {
    private RemoveRecentPlayersRequest() { }
    private static readonly RemoveRecentPlayersRequest defaultInstance = new RemoveRecentPlayersRequest().MakeReadOnly();
    private static readonly string[] _removeRecentPlayersRequestFieldNames = new string[] { "players" };
    private static readonly uint[] _removeRecentPlayersRequestFieldTags = new uint[] { 18 };
    public static RemoveRecentPlayersRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemoveRecentPlayersRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RemoveRecentPlayersRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_RemoveRecentPlayersRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemoveRecentPlayersRequest, RemoveRecentPlayersRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_RemoveRecentPlayersRequest__FieldAccessorTable; }
    }
    
    public const int PlayersFieldNumber = 2;
    private pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer> players_ = new pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer>();
    public scg::IList<global::bnet.protocol.user_manager.RecentPlayer> PlayersList {
      get { return players_; }
    }
    public int PlayersCount {
      get { return players_.Count; }
    }
    public global::bnet.protocol.user_manager.RecentPlayer GetPlayers(int index) {
      return players_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _removeRecentPlayersRequestFieldNames;
      if (players_.Count > 0) {
        output.WriteMessageArray(2, field_names[0], players_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RemoveRecentPlayersRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveRecentPlayersRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveRecentPlayersRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveRecentPlayersRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveRecentPlayersRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveRecentPlayersRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemoveRecentPlayersRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemoveRecentPlayersRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemoveRecentPlayersRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveRecentPlayersRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RemoveRecentPlayersRequest MakeReadOnly() {
      players_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemoveRecentPlayersRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RemoveRecentPlayersRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RemoveRecentPlayersRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RemoveRecentPlayersRequest result;
      
      private RemoveRecentPlayersRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          RemoveRecentPlayersRequest original = result;
          result = new RemoveRecentPlayersRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RemoveRecentPlayersRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.RemoveRecentPlayersRequest.Descriptor; }
      }
      
      public override RemoveRecentPlayersRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.RemoveRecentPlayersRequest.DefaultInstance; }
      }
      
      public override RemoveRecentPlayersRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RemoveRecentPlayersRequest) {
          return MergeFrom((RemoveRecentPlayersRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RemoveRecentPlayersRequest other) {
        if (other == global::bnet.protocol.user_manager.RemoveRecentPlayersRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.players_.Count != 0) {
          result.players_.Add(other.players_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_removeRecentPlayersRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _removeRecentPlayersRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.players_, global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.user_manager.RecentPlayer> PlayersList {
        get { return PrepareBuilder().players_; }
      }
      public int PlayersCount {
        get { return result.PlayersCount; }
      }
      public global::bnet.protocol.user_manager.RecentPlayer GetPlayers(int index) {
        return result.GetPlayers(index);
      }
      public Builder SetPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.players_[index] = value;
        return this;
      }
      public Builder SetPlayers(int index, global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.players_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayers(global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.players_.Add(value);
        return this;
      }
      public Builder AddPlayers(global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.players_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayers(scg::IEnumerable<global::bnet.protocol.user_manager.RecentPlayer> values) {
        PrepareBuilder();
        result.players_.Add(values);
        return this;
      }
      public Builder ClearPlayers() {
        PrepareBuilder();
        result.players_.Clear();
        return this;
      }
    }
    static RemoveRecentPlayersRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RemoveRecentPlayersResponse : pb::GeneratedMessage<RemoveRecentPlayersResponse, RemoveRecentPlayersResponse.Builder> {
    private RemoveRecentPlayersResponse() { }
    private static readonly RemoveRecentPlayersResponse defaultInstance = new RemoveRecentPlayersResponse().MakeReadOnly();
    private static readonly string[] _removeRecentPlayersResponseFieldNames = new string[] { "players_removed" };
    private static readonly uint[] _removeRecentPlayersResponseFieldTags = new uint[] { 10 };
    public static RemoveRecentPlayersResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RemoveRecentPlayersResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RemoveRecentPlayersResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_RemoveRecentPlayersResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RemoveRecentPlayersResponse, RemoveRecentPlayersResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_RemoveRecentPlayersResponse__FieldAccessorTable; }
    }
    
    public const int PlayersRemovedFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer> playersRemoved_ = new pbc::PopsicleList<global::bnet.protocol.user_manager.RecentPlayer>();
    public scg::IList<global::bnet.protocol.user_manager.RecentPlayer> PlayersRemovedList {
      get { return playersRemoved_; }
    }
    public int PlayersRemovedCount {
      get { return playersRemoved_.Count; }
    }
    public global::bnet.protocol.user_manager.RecentPlayer GetPlayersRemoved(int index) {
      return playersRemoved_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersRemovedList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _removeRecentPlayersResponseFieldNames;
      if (playersRemoved_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], playersRemoved_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.user_manager.RecentPlayer element in PlayersRemovedList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RemoveRecentPlayersResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveRecentPlayersResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveRecentPlayersResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RemoveRecentPlayersResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RemoveRecentPlayersResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveRecentPlayersResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RemoveRecentPlayersResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RemoveRecentPlayersResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RemoveRecentPlayersResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RemoveRecentPlayersResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RemoveRecentPlayersResponse MakeReadOnly() {
      playersRemoved_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RemoveRecentPlayersResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RemoveRecentPlayersResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RemoveRecentPlayersResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RemoveRecentPlayersResponse result;
      
      private RemoveRecentPlayersResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          RemoveRecentPlayersResponse original = result;
          result = new RemoveRecentPlayersResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RemoveRecentPlayersResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.RemoveRecentPlayersResponse.Descriptor; }
      }
      
      public override RemoveRecentPlayersResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.RemoveRecentPlayersResponse.DefaultInstance; }
      }
      
      public override RemoveRecentPlayersResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RemoveRecentPlayersResponse) {
          return MergeFrom((RemoveRecentPlayersResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RemoveRecentPlayersResponse other) {
        if (other == global::bnet.protocol.user_manager.RemoveRecentPlayersResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.playersRemoved_.Count != 0) {
          result.playersRemoved_.Add(other.playersRemoved_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_removeRecentPlayersResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _removeRecentPlayersResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.playersRemoved_, global::bnet.protocol.user_manager.RecentPlayer.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.user_manager.RecentPlayer> PlayersRemovedList {
        get { return PrepareBuilder().playersRemoved_; }
      }
      public int PlayersRemovedCount {
        get { return result.PlayersRemovedCount; }
      }
      public global::bnet.protocol.user_manager.RecentPlayer GetPlayersRemoved(int index) {
        return result.GetPlayersRemoved(index);
      }
      public Builder SetPlayersRemoved(int index, global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.playersRemoved_[index] = value;
        return this;
      }
      public Builder SetPlayersRemoved(int index, global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.playersRemoved_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayersRemoved(global::bnet.protocol.user_manager.RecentPlayer value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.playersRemoved_.Add(value);
        return this;
      }
      public Builder AddPlayersRemoved(global::bnet.protocol.user_manager.RecentPlayer.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.playersRemoved_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayersRemoved(scg::IEnumerable<global::bnet.protocol.user_manager.RecentPlayer> values) {
        PrepareBuilder();
        result.playersRemoved_.Add(values);
        return this;
      }
      public Builder ClearPlayersRemoved() {
        PrepareBuilder();
        result.playersRemoved_.Clear();
        return this;
      }
    }
    static RemoveRecentPlayersResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ReportAccountRequest : pb::GeneratedMessage<ReportAccountRequest, ReportAccountRequest.Builder> {
    private ReportAccountRequest() { }
    private static readonly ReportAccountRequest defaultInstance = new ReportAccountRequest().MakeReadOnly();
    private static readonly string[] _reportAccountRequestFieldNames = new string[] { "report", "target_account" };
    private static readonly uint[] _reportAccountRequestFieldTags = new uint[] { 18, 10 };
    public static ReportAccountRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReportAccountRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReportAccountRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_ReportAccountRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReportAccountRequest, ReportAccountRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_ReportAccountRequest__FieldAccessorTable; }
    }
    
    public const int TargetAccountFieldNumber = 1;
    private bool hasTargetAccount;
    private global::bnet.protocol.EntityId targetAccount_;
    public bool HasTargetAccount {
      get { return hasTargetAccount; }
    }
    public global::bnet.protocol.EntityId TargetAccount {
      get { return targetAccount_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ReportFieldNumber = 2;
    private bool hasReport;
    private global::bnet.protocol.user_manager.PlayerReport report_;
    public bool HasReport {
      get { return hasReport; }
    }
    public global::bnet.protocol.user_manager.PlayerReport Report {
      get { return report_ ?? global::bnet.protocol.user_manager.PlayerReport.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTargetAccount) return false;
        if (!hasReport) return false;
        if (!TargetAccount.IsInitialized) return false;
        if (!Report.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _reportAccountRequestFieldNames;
      if (hasTargetAccount) {
        output.WriteMessage(1, field_names[1], TargetAccount);
      }
      if (hasReport) {
        output.WriteMessage(2, field_names[0], Report);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTargetAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, TargetAccount);
        }
        if (hasReport) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Report);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReportAccountRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportAccountRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportAccountRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportAccountRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportAccountRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportAccountRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReportAccountRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReportAccountRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReportAccountRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportAccountRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReportAccountRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReportAccountRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ReportAccountRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReportAccountRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReportAccountRequest result;
      
      private ReportAccountRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ReportAccountRequest original = result;
          result = new ReportAccountRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReportAccountRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.ReportAccountRequest.Descriptor; }
      }
      
      public override ReportAccountRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.ReportAccountRequest.DefaultInstance; }
      }
      
      public override ReportAccountRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReportAccountRequest) {
          return MergeFrom((ReportAccountRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReportAccountRequest other) {
        if (other == global::bnet.protocol.user_manager.ReportAccountRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTargetAccount) {
          MergeTargetAccount(other.TargetAccount);
        }
        if (other.HasReport) {
          MergeReport(other.Report);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reportAccountRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reportAccountRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetAccount) {
                subBuilder.MergeFrom(TargetAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetAccount = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.user_manager.PlayerReport.Builder subBuilder = global::bnet.protocol.user_manager.PlayerReport.CreateBuilder();
              if (result.hasReport) {
                subBuilder.MergeFrom(Report);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Report = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTargetAccount {
       get { return result.hasTargetAccount; }
      }
      public global::bnet.protocol.EntityId TargetAccount {
        get { return result.TargetAccount; }
        set { SetTargetAccount(value); }
      }
      public Builder SetTargetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetAccount = true;
        result.targetAccount_ = value;
        return this;
      }
      public Builder SetTargetAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetAccount = true;
        result.targetAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetAccount &&
            result.targetAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.targetAccount_ = value;
        }
        result.hasTargetAccount = true;
        return this;
      }
      public Builder ClearTargetAccount() {
        PrepareBuilder();
        result.hasTargetAccount = false;
        result.targetAccount_ = null;
        return this;
      }
      
      public bool HasReport {
       get { return result.hasReport; }
      }
      public global::bnet.protocol.user_manager.PlayerReport Report {
        get { return result.Report; }
        set { SetReport(value); }
      }
      public Builder SetReport(global::bnet.protocol.user_manager.PlayerReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReport = true;
        result.report_ = value;
        return this;
      }
      public Builder SetReport(global::bnet.protocol.user_manager.PlayerReport.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReport = true;
        result.report_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReport(global::bnet.protocol.user_manager.PlayerReport value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReport &&
            result.report_ != global::bnet.protocol.user_manager.PlayerReport.DefaultInstance) {
            result.report_ = global::bnet.protocol.user_manager.PlayerReport.CreateBuilder(result.report_).MergeFrom(value).BuildPartial();
        } else {
          result.report_ = value;
        }
        result.hasReport = true;
        return this;
      }
      public Builder ClearReport() {
        PrepareBuilder();
        result.hasReport = false;
        result.report_ = null;
        return this;
      }
    }
    static ReportAccountRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ReportAccountResponse : pb::GeneratedMessage<ReportAccountResponse, ReportAccountResponse.Builder> {
    private ReportAccountResponse() { }
    private static readonly ReportAccountResponse defaultInstance = new ReportAccountResponse().MakeReadOnly();
    private static readonly string[] _reportAccountResponseFieldNames = new string[] { "reported_account" };
    private static readonly uint[] _reportAccountResponseFieldTags = new uint[] { 10 };
    public static ReportAccountResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ReportAccountResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ReportAccountResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_ReportAccountResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ReportAccountResponse, ReportAccountResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_ReportAccountResponse__FieldAccessorTable; }
    }
    
    public const int ReportedAccountFieldNumber = 1;
    private bool hasReportedAccount;
    private global::bnet.protocol.EntityId reportedAccount_;
    public bool HasReportedAccount {
      get { return hasReportedAccount; }
    }
    public global::bnet.protocol.EntityId ReportedAccount {
      get { return reportedAccount_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasReportedAccount) {
          if (!ReportedAccount.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _reportAccountResponseFieldNames;
      if (hasReportedAccount) {
        output.WriteMessage(1, field_names[0], ReportedAccount);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasReportedAccount) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ReportedAccount);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ReportAccountResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportAccountResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportAccountResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ReportAccountResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ReportAccountResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportAccountResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ReportAccountResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ReportAccountResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ReportAccountResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ReportAccountResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ReportAccountResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ReportAccountResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ReportAccountResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ReportAccountResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ReportAccountResponse result;
      
      private ReportAccountResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ReportAccountResponse original = result;
          result = new ReportAccountResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ReportAccountResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.ReportAccountResponse.Descriptor; }
      }
      
      public override ReportAccountResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.ReportAccountResponse.DefaultInstance; }
      }
      
      public override ReportAccountResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ReportAccountResponse) {
          return MergeFrom((ReportAccountResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ReportAccountResponse other) {
        if (other == global::bnet.protocol.user_manager.ReportAccountResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasReportedAccount) {
          MergeReportedAccount(other.ReportedAccount);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_reportAccountResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _reportAccountResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasReportedAccount) {
                subBuilder.MergeFrom(ReportedAccount);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ReportedAccount = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasReportedAccount {
       get { return result.hasReportedAccount; }
      }
      public global::bnet.protocol.EntityId ReportedAccount {
        get { return result.ReportedAccount; }
        set { SetReportedAccount(value); }
      }
      public Builder SetReportedAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReportedAccount = true;
        result.reportedAccount_ = value;
        return this;
      }
      public Builder SetReportedAccount(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasReportedAccount = true;
        result.reportedAccount_ = builderForValue.Build();
        return this;
      }
      public Builder MergeReportedAccount(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasReportedAccount &&
            result.reportedAccount_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.reportedAccount_ = global::bnet.protocol.EntityId.CreateBuilder(result.reportedAccount_).MergeFrom(value).BuildPartial();
        } else {
          result.reportedAccount_ = value;
        }
        result.hasReportedAccount = true;
        return this;
      }
      public Builder ClearReportedAccount() {
        PrepareBuilder();
        result.hasReportedAccount = false;
        result.reportedAccount_ = null;
        return this;
      }
    }
    static ReportAccountResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class IgnoreInviterRequest : pb::GeneratedMessage<IgnoreInviterRequest, IgnoreInviterRequest.Builder> {
    private IgnoreInviterRequest() { }
    private static readonly IgnoreInviterRequest defaultInstance = new IgnoreInviterRequest().MakeReadOnly();
    private static readonly string[] _ignoreInviterRequestFieldNames = new string[] { "target_id" };
    private static readonly uint[] _ignoreInviterRequestFieldTags = new uint[] { 10 };
    public static IgnoreInviterRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override IgnoreInviterRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override IgnoreInviterRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_IgnoreInviterRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<IgnoreInviterRequest, IgnoreInviterRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_IgnoreInviterRequest__FieldAccessorTable; }
    }
    
    public const int TargetIdFieldNumber = 1;
    private bool hasTargetId;
    private global::bnet.protocol.EntityId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bnet.protocol.EntityId TargetId {
      get { return targetId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTargetId) return false;
        if (!TargetId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _ignoreInviterRequestFieldNames;
      if (hasTargetId) {
        output.WriteMessage(1, field_names[0], TargetId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, TargetId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static IgnoreInviterRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IgnoreInviterRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IgnoreInviterRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IgnoreInviterRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IgnoreInviterRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IgnoreInviterRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static IgnoreInviterRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static IgnoreInviterRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static IgnoreInviterRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IgnoreInviterRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private IgnoreInviterRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(IgnoreInviterRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<IgnoreInviterRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(IgnoreInviterRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private IgnoreInviterRequest result;
      
      private IgnoreInviterRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          IgnoreInviterRequest original = result;
          result = new IgnoreInviterRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override IgnoreInviterRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.IgnoreInviterRequest.Descriptor; }
      }
      
      public override IgnoreInviterRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.IgnoreInviterRequest.DefaultInstance; }
      }
      
      public override IgnoreInviterRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is IgnoreInviterRequest) {
          return MergeFrom((IgnoreInviterRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(IgnoreInviterRequest other) {
        if (other == global::bnet.protocol.user_manager.IgnoreInviterRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_ignoreInviterRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _ignoreInviterRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bnet.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
    }
    static IgnoreInviterRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnignoreInvitersRequest : pb::GeneratedMessage<UnignoreInvitersRequest, UnignoreInvitersRequest.Builder> {
    private UnignoreInvitersRequest() { }
    private static readonly UnignoreInvitersRequest defaultInstance = new UnignoreInvitersRequest().MakeReadOnly();
    private static readonly string[] _unignoreInvitersRequestFieldNames = new string[] { "target_id" };
    private static readonly uint[] _unignoreInvitersRequestFieldTags = new uint[] { 10 };
    public static UnignoreInvitersRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnignoreInvitersRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnignoreInvitersRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_UnignoreInvitersRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnignoreInvitersRequest, UnignoreInvitersRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_UnignoreInvitersRequest__FieldAccessorTable; }
    }
    
    public const int TargetIdFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.EntityId> targetId_ = new pbc::PopsicleList<global::bnet.protocol.EntityId>();
    public scg::IList<global::bnet.protocol.EntityId> TargetIdList {
      get { return targetId_; }
    }
    public int TargetIdCount {
      get { return targetId_.Count; }
    }
    public global::bnet.protocol.EntityId GetTargetId(int index) {
      return targetId_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.EntityId element in TargetIdList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unignoreInvitersRequestFieldNames;
      if (targetId_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], targetId_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.EntityId element in TargetIdList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnignoreInvitersRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnignoreInvitersRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnignoreInvitersRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnignoreInvitersRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnignoreInvitersRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnignoreInvitersRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnignoreInvitersRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnignoreInvitersRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnignoreInvitersRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnignoreInvitersRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnignoreInvitersRequest MakeReadOnly() {
      targetId_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnignoreInvitersRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnignoreInvitersRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnignoreInvitersRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnignoreInvitersRequest result;
      
      private UnignoreInvitersRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnignoreInvitersRequest original = result;
          result = new UnignoreInvitersRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnignoreInvitersRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.UnignoreInvitersRequest.Descriptor; }
      }
      
      public override UnignoreInvitersRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.UnignoreInvitersRequest.DefaultInstance; }
      }
      
      public override UnignoreInvitersRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnignoreInvitersRequest) {
          return MergeFrom((UnignoreInvitersRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnignoreInvitersRequest other) {
        if (other == global::bnet.protocol.user_manager.UnignoreInvitersRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.targetId_.Count != 0) {
          result.targetId_.Add(other.targetId_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unignoreInvitersRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unignoreInvitersRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.targetId_, global::bnet.protocol.EntityId.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.EntityId> TargetIdList {
        get { return PrepareBuilder().targetId_; }
      }
      public int TargetIdCount {
        get { return result.TargetIdCount; }
      }
      public global::bnet.protocol.EntityId GetTargetId(int index) {
        return result.GetTargetId(index);
      }
      public Builder SetTargetId(int index, global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.targetId_[index] = value;
        return this;
      }
      public Builder SetTargetId(int index, global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.targetId_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.targetId_.Add(value);
        return this;
      }
      public Builder AddTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.targetId_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTargetId(scg::IEnumerable<global::bnet.protocol.EntityId> values) {
        PrepareBuilder();
        result.targetId_.Add(values);
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.targetId_.Clear();
        return this;
      }
    }
    static UnignoreInvitersRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class BlockToonRequest : pb::GeneratedMessage<BlockToonRequest, BlockToonRequest.Builder> {
    private BlockToonRequest() { }
    private static readonly BlockToonRequest defaultInstance = new BlockToonRequest().MakeReadOnly();
    private static readonly string[] _blockToonRequestFieldNames = new string[] { "target_id" };
    private static readonly uint[] _blockToonRequestFieldTags = new uint[] { 10 };
    public static BlockToonRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BlockToonRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BlockToonRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_BlockToonRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BlockToonRequest, BlockToonRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_BlockToonRequest__FieldAccessorTable; }
    }
    
    public const int TargetIdFieldNumber = 1;
    private bool hasTargetId;
    private global::bnet.protocol.EntityId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bnet.protocol.EntityId TargetId {
      get { return targetId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTargetId) return false;
        if (!TargetId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _blockToonRequestFieldNames;
      if (hasTargetId) {
        output.WriteMessage(1, field_names[0], TargetId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, TargetId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static BlockToonRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BlockToonRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BlockToonRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BlockToonRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BlockToonRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BlockToonRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BlockToonRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BlockToonRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BlockToonRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BlockToonRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BlockToonRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BlockToonRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<BlockToonRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BlockToonRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BlockToonRequest result;
      
      private BlockToonRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          BlockToonRequest original = result;
          result = new BlockToonRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BlockToonRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.BlockToonRequest.Descriptor; }
      }
      
      public override BlockToonRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.BlockToonRequest.DefaultInstance; }
      }
      
      public override BlockToonRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BlockToonRequest) {
          return MergeFrom((BlockToonRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BlockToonRequest other) {
        if (other == global::bnet.protocol.user_manager.BlockToonRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_blockToonRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _blockToonRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bnet.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
    }
    static BlockToonRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnblockToonsRequest : pb::GeneratedMessage<UnblockToonsRequest, UnblockToonsRequest.Builder> {
    private UnblockToonsRequest() { }
    private static readonly UnblockToonsRequest defaultInstance = new UnblockToonsRequest().MakeReadOnly();
    private static readonly string[] _unblockToonsRequestFieldNames = new string[] { "target_id" };
    private static readonly uint[] _unblockToonsRequestFieldTags = new uint[] { 10 };
    public static UnblockToonsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnblockToonsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnblockToonsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_UnblockToonsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnblockToonsRequest, UnblockToonsRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_UnblockToonsRequest__FieldAccessorTable; }
    }
    
    public const int TargetIdFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.EntityId> targetId_ = new pbc::PopsicleList<global::bnet.protocol.EntityId>();
    public scg::IList<global::bnet.protocol.EntityId> TargetIdList {
      get { return targetId_; }
    }
    public int TargetIdCount {
      get { return targetId_.Count; }
    }
    public global::bnet.protocol.EntityId GetTargetId(int index) {
      return targetId_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.EntityId element in TargetIdList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unblockToonsRequestFieldNames;
      if (targetId_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], targetId_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.EntityId element in TargetIdList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnblockToonsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnblockToonsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnblockToonsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnblockToonsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnblockToonsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnblockToonsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnblockToonsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnblockToonsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnblockToonsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnblockToonsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnblockToonsRequest MakeReadOnly() {
      targetId_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnblockToonsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnblockToonsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnblockToonsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnblockToonsRequest result;
      
      private UnblockToonsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnblockToonsRequest original = result;
          result = new UnblockToonsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnblockToonsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.UnblockToonsRequest.Descriptor; }
      }
      
      public override UnblockToonsRequest DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.UnblockToonsRequest.DefaultInstance; }
      }
      
      public override UnblockToonsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnblockToonsRequest) {
          return MergeFrom((UnblockToonsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnblockToonsRequest other) {
        if (other == global::bnet.protocol.user_manager.UnblockToonsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.targetId_.Count != 0) {
          result.targetId_.Add(other.targetId_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unblockToonsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unblockToonsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.targetId_, global::bnet.protocol.EntityId.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.EntityId> TargetIdList {
        get { return PrepareBuilder().targetId_; }
      }
      public int TargetIdCount {
        get { return result.TargetIdCount; }
      }
      public global::bnet.protocol.EntityId GetTargetId(int index) {
        return result.GetTargetId(index);
      }
      public Builder SetTargetId(int index, global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.targetId_[index] = value;
        return this;
      }
      public Builder SetTargetId(int index, global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.targetId_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.targetId_.Add(value);
        return this;
      }
      public Builder AddTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.targetId_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTargetId(scg::IEnumerable<global::bnet.protocol.EntityId> values) {
        PrepareBuilder();
        result.targetId_.Add(values);
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.targetId_.Clear();
        return this;
      }
    }
    static UnblockToonsRequest() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnblockToonsResponse : pb::GeneratedMessage<UnblockToonsResponse, UnblockToonsResponse.Builder> {
    private UnblockToonsResponse() { }
    private static readonly UnblockToonsResponse defaultInstance = new UnblockToonsResponse().MakeReadOnly();
    private static readonly string[] _unblockToonsResponseFieldNames = new string[] { "unblocked_toon" };
    private static readonly uint[] _unblockToonsResponseFieldTags = new uint[] { 10 };
    public static UnblockToonsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnblockToonsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnblockToonsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_UnblockToonsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnblockToonsResponse, UnblockToonsResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_UnblockToonsResponse__FieldAccessorTable; }
    }
    
    public const int UnblockedToonFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.EntityId> unblockedToon_ = new pbc::PopsicleList<global::bnet.protocol.EntityId>();
    public scg::IList<global::bnet.protocol.EntityId> UnblockedToonList {
      get { return unblockedToon_; }
    }
    public int UnblockedToonCount {
      get { return unblockedToon_.Count; }
    }
    public global::bnet.protocol.EntityId GetUnblockedToon(int index) {
      return unblockedToon_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.EntityId element in UnblockedToonList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unblockToonsResponseFieldNames;
      if (unblockedToon_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], unblockedToon_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.EntityId element in UnblockedToonList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnblockToonsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnblockToonsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnblockToonsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnblockToonsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnblockToonsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnblockToonsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnblockToonsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnblockToonsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnblockToonsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnblockToonsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnblockToonsResponse MakeReadOnly() {
      unblockedToon_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnblockToonsResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnblockToonsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnblockToonsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnblockToonsResponse result;
      
      private UnblockToonsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UnblockToonsResponse original = result;
          result = new UnblockToonsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnblockToonsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.UnblockToonsResponse.Descriptor; }
      }
      
      public override UnblockToonsResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.UnblockToonsResponse.DefaultInstance; }
      }
      
      public override UnblockToonsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnblockToonsResponse) {
          return MergeFrom((UnblockToonsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnblockToonsResponse other) {
        if (other == global::bnet.protocol.user_manager.UnblockToonsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.unblockedToon_.Count != 0) {
          result.unblockedToon_.Add(other.unblockedToon_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unblockToonsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unblockToonsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.unblockedToon_, global::bnet.protocol.EntityId.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.EntityId> UnblockedToonList {
        get { return PrepareBuilder().unblockedToon_; }
      }
      public int UnblockedToonCount {
        get { return result.UnblockedToonCount; }
      }
      public global::bnet.protocol.EntityId GetUnblockedToon(int index) {
        return result.GetUnblockedToon(index);
      }
      public Builder SetUnblockedToon(int index, global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.unblockedToon_[index] = value;
        return this;
      }
      public Builder SetUnblockedToon(int index, global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.unblockedToon_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUnblockedToon(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.unblockedToon_.Add(value);
        return this;
      }
      public Builder AddUnblockedToon(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.unblockedToon_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUnblockedToon(scg::IEnumerable<global::bnet.protocol.EntityId> values) {
        PrepareBuilder();
        result.unblockedToon_.Add(values);
        return this;
      }
      public Builder ClearUnblockedToon() {
        PrepareBuilder();
        result.unblockedToon_.Clear();
        return this;
      }
    }
    static UnblockToonsResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnignoreInvitersResponse : pb::GeneratedMessage<UnignoreInvitersResponse, UnignoreInvitersResponse.Builder> {
    private UnignoreInvitersResponse() { }
    private static readonly UnignoreInvitersResponse defaultInstance = new UnignoreInvitersResponse().MakeReadOnly();
    private static readonly string[] _unignoreInvitersResponseFieldNames = new string[] { "unignored_inviter" };
    private static readonly uint[] _unignoreInvitersResponseFieldTags = new uint[] { 10 };
    public static UnignoreInvitersResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnignoreInvitersResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnignoreInvitersResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_UnignoreInvitersResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnignoreInvitersResponse, UnignoreInvitersResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_UnignoreInvitersResponse__FieldAccessorTable; }
    }
    
    public const int UnignoredInviterFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.EntityId> unignoredInviter_ = new pbc::PopsicleList<global::bnet.protocol.EntityId>();
    public scg::IList<global::bnet.protocol.EntityId> UnignoredInviterList {
      get { return unignoredInviter_; }
    }
    public int UnignoredInviterCount {
      get { return unignoredInviter_.Count; }
    }
    public global::bnet.protocol.EntityId GetUnignoredInviter(int index) {
      return unignoredInviter_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.EntityId element in UnignoredInviterList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unignoreInvitersResponseFieldNames;
      if (unignoredInviter_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], unignoredInviter_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.EntityId element in UnignoredInviterList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnignoreInvitersResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnignoreInvitersResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnignoreInvitersResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnignoreInvitersResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnignoreInvitersResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnignoreInvitersResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnignoreInvitersResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnignoreInvitersResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnignoreInvitersResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnignoreInvitersResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnignoreInvitersResponse MakeReadOnly() {
      unignoredInviter_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnignoreInvitersResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnignoreInvitersResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnignoreInvitersResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnignoreInvitersResponse result;
      
      private UnignoreInvitersResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          UnignoreInvitersResponse original = result;
          result = new UnignoreInvitersResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnignoreInvitersResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.UnignoreInvitersResponse.Descriptor; }
      }
      
      public override UnignoreInvitersResponse DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.UnignoreInvitersResponse.DefaultInstance; }
      }
      
      public override UnignoreInvitersResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnignoreInvitersResponse) {
          return MergeFrom((UnignoreInvitersResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnignoreInvitersResponse other) {
        if (other == global::bnet.protocol.user_manager.UnignoreInvitersResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.unignoredInviter_.Count != 0) {
          result.unignoredInviter_.Add(other.unignoredInviter_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unignoreInvitersResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unignoreInvitersResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.unignoredInviter_, global::bnet.protocol.EntityId.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.EntityId> UnignoredInviterList {
        get { return PrepareBuilder().unignoredInviter_; }
      }
      public int UnignoredInviterCount {
        get { return result.UnignoredInviterCount; }
      }
      public global::bnet.protocol.EntityId GetUnignoredInviter(int index) {
        return result.GetUnignoredInviter(index);
      }
      public Builder SetUnignoredInviter(int index, global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.unignoredInviter_[index] = value;
        return this;
      }
      public Builder SetUnignoredInviter(int index, global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.unignoredInviter_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddUnignoredInviter(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.unignoredInviter_.Add(value);
        return this;
      }
      public Builder AddUnignoredInviter(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.unignoredInviter_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeUnignoredInviter(scg::IEnumerable<global::bnet.protocol.EntityId> values) {
        PrepareBuilder();
        result.unignoredInviter_.Add(values);
        return this;
      }
      public Builder ClearUnignoredInviter() {
        PrepareBuilder();
        result.unignoredInviter_.Clear();
        return this;
      }
    }
    static UnignoreInvitersResponse() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class InviterIgnoredNotification : pb::GeneratedMessage<InviterIgnoredNotification, InviterIgnoredNotification.Builder> {
    private InviterIgnoredNotification() { }
    private static readonly InviterIgnoredNotification defaultInstance = new InviterIgnoredNotification().MakeReadOnly();
    private static readonly string[] _inviterIgnoredNotificationFieldNames = new string[] { "players" };
    private static readonly uint[] _inviterIgnoredNotificationFieldTags = new uint[] { 10 };
    public static InviterIgnoredNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InviterIgnoredNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InviterIgnoredNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_InviterIgnoredNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InviterIgnoredNotification, InviterIgnoredNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.user_manager.UserManager.internal__static_bnet_protocol_user_manager_InviterIgnoredNotification__FieldAccessorTable; }
    }
    
    public const int PlayersFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.EntityId> players_ = new pbc::PopsicleList<global::bnet.protocol.EntityId>();
    public scg::IList<global::bnet.protocol.EntityId> PlayersList {
      get { return players_; }
    }
    public int PlayersCount {
      get { return players_.Count; }
    }
    public global::bnet.protocol.EntityId GetPlayers(int index) {
      return players_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.EntityId element in PlayersList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _inviterIgnoredNotificationFieldNames;
      if (players_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], players_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.EntityId element in PlayersList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static InviterIgnoredNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InviterIgnoredNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InviterIgnoredNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InviterIgnoredNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InviterIgnoredNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InviterIgnoredNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InviterIgnoredNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InviterIgnoredNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InviterIgnoredNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InviterIgnoredNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InviterIgnoredNotification MakeReadOnly() {
      players_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InviterIgnoredNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<InviterIgnoredNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InviterIgnoredNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InviterIgnoredNotification result;
      
      private InviterIgnoredNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          InviterIgnoredNotification original = result;
          result = new InviterIgnoredNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InviterIgnoredNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.user_manager.InviterIgnoredNotification.Descriptor; }
      }
      
      public override InviterIgnoredNotification DefaultInstanceForType {
        get { return global::bnet.protocol.user_manager.InviterIgnoredNotification.DefaultInstance; }
      }
      
      public override InviterIgnoredNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InviterIgnoredNotification) {
          return MergeFrom((InviterIgnoredNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InviterIgnoredNotification other) {
        if (other == global::bnet.protocol.user_manager.InviterIgnoredNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.players_.Count != 0) {
          result.players_.Add(other.players_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_inviterIgnoredNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _inviterIgnoredNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.players_, global::bnet.protocol.EntityId.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.EntityId> PlayersList {
        get { return PrepareBuilder().players_; }
      }
      public int PlayersCount {
        get { return result.PlayersCount; }
      }
      public global::bnet.protocol.EntityId GetPlayers(int index) {
        return result.GetPlayers(index);
      }
      public Builder SetPlayers(int index, global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.players_[index] = value;
        return this;
      }
      public Builder SetPlayers(int index, global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.players_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddPlayers(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.players_.Add(value);
        return this;
      }
      public Builder AddPlayers(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.players_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangePlayers(scg::IEnumerable<global::bnet.protocol.EntityId> values) {
        PrepareBuilder();
        result.players_.Add(values);
        return this;
      }
      public Builder ClearPlayers() {
        PrepareBuilder();
        result.players_.Clear();
        return this;
      }
    }
    static InviterIgnoredNotification() {
      object.ReferenceEquals(global::bnet.protocol.user_manager.UserManager.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class UserManagerService : pb::IService {
    public abstract void SubscribeToUserManager(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.SubscribeToUserManagerRequest request,
        global::System.Action<global::bnet.protocol.user_manager.SubscribeToUserManagerResponse> done);
    public abstract void AddRecentPlayers(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.AddRecentPlayersRequest request,
        global::System.Action<global::bnet.protocol.user_manager.AddRecentPlayersResponse> done);
    public abstract void RemoveRecentPlayers(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.RemoveRecentPlayersRequest request,
        global::System.Action<global::bnet.protocol.user_manager.RemoveRecentPlayersResponse> done);
    public abstract void ReportToon(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.ReportToonRequest request,
        global::System.Action<global::bnet.protocol.user_manager.ReportToonResponse> done);
    public abstract void BlockToon(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.BlockToonRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void UnblockToons(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.UnblockToonsRequest request,
        global::System.Action<global::bnet.protocol.user_manager.UnblockToonsResponse> done);
    public abstract void ReportAccount(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.ReportAccountRequest request,
        global::System.Action<global::bnet.protocol.user_manager.ReportAccountResponse> done);
    public abstract void IgnoreInviter(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.IgnoreInviterRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void UnignoreInviters(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.UnignoreInvitersRequest request,
        global::System.Action<global::bnet.protocol.user_manager.UnignoreInvitersResponse> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return UserManager.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.SubscribeToUserManager(controller, (global::bnet.protocol.user_manager.SubscribeToUserManagerRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.SubscribeToUserManagerResponse>(
              done));
          return;
        case 1:
          this.AddRecentPlayers(controller, (global::bnet.protocol.user_manager.AddRecentPlayersRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.AddRecentPlayersResponse>(
              done));
          return;
        case 2:
          this.RemoveRecentPlayers(controller, (global::bnet.protocol.user_manager.RemoveRecentPlayersRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.RemoveRecentPlayersResponse>(
              done));
          return;
        case 3:
          this.ReportToon(controller, (global::bnet.protocol.user_manager.ReportToonRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.ReportToonResponse>(
              done));
          return;
        case 4:
          this.BlockToon(controller, (global::bnet.protocol.user_manager.BlockToonRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 5:
          this.UnblockToons(controller, (global::bnet.protocol.user_manager.UnblockToonsRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.UnblockToonsResponse>(
              done));
          return;
        case 6:
          this.ReportAccount(controller, (global::bnet.protocol.user_manager.ReportAccountRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.ReportAccountResponse>(
              done));
          return;
        case 7:
          this.IgnoreInviter(controller, (global::bnet.protocol.user_manager.IgnoreInviterRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 8:
          this.UnignoreInviters(controller, (global::bnet.protocol.user_manager.UnignoreInvitersRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.user_manager.UnignoreInvitersResponse>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.user_manager.SubscribeToUserManagerRequest.DefaultInstance;
        case 1:
          return global::bnet.protocol.user_manager.AddRecentPlayersRequest.DefaultInstance;
        case 2:
          return global::bnet.protocol.user_manager.RemoveRecentPlayersRequest.DefaultInstance;
        case 3:
          return global::bnet.protocol.user_manager.ReportToonRequest.DefaultInstance;
        case 4:
          return global::bnet.protocol.user_manager.BlockToonRequest.DefaultInstance;
        case 5:
          return global::bnet.protocol.user_manager.UnblockToonsRequest.DefaultInstance;
        case 6:
          return global::bnet.protocol.user_manager.ReportAccountRequest.DefaultInstance;
        case 7:
          return global::bnet.protocol.user_manager.IgnoreInviterRequest.DefaultInstance;
        case 8:
          return global::bnet.protocol.user_manager.UnignoreInvitersRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.DefaultInstance;
        case 1:
          return global::bnet.protocol.user_manager.AddRecentPlayersResponse.DefaultInstance;
        case 2:
          return global::bnet.protocol.user_manager.RemoveRecentPlayersResponse.DefaultInstance;
        case 3:
          return global::bnet.protocol.user_manager.ReportToonResponse.DefaultInstance;
        case 4:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 5:
          return global::bnet.protocol.user_manager.UnblockToonsResponse.DefaultInstance;
        case 6:
          return global::bnet.protocol.user_manager.ReportAccountResponse.DefaultInstance;
        case 7:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 8:
          return global::bnet.protocol.user_manager.UnignoreInvitersResponse.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bnet.protocol.user_manager.UserManagerService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void SubscribeToUserManager(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.SubscribeToUserManagerRequest request,
          global::System.Action<global::bnet.protocol.user_manager.SubscribeToUserManagerResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.SubscribeToUserManagerResponse, global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.Builder>(done, global::bnet.protocol.user_manager.SubscribeToUserManagerResponse.DefaultInstance));
      }
      
      public override void AddRecentPlayers(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.AddRecentPlayersRequest request,
          global::System.Action<global::bnet.protocol.user_manager.AddRecentPlayersResponse> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.user_manager.AddRecentPlayersResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.AddRecentPlayersResponse, global::bnet.protocol.user_manager.AddRecentPlayersResponse.Builder>(done, global::bnet.protocol.user_manager.AddRecentPlayersResponse.DefaultInstance));
      }
      
      public override void RemoveRecentPlayers(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.RemoveRecentPlayersRequest request,
          global::System.Action<global::bnet.protocol.user_manager.RemoveRecentPlayersResponse> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.user_manager.RemoveRecentPlayersResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.RemoveRecentPlayersResponse, global::bnet.protocol.user_manager.RemoveRecentPlayersResponse.Builder>(done, global::bnet.protocol.user_manager.RemoveRecentPlayersResponse.DefaultInstance));
      }
      
      public override void ReportToon(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.ReportToonRequest request,
          global::System.Action<global::bnet.protocol.user_manager.ReportToonResponse> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bnet.protocol.user_manager.ReportToonResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.ReportToonResponse, global::bnet.protocol.user_manager.ReportToonResponse.Builder>(done, global::bnet.protocol.user_manager.ReportToonResponse.DefaultInstance));
      }
      
      public override void BlockToon(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.BlockToonRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void UnblockToons(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.UnblockToonsRequest request,
          global::System.Action<global::bnet.protocol.user_manager.UnblockToonsResponse> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bnet.protocol.user_manager.UnblockToonsResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.UnblockToonsResponse, global::bnet.protocol.user_manager.UnblockToonsResponse.Builder>(done, global::bnet.protocol.user_manager.UnblockToonsResponse.DefaultInstance));
      }
      
      public override void ReportAccount(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.ReportAccountRequest request,
          global::System.Action<global::bnet.protocol.user_manager.ReportAccountResponse> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bnet.protocol.user_manager.ReportAccountResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.ReportAccountResponse, global::bnet.protocol.user_manager.ReportAccountResponse.Builder>(done, global::bnet.protocol.user_manager.ReportAccountResponse.DefaultInstance));
      }
      
      public override void IgnoreInviter(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.IgnoreInviterRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[7],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void UnignoreInviters(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.UnignoreInvitersRequest request,
          global::System.Action<global::bnet.protocol.user_manager.UnignoreInvitersResponse> done) {
        channel.CallMethod(Descriptor.Methods[8],
            controller, request, global::bnet.protocol.user_manager.UnignoreInvitersResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.user_manager.UnignoreInvitersResponse, global::bnet.protocol.user_manager.UnignoreInvitersResponse.Builder>(done, global::bnet.protocol.user_manager.UnignoreInvitersResponse.DefaultInstance));
      }
    }
  }
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class UserManagerNotify : pb::IService {
    public abstract void NotifyInviterIgnored(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.InviterIgnoredNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyInviterUnignored(
        pb::IRpcController controller,
        global::bnet.protocol.user_manager.InviterIgnoredNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return UserManager.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.NotifyInviterIgnored(controller, (global::bnet.protocol.user_manager.InviterIgnoredNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 1:
          this.NotifyInviterUnignored(controller, (global::bnet.protocol.user_manager.InviterIgnoredNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.user_manager.InviterIgnoredNotification.DefaultInstance;
        case 1:
          return global::bnet.protocol.user_manager.InviterIgnoredNotification.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 1:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bnet.protocol.user_manager.UserManagerNotify {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void NotifyInviterIgnored(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.InviterIgnoredNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyInviterUnignored(
          pb::IRpcController controller,
          global::bnet.protocol.user_manager.InviterIgnoredNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
