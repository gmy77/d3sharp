// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.invitation {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class InvitationTypes {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_invitation_Invitation__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.Invitation, global::bnet.protocol.invitation.Invitation.Builder> internal__static_bnet_protocol_invitation_Invitation__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_invitation_Suggestion__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.Suggestion, global::bnet.protocol.invitation.Suggestion.Builder> internal__static_bnet_protocol_invitation_Suggestion__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_invitation_InvitationParams__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.InvitationParams, global::bnet.protocol.invitation.InvitationParams.Builder> internal__static_bnet_protocol_invitation_InvitationParams__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_invitation_SendInvitationRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.SendInvitationRequest, global::bnet.protocol.invitation.SendInvitationRequest.Builder> internal__static_bnet_protocol_invitation_SendInvitationRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_invitation_SendInvitationResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.SendInvitationResponse, global::bnet.protocol.invitation.SendInvitationResponse.Builder> internal__static_bnet_protocol_invitation_SendInvitationResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_invitation_UpdateInvitationRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.UpdateInvitationRequest, global::bnet.protocol.invitation.UpdateInvitationRequest.Builder> internal__static_bnet_protocol_invitation_UpdateInvitationRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_bnet_protocol_invitation_GenericRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.GenericRequest, global::bnet.protocol.invitation.GenericRequest.Builder> internal__static_bnet_protocol_invitation_GenericRequest__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static InvitationTypes() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChtibmV0L2ludml0YXRpb25fdHlwZXMucHJvdG8SGGJuZXQucHJvdG9jb2wu" + 
          "aW52aXRhdGlvbhoUYm5ldC9hdHRyaWJ1dGUucHJvdG8aEWJuZXQvZW50aXR5" + 
          "LnByb3RvIv0BCgpJbnZpdGF0aW9uEgoKAmlkGAEgAigGEjEKEGludml0ZXJf" + 
          "aWRlbnRpdHkYAiACKAsyFy5ibmV0LnByb3RvY29sLklkZW50aXR5EjEKEGlu" + 
          "dml0ZWVfaWRlbnRpdHkYAyACKAsyFy5ibmV0LnByb3RvY29sLklkZW50aXR5" + 
          "EhQKDGludml0ZXJfbmFtZRgEIAEoCRIUCgxpbnZpdGVlX25hbWUYBSABKAkS" + 
          "GgoSaW52aXRhdGlvbl9tZXNzYWdlGAYgASgJEhUKDWNyZWF0aW9uX3RpbWUY" + 
          "ByABKAQSFwoPZXhwaXJhdGlvbl90aW1lGAggASgEKgUIZBCRTiLHAQoKU3Vn" + 
          "Z2VzdGlvbhIrCgpjaGFubmVsX2lkGAEgASgLMhcuYm5ldC5wcm90b2NvbC5F" + 
          "bnRpdHlJZBItCgxzdWdnZXN0ZXJfaWQYAiACKAsyFy5ibmV0LnByb3RvY29s" + 
          "LkVudGl0eUlkEi0KDHN1Z2dlc3RlZV9pZBgDIAIoCzIXLmJuZXQucHJvdG9j" + 
          "b2wuRW50aXR5SWQSFgoOc3VnZ2VzdGVyX25hbWUYBCABKAkSFgoOc3VnZ2Vz" + 
          "dGVlX25hbWUYBSABKAkiUQoQSW52aXRhdGlvblBhcmFtcxIaChJpbnZpdGF0" + 
          "aW9uX21lc3NhZ2UYASABKAkSGgoPZXhwaXJhdGlvbl90aW1lGAIgASgEOgEw" + 
          "KgUIZBCRTiKwAQoVU2VuZEludml0YXRpb25SZXF1ZXN0Ei8KDmFnZW50X2lk" + 
          "ZW50aXR5GAEgASgLMhcuYm5ldC5wcm90b2NvbC5JZGVudGl0eRIqCgl0YXJn" + 
          "ZXRfaWQYAiACKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkEjoKBnBhcmFt" + 
          "cxgDIAIoCzIqLmJuZXQucHJvdG9jb2wuaW52aXRhdGlvbi5JbnZpdGF0aW9u" + 
          "UGFyYW1zIlIKFlNlbmRJbnZpdGF0aW9uUmVzcG9uc2USOAoKaW52aXRhdGlv" + 
          "bhgCIAEoCzIkLmJuZXQucHJvdG9jb2wuaW52aXRhdGlvbi5JbnZpdGF0aW9u" + 
          "Ip0BChdVcGRhdGVJbnZpdGF0aW9uUmVxdWVzdBIvCg5hZ2VudF9pZGVudGl0" + 
          "eRgBIAEoCzIXLmJuZXQucHJvdG9jb2wuSWRlbnRpdHkSFQoNaW52aXRhdGlv" + 
          "bl9pZBgCIAIoBhI6CgZwYXJhbXMYAyACKAsyKi5ibmV0LnByb3RvY29sLmlu" + 
          "dml0YXRpb24uSW52aXRhdGlvblBhcmFtcyLfAQoOR2VuZXJpY1JlcXVlc3QS" + 
          "KQoIYWdlbnRfaWQYASABKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkEioK" + 
          "CXRhcmdldF9pZBgCIAEoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQSFQoN" + 
          "aW52aXRhdGlvbl9pZBgDIAIoBhIUCgxpbnZpdGVlX25hbWUYBCABKAkSFAoM" + 
          "aW52aXRlcl9uYW1lGAUgASgJEhkKDXByZXZpb3VzX3JvbGUYBiADKA1CAhAB" + 
          "EhgKDGRlc2lyZWRfcm9sZRgHIAMoDUICEAE=");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_bnet_protocol_invitation_Invitation__Descriptor = Descriptor.MessageTypes[0];
        internal__static_bnet_protocol_invitation_Invitation__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.Invitation, global::bnet.protocol.invitation.Invitation.Builder>(internal__static_bnet_protocol_invitation_Invitation__Descriptor,
                new string[] { "Id", "InviterIdentity", "InviteeIdentity", "InviterName", "InviteeName", "InvitationMessage", "CreationTime", "ExpirationTime", });
        internal__static_bnet_protocol_invitation_Suggestion__Descriptor = Descriptor.MessageTypes[1];
        internal__static_bnet_protocol_invitation_Suggestion__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.Suggestion, global::bnet.protocol.invitation.Suggestion.Builder>(internal__static_bnet_protocol_invitation_Suggestion__Descriptor,
                new string[] { "ChannelId", "SuggesterId", "SuggesteeId", "SuggesterName", "SuggesteeName", });
        internal__static_bnet_protocol_invitation_InvitationParams__Descriptor = Descriptor.MessageTypes[2];
        internal__static_bnet_protocol_invitation_InvitationParams__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.InvitationParams, global::bnet.protocol.invitation.InvitationParams.Builder>(internal__static_bnet_protocol_invitation_InvitationParams__Descriptor,
                new string[] { "InvitationMessage", "ExpirationTime", });
        internal__static_bnet_protocol_invitation_SendInvitationRequest__Descriptor = Descriptor.MessageTypes[3];
        internal__static_bnet_protocol_invitation_SendInvitationRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.SendInvitationRequest, global::bnet.protocol.invitation.SendInvitationRequest.Builder>(internal__static_bnet_protocol_invitation_SendInvitationRequest__Descriptor,
                new string[] { "AgentIdentity", "TargetId", "Params", });
        internal__static_bnet_protocol_invitation_SendInvitationResponse__Descriptor = Descriptor.MessageTypes[4];
        internal__static_bnet_protocol_invitation_SendInvitationResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.SendInvitationResponse, global::bnet.protocol.invitation.SendInvitationResponse.Builder>(internal__static_bnet_protocol_invitation_SendInvitationResponse__Descriptor,
                new string[] { "Invitation", });
        internal__static_bnet_protocol_invitation_UpdateInvitationRequest__Descriptor = Descriptor.MessageTypes[5];
        internal__static_bnet_protocol_invitation_UpdateInvitationRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.UpdateInvitationRequest, global::bnet.protocol.invitation.UpdateInvitationRequest.Builder>(internal__static_bnet_protocol_invitation_UpdateInvitationRequest__Descriptor,
                new string[] { "AgentIdentity", "InvitationId", "Params", });
        internal__static_bnet_protocol_invitation_GenericRequest__Descriptor = Descriptor.MessageTypes[6];
        internal__static_bnet_protocol_invitation_GenericRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.invitation.GenericRequest, global::bnet.protocol.invitation.GenericRequest.Builder>(internal__static_bnet_protocol_invitation_GenericRequest__Descriptor,
                new string[] { "AgentId", "TargetId", "InvitationId", "InviteeName", "InviterName", "PreviousRole", "DesiredRole", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::bnet.protocol.attribute.Proto.Attribute.Descriptor, 
          global::bnet.protocol.Entity.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Invitation : pb::ExtendableMessage<Invitation, Invitation.Builder> {
    private Invitation() { }
    private static readonly Invitation defaultInstance = new Invitation().MakeReadOnly();
    private static readonly string[] _invitationFieldNames = new string[] { "creation_time", "expiration_time", "id", "invitation_message", "invitee_identity", "invitee_name", "inviter_identity", "inviter_name" };
    private static readonly uint[] _invitationFieldTags = new uint[] { 56, 64, 9, 50, 26, 42, 18, 34 };
    public static Invitation DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Invitation DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Invitation ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.invitation.InvitationTypes.internal__static_bnet_protocol_invitation_Invitation__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Invitation, Invitation.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.invitation.InvitationTypes.internal__static_bnet_protocol_invitation_Invitation__FieldAccessorTable; }
    }
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private ulong id_;
    public bool HasId {
      get { return hasId; }
    }
    public ulong Id {
      get { return id_; }
    }
    
    public const int InviterIdentityFieldNumber = 2;
    private bool hasInviterIdentity;
    private global::bnet.protocol.Identity inviterIdentity_;
    public bool HasInviterIdentity {
      get { return hasInviterIdentity; }
    }
    public global::bnet.protocol.Identity InviterIdentity {
      get { return inviterIdentity_ ?? global::bnet.protocol.Identity.DefaultInstance; }
    }
    
    public const int InviteeIdentityFieldNumber = 3;
    private bool hasInviteeIdentity;
    private global::bnet.protocol.Identity inviteeIdentity_;
    public bool HasInviteeIdentity {
      get { return hasInviteeIdentity; }
    }
    public global::bnet.protocol.Identity InviteeIdentity {
      get { return inviteeIdentity_ ?? global::bnet.protocol.Identity.DefaultInstance; }
    }
    
    public const int InviterNameFieldNumber = 4;
    private bool hasInviterName;
    private string inviterName_ = "";
    public bool HasInviterName {
      get { return hasInviterName; }
    }
    public string InviterName {
      get { return inviterName_; }
    }
    
    public const int InviteeNameFieldNumber = 5;
    private bool hasInviteeName;
    private string inviteeName_ = "";
    public bool HasInviteeName {
      get { return hasInviteeName; }
    }
    public string InviteeName {
      get { return inviteeName_; }
    }
    
    public const int InvitationMessageFieldNumber = 6;
    private bool hasInvitationMessage;
    private string invitationMessage_ = "";
    public bool HasInvitationMessage {
      get { return hasInvitationMessage; }
    }
    public string InvitationMessage {
      get { return invitationMessage_; }
    }
    
    public const int CreationTimeFieldNumber = 7;
    private bool hasCreationTime;
    private ulong creationTime_;
    public bool HasCreationTime {
      get { return hasCreationTime; }
    }
    public ulong CreationTime {
      get { return creationTime_; }
    }
    
    public const int ExpirationTimeFieldNumber = 8;
    private bool hasExpirationTime;
    private ulong expirationTime_;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public ulong ExpirationTime {
      get { return expirationTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasInviterIdentity) return false;
        if (!hasInviteeIdentity) return false;
        if (!InviterIdentity.IsInitialized) return false;
        if (!InviteeIdentity.IsInitialized) return false;
        if (!ExtensionsAreInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _invitationFieldNames;
      pb::ExtendableMessage<Invitation, Invitation.Builder>.ExtensionWriter extensionWriter = CreateExtensionWriter(this);
      if (hasId) {
        output.WriteFixed64(1, field_names[2], Id);
      }
      if (hasInviterIdentity) {
        output.WriteMessage(2, field_names[6], InviterIdentity);
      }
      if (hasInviteeIdentity) {
        output.WriteMessage(3, field_names[4], InviteeIdentity);
      }
      if (hasInviterName) {
        output.WriteString(4, field_names[7], InviterName);
      }
      if (hasInviteeName) {
        output.WriteString(5, field_names[5], InviteeName);
      }
      if (hasInvitationMessage) {
        output.WriteString(6, field_names[3], InvitationMessage);
      }
      if (hasCreationTime) {
        output.WriteUInt64(7, field_names[0], CreationTime);
      }
      if (hasExpirationTime) {
        output.WriteUInt64(8, field_names[1], ExpirationTime);
      }
      extensionWriter.WriteUntil(10001, output);
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(1, Id);
        }
        if (hasInviterIdentity) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, InviterIdentity);
        }
        if (hasInviteeIdentity) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, InviteeIdentity);
        }
        if (hasInviterName) {
          size += pb::CodedOutputStream.ComputeStringSize(4, InviterName);
        }
        if (hasInviteeName) {
          size += pb::CodedOutputStream.ComputeStringSize(5, InviteeName);
        }
        if (hasInvitationMessage) {
          size += pb::CodedOutputStream.ComputeStringSize(6, InvitationMessage);
        }
        if (hasCreationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(7, CreationTime);
        }
        if (hasExpirationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(8, ExpirationTime);
        }
        size += ExtensionsSerializedSize;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Invitation ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Invitation ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Invitation ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Invitation ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Invitation ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Invitation ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Invitation ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Invitation ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Invitation ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Invitation ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Invitation MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Invitation prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::ExtendableBuilder<Invitation, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Invitation cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Invitation result;
      
      private Invitation PrepareBuilder() {
        if (resultIsReadOnly) {
          Invitation original = result;
          result = new Invitation();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Invitation MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.invitation.Invitation.Descriptor; }
      }
      
      public override Invitation DefaultInstanceForType {
        get { return global::bnet.protocol.invitation.Invitation.DefaultInstance; }
      }
      
      public override Invitation BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Invitation) {
          return MergeFrom((Invitation) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Invitation other) {
        if (other == global::bnet.protocol.invitation.Invitation.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasInviterIdentity) {
          MergeInviterIdentity(other.InviterIdentity);
        }
        if (other.HasInviteeIdentity) {
          MergeInviteeIdentity(other.InviteeIdentity);
        }
        if (other.HasInviterName) {
          InviterName = other.InviterName;
        }
        if (other.HasInviteeName) {
          InviteeName = other.InviteeName;
        }
        if (other.HasInvitationMessage) {
          InvitationMessage = other.InvitationMessage;
        }
        if (other.HasCreationTime) {
          CreationTime = other.CreationTime;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
          this.MergeExtensionFields(other);
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_invitationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _invitationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 9: {
              result.hasId = input.ReadFixed64(ref result.id_);
              break;
            }
            case 18: {
              global::bnet.protocol.Identity.Builder subBuilder = global::bnet.protocol.Identity.CreateBuilder();
              if (result.hasInviterIdentity) {
                subBuilder.MergeFrom(InviterIdentity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              InviterIdentity = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.Identity.Builder subBuilder = global::bnet.protocol.Identity.CreateBuilder();
              if (result.hasInviteeIdentity) {
                subBuilder.MergeFrom(InviteeIdentity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              InviteeIdentity = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              result.hasInviterName = input.ReadString(ref result.inviterName_);
              break;
            }
            case 42: {
              result.hasInviteeName = input.ReadString(ref result.inviteeName_);
              break;
            }
            case 50: {
              result.hasInvitationMessage = input.ReadString(ref result.invitationMessage_);
              break;
            }
            case 56: {
              result.hasCreationTime = input.ReadUInt64(ref result.creationTime_);
              break;
            }
            case 64: {
              result.hasExpirationTime = input.ReadUInt64(ref result.expirationTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public ulong Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(ulong value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      public bool HasInviterIdentity {
       get { return result.hasInviterIdentity; }
      }
      public global::bnet.protocol.Identity InviterIdentity {
        get { return result.InviterIdentity; }
        set { SetInviterIdentity(value); }
      }
      public Builder SetInviterIdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInviterIdentity = true;
        result.inviterIdentity_ = value;
        return this;
      }
      public Builder SetInviterIdentity(global::bnet.protocol.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInviterIdentity = true;
        result.inviterIdentity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInviterIdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInviterIdentity &&
            result.inviterIdentity_ != global::bnet.protocol.Identity.DefaultInstance) {
            result.inviterIdentity_ = global::bnet.protocol.Identity.CreateBuilder(result.inviterIdentity_).MergeFrom(value).BuildPartial();
        } else {
          result.inviterIdentity_ = value;
        }
        result.hasInviterIdentity = true;
        return this;
      }
      public Builder ClearInviterIdentity() {
        PrepareBuilder();
        result.hasInviterIdentity = false;
        result.inviterIdentity_ = null;
        return this;
      }
      
      public bool HasInviteeIdentity {
       get { return result.hasInviteeIdentity; }
      }
      public global::bnet.protocol.Identity InviteeIdentity {
        get { return result.InviteeIdentity; }
        set { SetInviteeIdentity(value); }
      }
      public Builder SetInviteeIdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInviteeIdentity = true;
        result.inviteeIdentity_ = value;
        return this;
      }
      public Builder SetInviteeIdentity(global::bnet.protocol.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInviteeIdentity = true;
        result.inviteeIdentity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInviteeIdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInviteeIdentity &&
            result.inviteeIdentity_ != global::bnet.protocol.Identity.DefaultInstance) {
            result.inviteeIdentity_ = global::bnet.protocol.Identity.CreateBuilder(result.inviteeIdentity_).MergeFrom(value).BuildPartial();
        } else {
          result.inviteeIdentity_ = value;
        }
        result.hasInviteeIdentity = true;
        return this;
      }
      public Builder ClearInviteeIdentity() {
        PrepareBuilder();
        result.hasInviteeIdentity = false;
        result.inviteeIdentity_ = null;
        return this;
      }
      
      public bool HasInviterName {
        get { return result.hasInviterName; }
      }
      public string InviterName {
        get { return result.InviterName; }
        set { SetInviterName(value); }
      }
      public Builder SetInviterName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInviterName = true;
        result.inviterName_ = value;
        return this;
      }
      public Builder ClearInviterName() {
        PrepareBuilder();
        result.hasInviterName = false;
        result.inviterName_ = "";
        return this;
      }
      
      public bool HasInviteeName {
        get { return result.hasInviteeName; }
      }
      public string InviteeName {
        get { return result.InviteeName; }
        set { SetInviteeName(value); }
      }
      public Builder SetInviteeName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInviteeName = true;
        result.inviteeName_ = value;
        return this;
      }
      public Builder ClearInviteeName() {
        PrepareBuilder();
        result.hasInviteeName = false;
        result.inviteeName_ = "";
        return this;
      }
      
      public bool HasInvitationMessage {
        get { return result.hasInvitationMessage; }
      }
      public string InvitationMessage {
        get { return result.InvitationMessage; }
        set { SetInvitationMessage(value); }
      }
      public Builder SetInvitationMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInvitationMessage = true;
        result.invitationMessage_ = value;
        return this;
      }
      public Builder ClearInvitationMessage() {
        PrepareBuilder();
        result.hasInvitationMessage = false;
        result.invitationMessage_ = "";
        return this;
      }
      
      public bool HasCreationTime {
        get { return result.hasCreationTime; }
      }
      public ulong CreationTime {
        get { return result.CreationTime; }
        set { SetCreationTime(value); }
      }
      public Builder SetCreationTime(ulong value) {
        PrepareBuilder();
        result.hasCreationTime = true;
        result.creationTime_ = value;
        return this;
      }
      public Builder ClearCreationTime() {
        PrepareBuilder();
        result.hasCreationTime = false;
        result.creationTime_ = 0UL;
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.hasExpirationTime; }
      }
      public ulong ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(ulong value) {
        PrepareBuilder();
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        PrepareBuilder();
        result.hasExpirationTime = false;
        result.expirationTime_ = 0UL;
        return this;
      }
    }
    static Invitation() {
      object.ReferenceEquals(global::bnet.protocol.invitation.InvitationTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class Suggestion : pb::GeneratedMessage<Suggestion, Suggestion.Builder> {
    private Suggestion() { }
    private static readonly Suggestion defaultInstance = new Suggestion().MakeReadOnly();
    private static readonly string[] _suggestionFieldNames = new string[] { "channel_id", "suggestee_id", "suggestee_name", "suggester_id", "suggester_name" };
    private static readonly uint[] _suggestionFieldTags = new uint[] { 10, 26, 42, 18, 34 };
    public static Suggestion DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Suggestion DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Suggestion ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.invitation.InvitationTypes.internal__static_bnet_protocol_invitation_Suggestion__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Suggestion, Suggestion.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.invitation.InvitationTypes.internal__static_bnet_protocol_invitation_Suggestion__FieldAccessorTable; }
    }
    
    public const int ChannelIdFieldNumber = 1;
    private bool hasChannelId;
    private global::bnet.protocol.EntityId channelId_;
    public bool HasChannelId {
      get { return hasChannelId; }
    }
    public global::bnet.protocol.EntityId ChannelId {
      get { return channelId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int SuggesterIdFieldNumber = 2;
    private bool hasSuggesterId;
    private global::bnet.protocol.EntityId suggesterId_;
    public bool HasSuggesterId {
      get { return hasSuggesterId; }
    }
    public global::bnet.protocol.EntityId SuggesterId {
      get { return suggesterId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int SuggesteeIdFieldNumber = 3;
    private bool hasSuggesteeId;
    private global::bnet.protocol.EntityId suggesteeId_;
    public bool HasSuggesteeId {
      get { return hasSuggesteeId; }
    }
    public global::bnet.protocol.EntityId SuggesteeId {
      get { return suggesteeId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int SuggesterNameFieldNumber = 4;
    private bool hasSuggesterName;
    private string suggesterName_ = "";
    public bool HasSuggesterName {
      get { return hasSuggesterName; }
    }
    public string SuggesterName {
      get { return suggesterName_; }
    }
    
    public const int SuggesteeNameFieldNumber = 5;
    private bool hasSuggesteeName;
    private string suggesteeName_ = "";
    public bool HasSuggesteeName {
      get { return hasSuggesteeName; }
    }
    public string SuggesteeName {
      get { return suggesteeName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSuggesterId) return false;
        if (!hasSuggesteeId) return false;
        if (HasChannelId) {
          if (!ChannelId.IsInitialized) return false;
        }
        if (!SuggesterId.IsInitialized) return false;
        if (!SuggesteeId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _suggestionFieldNames;
      if (hasChannelId) {
        output.WriteMessage(1, field_names[0], ChannelId);
      }
      if (hasSuggesterId) {
        output.WriteMessage(2, field_names[3], SuggesterId);
      }
      if (hasSuggesteeId) {
        output.WriteMessage(3, field_names[1], SuggesteeId);
      }
      if (hasSuggesterName) {
        output.WriteString(4, field_names[4], SuggesterName);
      }
      if (hasSuggesteeName) {
        output.WriteString(5, field_names[2], SuggesteeName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasChannelId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ChannelId);
        }
        if (hasSuggesterId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, SuggesterId);
        }
        if (hasSuggesteeId) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, SuggesteeId);
        }
        if (hasSuggesterName) {
          size += pb::CodedOutputStream.ComputeStringSize(4, SuggesterName);
        }
        if (hasSuggesteeName) {
          size += pb::CodedOutputStream.ComputeStringSize(5, SuggesteeName);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static Suggestion ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Suggestion ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Suggestion ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Suggestion ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Suggestion ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Suggestion ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Suggestion ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Suggestion ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Suggestion ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Suggestion ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Suggestion MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Suggestion prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<Suggestion, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Suggestion cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Suggestion result;
      
      private Suggestion PrepareBuilder() {
        if (resultIsReadOnly) {
          Suggestion original = result;
          result = new Suggestion();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Suggestion MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.invitation.Suggestion.Descriptor; }
      }
      
      public override Suggestion DefaultInstanceForType {
        get { return global::bnet.protocol.invitation.Suggestion.DefaultInstance; }
      }
      
      public override Suggestion BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Suggestion) {
          return MergeFrom((Suggestion) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Suggestion other) {
        if (other == global::bnet.protocol.invitation.Suggestion.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasChannelId) {
          MergeChannelId(other.ChannelId);
        }
        if (other.HasSuggesterId) {
          MergeSuggesterId(other.SuggesterId);
        }
        if (other.HasSuggesteeId) {
          MergeSuggesteeId(other.SuggesteeId);
        }
        if (other.HasSuggesterName) {
          SuggesterName = other.SuggesterName;
        }
        if (other.HasSuggesteeName) {
          SuggesteeName = other.SuggesteeName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_suggestionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _suggestionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasChannelId) {
                subBuilder.MergeFrom(ChannelId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChannelId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasSuggesterId) {
                subBuilder.MergeFrom(SuggesterId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SuggesterId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasSuggesteeId) {
                subBuilder.MergeFrom(SuggesteeId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              SuggesteeId = subBuilder.BuildPartial();
              break;
            }
            case 34: {
              result.hasSuggesterName = input.ReadString(ref result.suggesterName_);
              break;
            }
            case 42: {
              result.hasSuggesteeName = input.ReadString(ref result.suggesteeName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasChannelId {
       get { return result.hasChannelId; }
      }
      public global::bnet.protocol.EntityId ChannelId {
        get { return result.ChannelId; }
        set { SetChannelId(value); }
      }
      public Builder SetChannelId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = value;
        return this;
      }
      public Builder SetChannelId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChannelId = true;
        result.channelId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChannelId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChannelId &&
            result.channelId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.channelId_ = global::bnet.protocol.EntityId.CreateBuilder(result.channelId_).MergeFrom(value).BuildPartial();
        } else {
          result.channelId_ = value;
        }
        result.hasChannelId = true;
        return this;
      }
      public Builder ClearChannelId() {
        PrepareBuilder();
        result.hasChannelId = false;
        result.channelId_ = null;
        return this;
      }
      
      public bool HasSuggesterId {
       get { return result.hasSuggesterId; }
      }
      public global::bnet.protocol.EntityId SuggesterId {
        get { return result.SuggesterId; }
        set { SetSuggesterId(value); }
      }
      public Builder SetSuggesterId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggesterId = true;
        result.suggesterId_ = value;
        return this;
      }
      public Builder SetSuggesterId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSuggesterId = true;
        result.suggesterId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuggesterId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSuggesterId &&
            result.suggesterId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.suggesterId_ = global::bnet.protocol.EntityId.CreateBuilder(result.suggesterId_).MergeFrom(value).BuildPartial();
        } else {
          result.suggesterId_ = value;
        }
        result.hasSuggesterId = true;
        return this;
      }
      public Builder ClearSuggesterId() {
        PrepareBuilder();
        result.hasSuggesterId = false;
        result.suggesterId_ = null;
        return this;
      }
      
      public bool HasSuggesteeId {
       get { return result.hasSuggesteeId; }
      }
      public global::bnet.protocol.EntityId SuggesteeId {
        get { return result.SuggesteeId; }
        set { SetSuggesteeId(value); }
      }
      public Builder SetSuggesteeId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggesteeId = true;
        result.suggesteeId_ = value;
        return this;
      }
      public Builder SetSuggesteeId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSuggesteeId = true;
        result.suggesteeId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSuggesteeId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSuggesteeId &&
            result.suggesteeId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.suggesteeId_ = global::bnet.protocol.EntityId.CreateBuilder(result.suggesteeId_).MergeFrom(value).BuildPartial();
        } else {
          result.suggesteeId_ = value;
        }
        result.hasSuggesteeId = true;
        return this;
      }
      public Builder ClearSuggesteeId() {
        PrepareBuilder();
        result.hasSuggesteeId = false;
        result.suggesteeId_ = null;
        return this;
      }
      
      public bool HasSuggesterName {
        get { return result.hasSuggesterName; }
      }
      public string SuggesterName {
        get { return result.SuggesterName; }
        set { SetSuggesterName(value); }
      }
      public Builder SetSuggesterName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggesterName = true;
        result.suggesterName_ = value;
        return this;
      }
      public Builder ClearSuggesterName() {
        PrepareBuilder();
        result.hasSuggesterName = false;
        result.suggesterName_ = "";
        return this;
      }
      
      public bool HasSuggesteeName {
        get { return result.hasSuggesteeName; }
      }
      public string SuggesteeName {
        get { return result.SuggesteeName; }
        set { SetSuggesteeName(value); }
      }
      public Builder SetSuggesteeName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSuggesteeName = true;
        result.suggesteeName_ = value;
        return this;
      }
      public Builder ClearSuggesteeName() {
        PrepareBuilder();
        result.hasSuggesteeName = false;
        result.suggesteeName_ = "";
        return this;
      }
    }
    static Suggestion() {
      object.ReferenceEquals(global::bnet.protocol.invitation.InvitationTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class InvitationParams : pb::ExtendableMessage<InvitationParams, InvitationParams.Builder> {
    private InvitationParams() { }
    private static readonly InvitationParams defaultInstance = new InvitationParams().MakeReadOnly();
    private static readonly string[] _invitationParamsFieldNames = new string[] { "expiration_time", "invitation_message" };
    private static readonly uint[] _invitationParamsFieldTags = new uint[] { 16, 10 };
    public static InvitationParams DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InvitationParams DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InvitationParams ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.invitation.InvitationTypes.internal__static_bnet_protocol_invitation_InvitationParams__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InvitationParams, InvitationParams.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.invitation.InvitationTypes.internal__static_bnet_protocol_invitation_InvitationParams__FieldAccessorTable; }
    }
    
    public const int InvitationMessageFieldNumber = 1;
    private bool hasInvitationMessage;
    private string invitationMessage_ = "";
    public bool HasInvitationMessage {
      get { return hasInvitationMessage; }
    }
    public string InvitationMessage {
      get { return invitationMessage_; }
    }
    
    public const int ExpirationTimeFieldNumber = 2;
    private bool hasExpirationTime;
    private ulong expirationTime_;
    public bool HasExpirationTime {
      get { return hasExpirationTime; }
    }
    public ulong ExpirationTime {
      get { return expirationTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!ExtensionsAreInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _invitationParamsFieldNames;
      pb::ExtendableMessage<InvitationParams, InvitationParams.Builder>.ExtensionWriter extensionWriter = CreateExtensionWriter(this);
      if (hasInvitationMessage) {
        output.WriteString(1, field_names[1], InvitationMessage);
      }
      if (hasExpirationTime) {
        output.WriteUInt64(2, field_names[0], ExpirationTime);
      }
      extensionWriter.WriteUntil(10001, output);
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasInvitationMessage) {
          size += pb::CodedOutputStream.ComputeStringSize(1, InvitationMessage);
        }
        if (hasExpirationTime) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ExpirationTime);
        }
        size += ExtensionsSerializedSize;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static InvitationParams ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InvitationParams ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InvitationParams ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InvitationParams ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InvitationParams ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InvitationParams ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InvitationParams ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InvitationParams ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InvitationParams ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InvitationParams ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InvitationParams MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InvitationParams prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::ExtendableBuilder<InvitationParams, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InvitationParams cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InvitationParams result;
      
      private InvitationParams PrepareBuilder() {
        if (resultIsReadOnly) {
          InvitationParams original = result;
          result = new InvitationParams();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InvitationParams MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.invitation.InvitationParams.Descriptor; }
      }
      
      public override InvitationParams DefaultInstanceForType {
        get { return global::bnet.protocol.invitation.InvitationParams.DefaultInstance; }
      }
      
      public override InvitationParams BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InvitationParams) {
          return MergeFrom((InvitationParams) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InvitationParams other) {
        if (other == global::bnet.protocol.invitation.InvitationParams.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasInvitationMessage) {
          InvitationMessage = other.InvitationMessage;
        }
        if (other.HasExpirationTime) {
          ExpirationTime = other.ExpirationTime;
        }
          this.MergeExtensionFields(other);
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_invitationParamsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _invitationParamsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasInvitationMessage = input.ReadString(ref result.invitationMessage_);
              break;
            }
            case 16: {
              result.hasExpirationTime = input.ReadUInt64(ref result.expirationTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasInvitationMessage {
        get { return result.hasInvitationMessage; }
      }
      public string InvitationMessage {
        get { return result.InvitationMessage; }
        set { SetInvitationMessage(value); }
      }
      public Builder SetInvitationMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInvitationMessage = true;
        result.invitationMessage_ = value;
        return this;
      }
      public Builder ClearInvitationMessage() {
        PrepareBuilder();
        result.hasInvitationMessage = false;
        result.invitationMessage_ = "";
        return this;
      }
      
      public bool HasExpirationTime {
        get { return result.hasExpirationTime; }
      }
      public ulong ExpirationTime {
        get { return result.ExpirationTime; }
        set { SetExpirationTime(value); }
      }
      public Builder SetExpirationTime(ulong value) {
        PrepareBuilder();
        result.hasExpirationTime = true;
        result.expirationTime_ = value;
        return this;
      }
      public Builder ClearExpirationTime() {
        PrepareBuilder();
        result.hasExpirationTime = false;
        result.expirationTime_ = 0UL;
        return this;
      }
    }
    static InvitationParams() {
      object.ReferenceEquals(global::bnet.protocol.invitation.InvitationTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SendInvitationRequest : pb::GeneratedMessage<SendInvitationRequest, SendInvitationRequest.Builder> {
    private SendInvitationRequest() { }
    private static readonly SendInvitationRequest defaultInstance = new SendInvitationRequest().MakeReadOnly();
    private static readonly string[] _sendInvitationRequestFieldNames = new string[] { "agent_identity", "params", "target_id" };
    private static readonly uint[] _sendInvitationRequestFieldTags = new uint[] { 10, 26, 18 };
    public static SendInvitationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendInvitationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendInvitationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.invitation.InvitationTypes.internal__static_bnet_protocol_invitation_SendInvitationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendInvitationRequest, SendInvitationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.invitation.InvitationTypes.internal__static_bnet_protocol_invitation_SendInvitationRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdentityFieldNumber = 1;
    private bool hasAgentIdentity;
    private global::bnet.protocol.Identity agentIdentity_;
    public bool HasAgentIdentity {
      get { return hasAgentIdentity; }
    }
    public global::bnet.protocol.Identity AgentIdentity {
      get { return agentIdentity_ ?? global::bnet.protocol.Identity.DefaultInstance; }
    }
    
    public const int TargetIdFieldNumber = 2;
    private bool hasTargetId;
    private global::bnet.protocol.EntityId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bnet.protocol.EntityId TargetId {
      get { return targetId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ParamsFieldNumber = 3;
    private bool hasParams;
    private global::bnet.protocol.invitation.InvitationParams params_;
    public bool HasParams {
      get { return hasParams; }
    }
    public global::bnet.protocol.invitation.InvitationParams Params {
      get { return params_ ?? global::bnet.protocol.invitation.InvitationParams.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTargetId) return false;
        if (!hasParams) return false;
        if (HasAgentIdentity) {
          if (!AgentIdentity.IsInitialized) return false;
        }
        if (!TargetId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sendInvitationRequestFieldNames;
      if (hasAgentIdentity) {
        output.WriteMessage(1, field_names[0], AgentIdentity);
      }
      if (hasTargetId) {
        output.WriteMessage(2, field_names[2], TargetId);
      }
      if (hasParams) {
        output.WriteMessage(3, field_names[1], Params);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentIdentity) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentIdentity);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, TargetId);
        }
        if (hasParams) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Params);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendInvitationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendInvitationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendInvitationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SendInvitationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendInvitationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendInvitationRequest result;
      
      private SendInvitationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SendInvitationRequest original = result;
          result = new SendInvitationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendInvitationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.invitation.SendInvitationRequest.Descriptor; }
      }
      
      public override SendInvitationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.invitation.SendInvitationRequest.DefaultInstance; }
      }
      
      public override SendInvitationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendInvitationRequest) {
          return MergeFrom((SendInvitationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendInvitationRequest other) {
        if (other == global::bnet.protocol.invitation.SendInvitationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentIdentity) {
          MergeAgentIdentity(other.AgentIdentity);
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        if (other.HasParams) {
          MergeParams(other.Params);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendInvitationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendInvitationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.Identity.Builder subBuilder = global::bnet.protocol.Identity.CreateBuilder();
              if (result.hasAgentIdentity) {
                subBuilder.MergeFrom(AgentIdentity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentIdentity = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.invitation.InvitationParams.Builder subBuilder = global::bnet.protocol.invitation.InvitationParams.CreateBuilder();
              if (result.hasParams) {
                subBuilder.MergeFrom(Params);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Params = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentIdentity {
       get { return result.hasAgentIdentity; }
      }
      public global::bnet.protocol.Identity AgentIdentity {
        get { return result.AgentIdentity; }
        set { SetAgentIdentity(value); }
      }
      public Builder SetAgentIdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentIdentity = true;
        result.agentIdentity_ = value;
        return this;
      }
      public Builder SetAgentIdentity(global::bnet.protocol.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentIdentity = true;
        result.agentIdentity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentIdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentIdentity &&
            result.agentIdentity_ != global::bnet.protocol.Identity.DefaultInstance) {
            result.agentIdentity_ = global::bnet.protocol.Identity.CreateBuilder(result.agentIdentity_).MergeFrom(value).BuildPartial();
        } else {
          result.agentIdentity_ = value;
        }
        result.hasAgentIdentity = true;
        return this;
      }
      public Builder ClearAgentIdentity() {
        PrepareBuilder();
        result.hasAgentIdentity = false;
        result.agentIdentity_ = null;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bnet.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
      
      public bool HasParams {
       get { return result.hasParams; }
      }
      public global::bnet.protocol.invitation.InvitationParams Params {
        get { return result.Params; }
        set { SetParams(value); }
      }
      public Builder SetParams(global::bnet.protocol.invitation.InvitationParams value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParams = true;
        result.params_ = value;
        return this;
      }
      public Builder SetParams(global::bnet.protocol.invitation.InvitationParams.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasParams = true;
        result.params_ = builderForValue.Build();
        return this;
      }
      public Builder MergeParams(global::bnet.protocol.invitation.InvitationParams value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasParams &&
            result.params_ != global::bnet.protocol.invitation.InvitationParams.DefaultInstance) {
            result.params_ = global::bnet.protocol.invitation.InvitationParams.CreateBuilder(result.params_).MergeFrom(value).BuildPartial();
        } else {
          result.params_ = value;
        }
        result.hasParams = true;
        return this;
      }
      public Builder ClearParams() {
        PrepareBuilder();
        result.hasParams = false;
        result.params_ = null;
        return this;
      }
    }
    static SendInvitationRequest() {
      object.ReferenceEquals(global::bnet.protocol.invitation.InvitationTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SendInvitationResponse : pb::GeneratedMessage<SendInvitationResponse, SendInvitationResponse.Builder> {
    private SendInvitationResponse() { }
    private static readonly SendInvitationResponse defaultInstance = new SendInvitationResponse().MakeReadOnly();
    private static readonly string[] _sendInvitationResponseFieldNames = new string[] { "invitation" };
    private static readonly uint[] _sendInvitationResponseFieldTags = new uint[] { 18 };
    public static SendInvitationResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SendInvitationResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SendInvitationResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.invitation.InvitationTypes.internal__static_bnet_protocol_invitation_SendInvitationResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SendInvitationResponse, SendInvitationResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.invitation.InvitationTypes.internal__static_bnet_protocol_invitation_SendInvitationResponse__FieldAccessorTable; }
    }
    
    public const int InvitationFieldNumber = 2;
    private bool hasInvitation;
    private global::bnet.protocol.invitation.Invitation invitation_;
    public bool HasInvitation {
      get { return hasInvitation; }
    }
    public global::bnet.protocol.invitation.Invitation Invitation {
      get { return invitation_ ?? global::bnet.protocol.invitation.Invitation.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasInvitation) {
          if (!Invitation.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _sendInvitationResponseFieldNames;
      if (hasInvitation) {
        output.WriteMessage(2, field_names[0], Invitation);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasInvitation) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Invitation);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SendInvitationResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SendInvitationResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SendInvitationResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SendInvitationResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SendInvitationResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SendInvitationResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SendInvitationResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SendInvitationResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SendInvitationResponse result;
      
      private SendInvitationResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SendInvitationResponse original = result;
          result = new SendInvitationResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SendInvitationResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.invitation.SendInvitationResponse.Descriptor; }
      }
      
      public override SendInvitationResponse DefaultInstanceForType {
        get { return global::bnet.protocol.invitation.SendInvitationResponse.DefaultInstance; }
      }
      
      public override SendInvitationResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SendInvitationResponse) {
          return MergeFrom((SendInvitationResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SendInvitationResponse other) {
        if (other == global::bnet.protocol.invitation.SendInvitationResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasInvitation) {
          MergeInvitation(other.Invitation);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sendInvitationResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sendInvitationResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              global::bnet.protocol.invitation.Invitation.Builder subBuilder = global::bnet.protocol.invitation.Invitation.CreateBuilder();
              if (result.hasInvitation) {
                subBuilder.MergeFrom(Invitation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Invitation = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasInvitation {
       get { return result.hasInvitation; }
      }
      public global::bnet.protocol.invitation.Invitation Invitation {
        get { return result.Invitation; }
        set { SetInvitation(value); }
      }
      public Builder SetInvitation(global::bnet.protocol.invitation.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = value;
        return this;
      }
      public Builder SetInvitation(global::bnet.protocol.invitation.Invitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInvitation(global::bnet.protocol.invitation.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInvitation &&
            result.invitation_ != global::bnet.protocol.invitation.Invitation.DefaultInstance) {
            result.invitation_ = global::bnet.protocol.invitation.Invitation.CreateBuilder(result.invitation_).MergeFrom(value).BuildPartial();
        } else {
          result.invitation_ = value;
        }
        result.hasInvitation = true;
        return this;
      }
      public Builder ClearInvitation() {
        PrepareBuilder();
        result.hasInvitation = false;
        result.invitation_ = null;
        return this;
      }
    }
    static SendInvitationResponse() {
      object.ReferenceEquals(global::bnet.protocol.invitation.InvitationTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UpdateInvitationRequest : pb::GeneratedMessage<UpdateInvitationRequest, UpdateInvitationRequest.Builder> {
    private UpdateInvitationRequest() { }
    private static readonly UpdateInvitationRequest defaultInstance = new UpdateInvitationRequest().MakeReadOnly();
    private static readonly string[] _updateInvitationRequestFieldNames = new string[] { "agent_identity", "invitation_id", "params" };
    private static readonly uint[] _updateInvitationRequestFieldTags = new uint[] { 10, 17, 26 };
    public static UpdateInvitationRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateInvitationRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateInvitationRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.invitation.InvitationTypes.internal__static_bnet_protocol_invitation_UpdateInvitationRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateInvitationRequest, UpdateInvitationRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.invitation.InvitationTypes.internal__static_bnet_protocol_invitation_UpdateInvitationRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdentityFieldNumber = 1;
    private bool hasAgentIdentity;
    private global::bnet.protocol.Identity agentIdentity_;
    public bool HasAgentIdentity {
      get { return hasAgentIdentity; }
    }
    public global::bnet.protocol.Identity AgentIdentity {
      get { return agentIdentity_ ?? global::bnet.protocol.Identity.DefaultInstance; }
    }
    
    public const int InvitationIdFieldNumber = 2;
    private bool hasInvitationId;
    private ulong invitationId_;
    public bool HasInvitationId {
      get { return hasInvitationId; }
    }
    public ulong InvitationId {
      get { return invitationId_; }
    }
    
    public const int ParamsFieldNumber = 3;
    private bool hasParams;
    private global::bnet.protocol.invitation.InvitationParams params_;
    public bool HasParams {
      get { return hasParams; }
    }
    public global::bnet.protocol.invitation.InvitationParams Params {
      get { return params_ ?? global::bnet.protocol.invitation.InvitationParams.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasInvitationId) return false;
        if (!hasParams) return false;
        if (HasAgentIdentity) {
          if (!AgentIdentity.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateInvitationRequestFieldNames;
      if (hasAgentIdentity) {
        output.WriteMessage(1, field_names[0], AgentIdentity);
      }
      if (hasInvitationId) {
        output.WriteFixed64(2, field_names[1], InvitationId);
      }
      if (hasParams) {
        output.WriteMessage(3, field_names[2], Params);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentIdentity) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentIdentity);
        }
        if (hasInvitationId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(2, InvitationId);
        }
        if (hasParams) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Params);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateInvitationRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateInvitationRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateInvitationRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateInvitationRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateInvitationRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateInvitationRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateInvitationRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateInvitationRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateInvitationRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateInvitationRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateInvitationRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateInvitationRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateInvitationRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateInvitationRequest result;
      
      private UpdateInvitationRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateInvitationRequest original = result;
          result = new UpdateInvitationRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateInvitationRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.invitation.UpdateInvitationRequest.Descriptor; }
      }
      
      public override UpdateInvitationRequest DefaultInstanceForType {
        get { return global::bnet.protocol.invitation.UpdateInvitationRequest.DefaultInstance; }
      }
      
      public override UpdateInvitationRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateInvitationRequest) {
          return MergeFrom((UpdateInvitationRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateInvitationRequest other) {
        if (other == global::bnet.protocol.invitation.UpdateInvitationRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentIdentity) {
          MergeAgentIdentity(other.AgentIdentity);
        }
        if (other.HasInvitationId) {
          InvitationId = other.InvitationId;
        }
        if (other.HasParams) {
          MergeParams(other.Params);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateInvitationRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateInvitationRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.Identity.Builder subBuilder = global::bnet.protocol.Identity.CreateBuilder();
              if (result.hasAgentIdentity) {
                subBuilder.MergeFrom(AgentIdentity);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentIdentity = subBuilder.BuildPartial();
              break;
            }
            case 17: {
              result.hasInvitationId = input.ReadFixed64(ref result.invitationId_);
              break;
            }
            case 26: {
              global::bnet.protocol.invitation.InvitationParams.Builder subBuilder = global::bnet.protocol.invitation.InvitationParams.CreateBuilder();
              if (result.hasParams) {
                subBuilder.MergeFrom(Params);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Params = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentIdentity {
       get { return result.hasAgentIdentity; }
      }
      public global::bnet.protocol.Identity AgentIdentity {
        get { return result.AgentIdentity; }
        set { SetAgentIdentity(value); }
      }
      public Builder SetAgentIdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentIdentity = true;
        result.agentIdentity_ = value;
        return this;
      }
      public Builder SetAgentIdentity(global::bnet.protocol.Identity.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentIdentity = true;
        result.agentIdentity_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentIdentity(global::bnet.protocol.Identity value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentIdentity &&
            result.agentIdentity_ != global::bnet.protocol.Identity.DefaultInstance) {
            result.agentIdentity_ = global::bnet.protocol.Identity.CreateBuilder(result.agentIdentity_).MergeFrom(value).BuildPartial();
        } else {
          result.agentIdentity_ = value;
        }
        result.hasAgentIdentity = true;
        return this;
      }
      public Builder ClearAgentIdentity() {
        PrepareBuilder();
        result.hasAgentIdentity = false;
        result.agentIdentity_ = null;
        return this;
      }
      
      public bool HasInvitationId {
        get { return result.hasInvitationId; }
      }
      public ulong InvitationId {
        get { return result.InvitationId; }
        set { SetInvitationId(value); }
      }
      public Builder SetInvitationId(ulong value) {
        PrepareBuilder();
        result.hasInvitationId = true;
        result.invitationId_ = value;
        return this;
      }
      public Builder ClearInvitationId() {
        PrepareBuilder();
        result.hasInvitationId = false;
        result.invitationId_ = 0;
        return this;
      }
      
      public bool HasParams {
       get { return result.hasParams; }
      }
      public global::bnet.protocol.invitation.InvitationParams Params {
        get { return result.Params; }
        set { SetParams(value); }
      }
      public Builder SetParams(global::bnet.protocol.invitation.InvitationParams value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParams = true;
        result.params_ = value;
        return this;
      }
      public Builder SetParams(global::bnet.protocol.invitation.InvitationParams.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasParams = true;
        result.params_ = builderForValue.Build();
        return this;
      }
      public Builder MergeParams(global::bnet.protocol.invitation.InvitationParams value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasParams &&
            result.params_ != global::bnet.protocol.invitation.InvitationParams.DefaultInstance) {
            result.params_ = global::bnet.protocol.invitation.InvitationParams.CreateBuilder(result.params_).MergeFrom(value).BuildPartial();
        } else {
          result.params_ = value;
        }
        result.hasParams = true;
        return this;
      }
      public Builder ClearParams() {
        PrepareBuilder();
        result.hasParams = false;
        result.params_ = null;
        return this;
      }
    }
    static UpdateInvitationRequest() {
      object.ReferenceEquals(global::bnet.protocol.invitation.InvitationTypes.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GenericRequest : pb::GeneratedMessage<GenericRequest, GenericRequest.Builder> {
    private GenericRequest() { }
    private static readonly GenericRequest defaultInstance = new GenericRequest().MakeReadOnly();
    private static readonly string[] _genericRequestFieldNames = new string[] { "agent_id", "desired_role", "invitation_id", "invitee_name", "inviter_name", "previous_role", "target_id" };
    private static readonly uint[] _genericRequestFieldTags = new uint[] { 10, 58, 25, 34, 42, 50, 18 };
    public static GenericRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GenericRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GenericRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.invitation.InvitationTypes.internal__static_bnet_protocol_invitation_GenericRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GenericRequest, GenericRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.invitation.InvitationTypes.internal__static_bnet_protocol_invitation_GenericRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int TargetIdFieldNumber = 2;
    private bool hasTargetId;
    private global::bnet.protocol.EntityId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bnet.protocol.EntityId TargetId {
      get { return targetId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int InvitationIdFieldNumber = 3;
    private bool hasInvitationId;
    private ulong invitationId_;
    public bool HasInvitationId {
      get { return hasInvitationId; }
    }
    public ulong InvitationId {
      get { return invitationId_; }
    }
    
    public const int InviteeNameFieldNumber = 4;
    private bool hasInviteeName;
    private string inviteeName_ = "";
    public bool HasInviteeName {
      get { return hasInviteeName; }
    }
    public string InviteeName {
      get { return inviteeName_; }
    }
    
    public const int InviterNameFieldNumber = 5;
    private bool hasInviterName;
    private string inviterName_ = "";
    public bool HasInviterName {
      get { return hasInviterName; }
    }
    public string InviterName {
      get { return inviterName_; }
    }
    
    public const int PreviousRoleFieldNumber = 6;
    private int previousRoleMemoizedSerializedSize;
    private pbc::PopsicleList<uint> previousRole_ = new pbc::PopsicleList<uint>();
    public scg::IList<uint> PreviousRoleList {
      get { return pbc::Lists.AsReadOnly(previousRole_); }
    }
    public int PreviousRoleCount {
      get { return previousRole_.Count; }
    }
    public uint GetPreviousRole(int index) {
      return previousRole_[index];
    }
    
    public const int DesiredRoleFieldNumber = 7;
    private int desiredRoleMemoizedSerializedSize;
    private pbc::PopsicleList<uint> desiredRole_ = new pbc::PopsicleList<uint>();
    public scg::IList<uint> DesiredRoleList {
      get { return pbc::Lists.AsReadOnly(desiredRole_); }
    }
    public int DesiredRoleCount {
      get { return desiredRole_.Count; }
    }
    public uint GetDesiredRole(int index) {
      return desiredRole_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasInvitationId) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (HasTargetId) {
          if (!TargetId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _genericRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasTargetId) {
        output.WriteMessage(2, field_names[6], TargetId);
      }
      if (hasInvitationId) {
        output.WriteFixed64(3, field_names[2], InvitationId);
      }
      if (hasInviteeName) {
        output.WriteString(4, field_names[3], InviteeName);
      }
      if (hasInviterName) {
        output.WriteString(5, field_names[4], InviterName);
      }
      if (previousRole_.Count > 0) {
        output.WritePackedUInt32Array(6, field_names[5], previousRoleMemoizedSerializedSize, previousRole_);
      }
      if (desiredRole_.Count > 0) {
        output.WritePackedUInt32Array(7, field_names[1], desiredRoleMemoizedSerializedSize, desiredRole_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, TargetId);
        }
        if (hasInvitationId) {
          size += pb::CodedOutputStream.ComputeFixed64Size(3, InvitationId);
        }
        if (hasInviteeName) {
          size += pb::CodedOutputStream.ComputeStringSize(4, InviteeName);
        }
        if (hasInviterName) {
          size += pb::CodedOutputStream.ComputeStringSize(5, InviterName);
        }
        {
          int dataSize = 0;
          foreach (uint element in PreviousRoleList) {
            dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
          }
          size += dataSize;
          if (previousRole_.Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
          }
          previousRoleMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          foreach (uint element in DesiredRoleList) {
            dataSize += pb::CodedOutputStream.ComputeUInt32SizeNoTag(element);
          }
          size += dataSize;
          if (desiredRole_.Count != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32SizeNoTag(dataSize);
          }
          desiredRoleMemoizedSerializedSize = dataSize;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GenericRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GenericRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GenericRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GenericRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GenericRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GenericRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GenericRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GenericRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GenericRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GenericRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GenericRequest MakeReadOnly() {
      previousRole_.MakeReadOnly();
      desiredRole_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GenericRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GenericRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GenericRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GenericRequest result;
      
      private GenericRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GenericRequest original = result;
          result = new GenericRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GenericRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.invitation.GenericRequest.Descriptor; }
      }
      
      public override GenericRequest DefaultInstanceForType {
        get { return global::bnet.protocol.invitation.GenericRequest.DefaultInstance; }
      }
      
      public override GenericRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GenericRequest) {
          return MergeFrom((GenericRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GenericRequest other) {
        if (other == global::bnet.protocol.invitation.GenericRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        if (other.HasInvitationId) {
          InvitationId = other.InvitationId;
        }
        if (other.HasInviteeName) {
          InviteeName = other.InviteeName;
        }
        if (other.HasInviterName) {
          InviterName = other.InviterName;
        }
        if (other.previousRole_.Count != 0) {
          result.previousRole_.Add(other.previousRole_);
        }
        if (other.desiredRole_.Count != 0) {
          result.desiredRole_.Add(other.desiredRole_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_genericRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _genericRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
            case 25: {
              result.hasInvitationId = input.ReadFixed64(ref result.invitationId_);
              break;
            }
            case 34: {
              result.hasInviteeName = input.ReadString(ref result.inviteeName_);
              break;
            }
            case 42: {
              result.hasInviterName = input.ReadString(ref result.inviterName_);
              break;
            }
            case 50:
            case 48: {
              input.ReadUInt32Array(tag, field_name, result.previousRole_);
              break;
            }
            case 58:
            case 56: {
              input.ReadUInt32Array(tag, field_name, result.desiredRole_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bnet.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
      
      public bool HasInvitationId {
        get { return result.hasInvitationId; }
      }
      public ulong InvitationId {
        get { return result.InvitationId; }
        set { SetInvitationId(value); }
      }
      public Builder SetInvitationId(ulong value) {
        PrepareBuilder();
        result.hasInvitationId = true;
        result.invitationId_ = value;
        return this;
      }
      public Builder ClearInvitationId() {
        PrepareBuilder();
        result.hasInvitationId = false;
        result.invitationId_ = 0;
        return this;
      }
      
      public bool HasInviteeName {
        get { return result.hasInviteeName; }
      }
      public string InviteeName {
        get { return result.InviteeName; }
        set { SetInviteeName(value); }
      }
      public Builder SetInviteeName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInviteeName = true;
        result.inviteeName_ = value;
        return this;
      }
      public Builder ClearInviteeName() {
        PrepareBuilder();
        result.hasInviteeName = false;
        result.inviteeName_ = "";
        return this;
      }
      
      public bool HasInviterName {
        get { return result.hasInviterName; }
      }
      public string InviterName {
        get { return result.InviterName; }
        set { SetInviterName(value); }
      }
      public Builder SetInviterName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInviterName = true;
        result.inviterName_ = value;
        return this;
      }
      public Builder ClearInviterName() {
        PrepareBuilder();
        result.hasInviterName = false;
        result.inviterName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<uint> PreviousRoleList {
        get { return PrepareBuilder().previousRole_; }
      }
      public int PreviousRoleCount {
        get { return result.PreviousRoleCount; }
      }
      public uint GetPreviousRole(int index) {
        return result.GetPreviousRole(index);
      }
      public Builder SetPreviousRole(int index, uint value) {
        PrepareBuilder();
        result.previousRole_[index] = value;
        return this;
      }
      public Builder AddPreviousRole(uint value) {
        PrepareBuilder();
        result.previousRole_.Add(value);
        return this;
      }
      public Builder AddRangePreviousRole(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.previousRole_.Add(values);
        return this;
      }
      public Builder ClearPreviousRole() {
        PrepareBuilder();
        result.previousRole_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<uint> DesiredRoleList {
        get { return PrepareBuilder().desiredRole_; }
      }
      public int DesiredRoleCount {
        get { return result.DesiredRoleCount; }
      }
      public uint GetDesiredRole(int index) {
        return result.GetDesiredRole(index);
      }
      public Builder SetDesiredRole(int index, uint value) {
        PrepareBuilder();
        result.desiredRole_[index] = value;
        return this;
      }
      public Builder AddDesiredRole(uint value) {
        PrepareBuilder();
        result.desiredRole_.Add(value);
        return this;
      }
      public Builder AddRangeDesiredRole(scg::IEnumerable<uint> values) {
        PrepareBuilder();
        result.desiredRole_.Add(values);
        return this;
      }
      public Builder ClearDesiredRole() {
        PrepareBuilder();
        result.desiredRole_.Clear();
        return this;
      }
    }
    static GenericRequest() {
      object.ReferenceEquals(global::bnet.protocol.invitation.InvitationTypes.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
