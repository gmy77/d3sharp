// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace bnet.protocol.friends {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static partial class FriendsService {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_friends_SubscribeToFriendsRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.SubscribeToFriendsRequest, global::bnet.protocol.friends.SubscribeToFriendsRequest.Builder> internal__static_bnet_protocol_friends_SubscribeToFriendsRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_friends_SubscribeToFriendsResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.SubscribeToFriendsResponse, global::bnet.protocol.friends.SubscribeToFriendsResponse.Builder> internal__static_bnet_protocol_friends_SubscribeToFriendsResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_friends_UnsubscribeToFriendsRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.UnsubscribeToFriendsRequest, global::bnet.protocol.friends.UnsubscribeToFriendsRequest.Builder> internal__static_bnet_protocol_friends_UnsubscribeToFriendsRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_friends_GenericFriendRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.GenericFriendRequest, global::bnet.protocol.friends.GenericFriendRequest.Builder> internal__static_bnet_protocol_friends_GenericFriendRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_friends_GenericFriendResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.GenericFriendResponse, global::bnet.protocol.friends.GenericFriendResponse.Builder> internal__static_bnet_protocol_friends_GenericFriendResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_friends_AssignRoleRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.AssignRoleRequest, global::bnet.protocol.friends.AssignRoleRequest.Builder> internal__static_bnet_protocol_friends_AssignRoleRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_friends_ViewFriendsRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.ViewFriendsRequest, global::bnet.protocol.friends.ViewFriendsRequest.Builder> internal__static_bnet_protocol_friends_ViewFriendsRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_friends_ViewFriendsResponse__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.ViewFriendsResponse, global::bnet.protocol.friends.ViewFriendsResponse.Builder> internal__static_bnet_protocol_friends_ViewFriendsResponse__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_friends_UpdateFriendStateRequest__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.UpdateFriendStateRequest, global::bnet.protocol.friends.UpdateFriendStateRequest.Builder> internal__static_bnet_protocol_friends_UpdateFriendStateRequest__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_friends_FriendNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.FriendNotification, global::bnet.protocol.friends.FriendNotification.Builder> internal__static_bnet_protocol_friends_FriendNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_friends_UpdateFriendStateNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.UpdateFriendStateNotification, global::bnet.protocol.friends.UpdateFriendStateNotification.Builder> internal__static_bnet_protocol_friends_UpdateFriendStateNotification__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_bnet_protocol_friends_InvitationNotification__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.InvitationNotification, global::bnet.protocol.friends.InvitationNotification.Builder> internal__static_bnet_protocol_friends_InvitationNotification__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static FriendsService() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "ChpibmV0L2ZyaWVuZHNfc2VydmljZS5wcm90bxIVYm5ldC5wcm90b2NvbC5m" + 
            "cmllbmRzGhhibmV0L2ZyaWVuZHNfdHlwZXMucHJvdG8aG2JuZXQvaW52aXRh" + 
            "dGlvbl90eXBlcy5wcm90bxoTYm5ldC9yb2xlX3NldC5wcm90bxoUYm5ldC9h" + 
            "dHRyaWJ1dGUucHJvdG8aEWJuZXQvZW50aXR5LnByb3RvGg5ibmV0L3JwYy5w" + 
            "cm90byJZChlTdWJzY3JpYmVUb0ZyaWVuZHNSZXF1ZXN0EikKCGFnZW50X2lk" + 
            "GAEgASgLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJZBIRCglvYmplY3RfaWQY" + 
            "AiACKAQiyAIKGlN1YnNjcmliZVRvRnJpZW5kc1Jlc3BvbnNlEhMKC21heF9m" + 
            "cmllbmRzGAEgASgNEiAKGG1heF9yZWNlaXZlZF9pbnZpdGF0aW9ucxgCIAEo" + 
            "DRIcChRtYXhfc2VudF9pbnZpdGF0aW9ucxgDIAEoDRIhCgRyb2xlGAQgAygL" + 
            "MhMuYm5ldC5wcm90b2NvbC5Sb2xlEi4KB2ZyaWVuZHMYBSADKAsyHS5ibmV0" + 
            "LnByb3RvY29sLmZyaWVuZHMuRnJpZW5kEj4KEHNlbnRfaW52aXRhdGlvbnMY" + 
            "BiADKAsyJC5ibmV0LnByb3RvY29sLmludml0YXRpb24uSW52aXRhdGlvbhJC" + 
            "ChRyZWNlaXZlZF9pbnZpdGF0aW9ucxgHIAMoCzIkLmJuZXQucHJvdG9jb2wu" + 
            "aW52aXRhdGlvbi5JbnZpdGF0aW9uIlsKG1Vuc3Vic2NyaWJlVG9GcmllbmRz" + 
            "UmVxdWVzdBIpCghhZ2VudF9pZBgBIAEoCzIXLmJuZXQucHJvdG9jb2wuRW50" + 
            "aXR5SWQSEQoJb2JqZWN0X2lkGAIgASgEIm0KFEdlbmVyaWNGcmllbmRSZXF1" + 
            "ZXN0EikKCGFnZW50X2lkGAEgASgLMhcuYm5ldC5wcm90b2NvbC5FbnRpdHlJ" + 
            "ZBIqCgl0YXJnZXRfaWQYAiACKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlk" + 
            "Ik0KFUdlbmVyaWNGcmllbmRSZXNwb25zZRI0Cg10YXJnZXRfZnJpZW5kGAEg" + 
            "ASgLMh0uYm5ldC5wcm90b2NvbC5mcmllbmRzLkZyaWVuZCJ4ChFBc3NpZ25S" + 
            "b2xlUmVxdWVzdBIpCghhZ2VudF9pZBgBIAEoCzIXLmJuZXQucHJvdG9jb2wu" + 
            "RW50aXR5SWQSKgoJdGFyZ2V0X2lkGAIgAigLMhcuYm5ldC5wcm90b2NvbC5F" + 
            "bnRpdHlJZBIMCgRyb2xlGAMgAygFItcBChJWaWV3RnJpZW5kc1JlcXVlc3QS" + 
            "KQoIYWdlbnRfaWQYASABKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlkEioK" + 
            "CXRhcmdldF9pZBgCIAIoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQSOAoG" + 
            "ZmlsdGVyGAMgAigLMiguYm5ldC5wcm90b2NvbC5hdHRyaWJ1dGUuQXR0cmli" + 
            "dXRlRmlsdGVyEhYKC3N0YXJ0X2luZGV4GAQgASgNOgEwEhgKC21heF9yZXN1" + 
            "bHRzGAUgASgNOgMxMDAiXAoTVmlld0ZyaWVuZHNSZXNwb25zZRIuCgdmcmll" + 
            "bmRzGAEgAygLMh0uYm5ldC5wcm90b2NvbC5mcmllbmRzLkZyaWVuZBIVCg10" + 
            "b3RhbF9yZXN1bHRzGAIgASgNIsIBChhVcGRhdGVGcmllbmRTdGF0ZVJlcXVl" + 
            "c3QSKQoIYWdlbnRfaWQYASABKAsyFy5ibmV0LnByb3RvY29sLkVudGl0eUlk" + 
            "EioKCXRhcmdldF9pZBgCIAIoCzIXLmJuZXQucHJvdG9jb2wuRW50aXR5SWQS" + 
            "NQoJYXR0cmlidXRlGAMgAygLMiIuYm5ldC5wcm90b2NvbC5hdHRyaWJ1dGUu" + 
            "QXR0cmlidXRlEhgKEGF0dHJpYnV0ZXNfZXBvY2gYBCABKAQidQoSRnJpZW5k" + 
            "Tm90aWZpY2F0aW9uEi0KBnRhcmdldBgBIAIoCzIdLmJuZXQucHJvdG9jb2wu" + 
            "ZnJpZW5kcy5GcmllbmQSMAoPZ2FtZV9hY2NvdW50X2lkGAIgASgLMhcuYm5l" + 
            "dC5wcm90b2NvbC5FbnRpdHlJZCKIAQodVXBkYXRlRnJpZW5kU3RhdGVOb3Rp" + 
            "ZmljYXRpb24SNQoOY2hhbmdlZF9mcmllbmQYASACKAsyHS5ibmV0LnByb3Rv" + 
            "Y29sLmZyaWVuZHMuRnJpZW5kEjAKD2dhbWVfYWNjb3VudF9pZBgCIAEoCzIX" + 
            "LmJuZXQucHJvdG9jb2wuRW50aXR5SWQilwEKFkludml0YXRpb25Ob3RpZmlj" + 
            "YXRpb24SOAoKaW52aXRhdGlvbhgBIAIoCzIkLmJuZXQucHJvdG9jb2wuaW52" + 
            "aXRhdGlvbi5JbnZpdGF0aW9uEjAKD2dhbWVfYWNjb3VudF9pZBgCIAEoCzIX" + 
            "LmJuZXQucHJvdG9jb2wuRW50aXR5SWQSEQoGcmVhc29uGAMgASgNOgEwMtwI" + 
            "Cg5GcmllbmRzU2VydmljZRJ/ChJTdWJzY3JpYmVUb0ZyaWVuZHMSMC5ibmV0" + 
            "LnByb3RvY29sLmZyaWVuZHMuU3Vic2NyaWJlVG9GcmllbmRzUmVxdWVzdBox" + 
            "LmJuZXQucHJvdG9jb2wuZnJpZW5kcy5TdWJzY3JpYmVUb0ZyaWVuZHNSZXNw" + 
            "b25zZSIEgLUYARJeCg5TZW5kSW52aXRhdGlvbhIvLmJuZXQucHJvdG9jb2wu" + 
            "aW52aXRhdGlvbi5TZW5kSW52aXRhdGlvblJlcXVlc3QaFS5ibmV0LnByb3Rv" + 
            "Y29sLk5vRGF0YSIEgLUYAhJZChBBY2NlcHRJbnZpdGF0aW9uEiguYm5ldC5w" + 
            "cm90b2NvbC5pbnZpdGF0aW9uLkdlbmVyaWNSZXF1ZXN0GhUuYm5ldC5wcm90" + 
            "b2NvbC5Ob0RhdGEiBIC1GAMSWQoQUmV2b2tlSW52aXRhdGlvbhIoLmJuZXQu" + 
            "cHJvdG9jb2wuaW52aXRhdGlvbi5HZW5lcmljUmVxdWVzdBoVLmJuZXQucHJv" + 
            "dG9jb2wuTm9EYXRhIgSAtRgEEloKEURlY2xpbmVJbnZpdGF0aW9uEiguYm5l" + 
            "dC5wcm90b2NvbC5pbnZpdGF0aW9uLkdlbmVyaWNSZXF1ZXN0GhUuYm5ldC5w" + 
            "cm90b2NvbC5Ob0RhdGEiBIC1GAUSWQoQSWdub3JlSW52aXRhdGlvbhIoLmJu" + 
            "ZXQucHJvdG9jb2wuaW52aXRhdGlvbi5HZW5lcmljUmVxdWVzdBoVLmJuZXQu" + 
            "cHJvdG9jb2wuTm9EYXRhIgSAtRgGElMKCkFzc2lnblJvbGUSKC5ibmV0LnBy" + 
            "b3RvY29sLmZyaWVuZHMuQXNzaWduUm9sZVJlcXVlc3QaFS5ibmV0LnByb3Rv" + 
            "Y29sLk5vRGF0YSIEgLUYBxJvCgxSZW1vdmVGcmllbmQSKy5ibmV0LnByb3Rv" + 
            "Y29sLmZyaWVuZHMuR2VuZXJpY0ZyaWVuZFJlcXVlc3QaLC5ibmV0LnByb3Rv" + 
            "Y29sLmZyaWVuZHMuR2VuZXJpY0ZyaWVuZFJlc3BvbnNlIgSAtRgIEmoKC1Zp" + 
            "ZXdGcmllbmRzEikuYm5ldC5wcm90b2NvbC5mcmllbmRzLlZpZXdGcmllbmRz" + 
            "UmVxdWVzdBoqLmJuZXQucHJvdG9jb2wuZnJpZW5kcy5WaWV3RnJpZW5kc1Jl" + 
            "c3BvbnNlIgSAtRgJEmEKEVVwZGF0ZUZyaWVuZFN0YXRlEi8uYm5ldC5wcm90" + 
            "b2NvbC5mcmllbmRzLlVwZGF0ZUZyaWVuZFN0YXRlUmVxdWVzdBoVLmJuZXQu" + 
            "cHJvdG9jb2wuTm9EYXRhIgSAtRgKEmcKFFVuc3Vic2NyaWJlVG9GcmllbmRz" + 
            "EjIuYm5ldC5wcm90b2NvbC5mcmllbmRzLlVuc3Vic2NyaWJlVG9GcmllbmRz" + 
            "UmVxdWVzdBoVLmJuZXQucHJvdG9jb2wuTm9EYXRhIgSAtRgLMowGCg1Gcmll" + 
            "bmRzTm90aWZ5EmAKEU5vdGlmeUZyaWVuZEFkZGVkEikuYm5ldC5wcm90b2Nv" + 
            "bC5mcmllbmRzLkZyaWVuZE5vdGlmaWNhdGlvbhoaLmJuZXQucHJvdG9jb2wu" + 
            "Tk9fUkVTUE9OU0UiBIC1GAESYgoTTm90aWZ5RnJpZW5kUmVtb3ZlZBIpLmJu" + 
            "ZXQucHJvdG9jb2wuZnJpZW5kcy5GcmllbmROb3RpZmljYXRpb24aGi5ibmV0" + 
            "LnByb3RvY29sLk5PX1JFU1BPTlNFIgSAtRgCEnAKHU5vdGlmeVJlY2VpdmVk" + 
            "SW52aXRhdGlvbkFkZGVkEi0uYm5ldC5wcm90b2NvbC5mcmllbmRzLkludml0" + 
            "YXRpb25Ob3RpZmljYXRpb24aGi5ibmV0LnByb3RvY29sLk5PX1JFU1BPTlNF" + 
            "IgSAtRgDEnIKH05vdGlmeVJlY2VpdmVkSW52aXRhdGlvblJlbW92ZWQSLS5i" + 
            "bmV0LnByb3RvY29sLmZyaWVuZHMuSW52aXRhdGlvbk5vdGlmaWNhdGlvbhoa" + 
            "LmJuZXQucHJvdG9jb2wuTk9fUkVTUE9OU0UiBIC1GAQSbAoZTm90aWZ5U2Vu" + 
            "dEludml0YXRpb25BZGRlZBItLmJuZXQucHJvdG9jb2wuZnJpZW5kcy5JbnZp" + 
            "dGF0aW9uTm90aWZpY2F0aW9uGhouYm5ldC5wcm90b2NvbC5OT19SRVNQT05T" + 
            "RSIEgLUYBRJuChtOb3RpZnlTZW50SW52aXRhdGlvblJlbW92ZWQSLS5ibmV0" + 
            "LnByb3RvY29sLmZyaWVuZHMuSW52aXRhdGlvbk5vdGlmaWNhdGlvbhoaLmJu" + 
            "ZXQucHJvdG9jb2wuTk9fUkVTUE9OU0UiBIC1GAYScQoXTm90aWZ5VXBkYXRl" + 
            "RnJpZW5kU3RhdGUSNC5ibmV0LnByb3RvY29sLmZyaWVuZHMuVXBkYXRlRnJp" + 
            "ZW5kU3RhdGVOb3RpZmljYXRpb24aGi5ibmV0LnByb3RvY29sLk5PX1JFU1BP" + 
            "TlNFIgSAtRgHQgOAAQA=");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_bnet_protocol_friends_SubscribeToFriendsRequest__Descriptor = Descriptor.MessageTypes[0];
          internal__static_bnet_protocol_friends_SubscribeToFriendsRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.SubscribeToFriendsRequest, global::bnet.protocol.friends.SubscribeToFriendsRequest.Builder>(internal__static_bnet_protocol_friends_SubscribeToFriendsRequest__Descriptor,
                  new string[] { "AgentId", "ObjectId", });
          internal__static_bnet_protocol_friends_SubscribeToFriendsResponse__Descriptor = Descriptor.MessageTypes[1];
          internal__static_bnet_protocol_friends_SubscribeToFriendsResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.SubscribeToFriendsResponse, global::bnet.protocol.friends.SubscribeToFriendsResponse.Builder>(internal__static_bnet_protocol_friends_SubscribeToFriendsResponse__Descriptor,
                  new string[] { "MaxFriends", "MaxReceivedInvitations", "MaxSentInvitations", "Role", "Friends", "SentInvitations", "ReceivedInvitations", });
          internal__static_bnet_protocol_friends_UnsubscribeToFriendsRequest__Descriptor = Descriptor.MessageTypes[2];
          internal__static_bnet_protocol_friends_UnsubscribeToFriendsRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.UnsubscribeToFriendsRequest, global::bnet.protocol.friends.UnsubscribeToFriendsRequest.Builder>(internal__static_bnet_protocol_friends_UnsubscribeToFriendsRequest__Descriptor,
                  new string[] { "AgentId", "ObjectId", });
          internal__static_bnet_protocol_friends_GenericFriendRequest__Descriptor = Descriptor.MessageTypes[3];
          internal__static_bnet_protocol_friends_GenericFriendRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.GenericFriendRequest, global::bnet.protocol.friends.GenericFriendRequest.Builder>(internal__static_bnet_protocol_friends_GenericFriendRequest__Descriptor,
                  new string[] { "AgentId", "TargetId", });
          internal__static_bnet_protocol_friends_GenericFriendResponse__Descriptor = Descriptor.MessageTypes[4];
          internal__static_bnet_protocol_friends_GenericFriendResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.GenericFriendResponse, global::bnet.protocol.friends.GenericFriendResponse.Builder>(internal__static_bnet_protocol_friends_GenericFriendResponse__Descriptor,
                  new string[] { "TargetFriend", });
          internal__static_bnet_protocol_friends_AssignRoleRequest__Descriptor = Descriptor.MessageTypes[5];
          internal__static_bnet_protocol_friends_AssignRoleRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.AssignRoleRequest, global::bnet.protocol.friends.AssignRoleRequest.Builder>(internal__static_bnet_protocol_friends_AssignRoleRequest__Descriptor,
                  new string[] { "AgentId", "TargetId", "Role", });
          internal__static_bnet_protocol_friends_ViewFriendsRequest__Descriptor = Descriptor.MessageTypes[6];
          internal__static_bnet_protocol_friends_ViewFriendsRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.ViewFriendsRequest, global::bnet.protocol.friends.ViewFriendsRequest.Builder>(internal__static_bnet_protocol_friends_ViewFriendsRequest__Descriptor,
                  new string[] { "AgentId", "TargetId", "Filter", "StartIndex", "MaxResults", });
          internal__static_bnet_protocol_friends_ViewFriendsResponse__Descriptor = Descriptor.MessageTypes[7];
          internal__static_bnet_protocol_friends_ViewFriendsResponse__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.ViewFriendsResponse, global::bnet.protocol.friends.ViewFriendsResponse.Builder>(internal__static_bnet_protocol_friends_ViewFriendsResponse__Descriptor,
                  new string[] { "Friends", "TotalResults", });
          internal__static_bnet_protocol_friends_UpdateFriendStateRequest__Descriptor = Descriptor.MessageTypes[8];
          internal__static_bnet_protocol_friends_UpdateFriendStateRequest__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.UpdateFriendStateRequest, global::bnet.protocol.friends.UpdateFriendStateRequest.Builder>(internal__static_bnet_protocol_friends_UpdateFriendStateRequest__Descriptor,
                  new string[] { "AgentId", "TargetId", "Attribute", "AttributesEpoch", });
          internal__static_bnet_protocol_friends_FriendNotification__Descriptor = Descriptor.MessageTypes[9];
          internal__static_bnet_protocol_friends_FriendNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.FriendNotification, global::bnet.protocol.friends.FriendNotification.Builder>(internal__static_bnet_protocol_friends_FriendNotification__Descriptor,
                  new string[] { "Target", "GameAccountId", });
          internal__static_bnet_protocol_friends_UpdateFriendStateNotification__Descriptor = Descriptor.MessageTypes[10];
          internal__static_bnet_protocol_friends_UpdateFriendStateNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.UpdateFriendStateNotification, global::bnet.protocol.friends.UpdateFriendStateNotification.Builder>(internal__static_bnet_protocol_friends_UpdateFriendStateNotification__Descriptor,
                  new string[] { "ChangedFriend", "GameAccountId", });
          internal__static_bnet_protocol_friends_InvitationNotification__Descriptor = Descriptor.MessageTypes[11];
          internal__static_bnet_protocol_friends_InvitationNotification__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::bnet.protocol.friends.InvitationNotification, global::bnet.protocol.friends.InvitationNotification.Builder>(internal__static_bnet_protocol_friends_InvitationNotification__Descriptor,
                  new string[] { "Invitation", "GameAccountId", "Reason", });
          pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
          RegisterAllExtensions(registry);
          global::bnet.protocol.friends.FriendsTypes.RegisterAllExtensions(registry);
          global::bnet.protocol.invitation.InvitationTypes.RegisterAllExtensions(registry);
          global::bnet.protocol.Proto.RoleSet.RegisterAllExtensions(registry);
          global::bnet.protocol.attribute.Proto.Attribute.RegisterAllExtensions(registry);
          global::bnet.protocol.Entity.RegisterAllExtensions(registry);
          global::bnet.protocol.Rpc.RegisterAllExtensions(registry);
          return registry;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::bnet.protocol.friends.FriendsTypes.Descriptor, 
            global::bnet.protocol.invitation.InvitationTypes.Descriptor, 
            global::bnet.protocol.Proto.RoleSet.Descriptor, 
            global::bnet.protocol.attribute.Proto.Attribute.Descriptor, 
            global::bnet.protocol.Entity.Descriptor, 
            global::bnet.protocol.Rpc.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeToFriendsRequest : pb::GeneratedMessage<SubscribeToFriendsRequest, SubscribeToFriendsRequest.Builder> {
    private SubscribeToFriendsRequest() { }
    private static readonly SubscribeToFriendsRequest defaultInstance = new SubscribeToFriendsRequest().MakeReadOnly();
    private static readonly string[] _subscribeToFriendsRequestFieldNames = new string[] { "agent_id", "object_id" };
    private static readonly uint[] _subscribeToFriendsRequestFieldTags = new uint[] { 10, 16 };
    public static SubscribeToFriendsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeToFriendsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeToFriendsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_SubscribeToFriendsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeToFriendsRequest, SubscribeToFriendsRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_SubscribeToFriendsRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ObjectIdFieldNumber = 2;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasObjectId) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeToFriendsRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasObjectId) {
        output.WriteUInt64(2, field_names[1], ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeToFriendsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeToFriendsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToFriendsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeToFriendsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToFriendsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeToFriendsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToFriendsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeToFriendsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeToFriendsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeToFriendsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeToFriendsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeToFriendsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeToFriendsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeToFriendsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeToFriendsRequest result;
      
      private SubscribeToFriendsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeToFriendsRequest original = result;
          result = new SubscribeToFriendsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeToFriendsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.friends.SubscribeToFriendsRequest.Descriptor; }
      }
      
      public override SubscribeToFriendsRequest DefaultInstanceForType {
        get { return global::bnet.protocol.friends.SubscribeToFriendsRequest.DefaultInstance; }
      }
      
      public override SubscribeToFriendsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeToFriendsRequest) {
          return MergeFrom((SubscribeToFriendsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeToFriendsRequest other) {
        if (other == global::bnet.protocol.friends.SubscribeToFriendsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeToFriendsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeToFriendsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static SubscribeToFriendsRequest() {
      object.ReferenceEquals(global::bnet.protocol.friends.Proto.FriendsService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class SubscribeToFriendsResponse : pb::GeneratedMessage<SubscribeToFriendsResponse, SubscribeToFriendsResponse.Builder> {
    private SubscribeToFriendsResponse() { }
    private static readonly SubscribeToFriendsResponse defaultInstance = new SubscribeToFriendsResponse().MakeReadOnly();
    private static readonly string[] _subscribeToFriendsResponseFieldNames = new string[] { "friends", "max_friends", "max_received_invitations", "max_sent_invitations", "received_invitations", "role", "sent_invitations" };
    private static readonly uint[] _subscribeToFriendsResponseFieldTags = new uint[] { 42, 8, 16, 24, 58, 34, 50 };
    public static SubscribeToFriendsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SubscribeToFriendsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SubscribeToFriendsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_SubscribeToFriendsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SubscribeToFriendsResponse, SubscribeToFriendsResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_SubscribeToFriendsResponse__FieldAccessorTable; }
    }
    
    public const int MaxFriendsFieldNumber = 1;
    private bool hasMaxFriends;
    private uint maxFriends_;
    public bool HasMaxFriends {
      get { return hasMaxFriends; }
    }
    public uint MaxFriends {
      get { return maxFriends_; }
    }
    
    public const int MaxReceivedInvitationsFieldNumber = 2;
    private bool hasMaxReceivedInvitations;
    private uint maxReceivedInvitations_;
    public bool HasMaxReceivedInvitations {
      get { return hasMaxReceivedInvitations; }
    }
    public uint MaxReceivedInvitations {
      get { return maxReceivedInvitations_; }
    }
    
    public const int MaxSentInvitationsFieldNumber = 3;
    private bool hasMaxSentInvitations;
    private uint maxSentInvitations_;
    public bool HasMaxSentInvitations {
      get { return hasMaxSentInvitations; }
    }
    public uint MaxSentInvitations {
      get { return maxSentInvitations_; }
    }
    
    public const int RoleFieldNumber = 4;
    private pbc::PopsicleList<global::bnet.protocol.Role> role_ = new pbc::PopsicleList<global::bnet.protocol.Role>();
    public scg::IList<global::bnet.protocol.Role> RoleList {
      get { return role_; }
    }
    public int RoleCount {
      get { return role_.Count; }
    }
    public global::bnet.protocol.Role GetRole(int index) {
      return role_[index];
    }
    
    public const int FriendsFieldNumber = 5;
    private pbc::PopsicleList<global::bnet.protocol.friends.Friend> friends_ = new pbc::PopsicleList<global::bnet.protocol.friends.Friend>();
    public scg::IList<global::bnet.protocol.friends.Friend> FriendsList {
      get { return friends_; }
    }
    public int FriendsCount {
      get { return friends_.Count; }
    }
    public global::bnet.protocol.friends.Friend GetFriends(int index) {
      return friends_[index];
    }
    
    public const int SentInvitationsFieldNumber = 6;
    private pbc::PopsicleList<global::bnet.protocol.invitation.Invitation> sentInvitations_ = new pbc::PopsicleList<global::bnet.protocol.invitation.Invitation>();
    public scg::IList<global::bnet.protocol.invitation.Invitation> SentInvitationsList {
      get { return sentInvitations_; }
    }
    public int SentInvitationsCount {
      get { return sentInvitations_.Count; }
    }
    public global::bnet.protocol.invitation.Invitation GetSentInvitations(int index) {
      return sentInvitations_[index];
    }
    
    public const int ReceivedInvitationsFieldNumber = 7;
    private pbc::PopsicleList<global::bnet.protocol.invitation.Invitation> receivedInvitations_ = new pbc::PopsicleList<global::bnet.protocol.invitation.Invitation>();
    public scg::IList<global::bnet.protocol.invitation.Invitation> ReceivedInvitationsList {
      get { return receivedInvitations_; }
    }
    public int ReceivedInvitationsCount {
      get { return receivedInvitations_.Count; }
    }
    public global::bnet.protocol.invitation.Invitation GetReceivedInvitations(int index) {
      return receivedInvitations_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.Role element in RoleList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.friends.Friend element in FriendsList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.invitation.Invitation element in SentInvitationsList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::bnet.protocol.invitation.Invitation element in ReceivedInvitationsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _subscribeToFriendsResponseFieldNames;
      if (hasMaxFriends) {
        output.WriteUInt32(1, field_names[1], MaxFriends);
      }
      if (hasMaxReceivedInvitations) {
        output.WriteUInt32(2, field_names[2], MaxReceivedInvitations);
      }
      if (hasMaxSentInvitations) {
        output.WriteUInt32(3, field_names[3], MaxSentInvitations);
      }
      if (role_.Count > 0) {
        output.WriteMessageArray(4, field_names[5], role_);
      }
      if (friends_.Count > 0) {
        output.WriteMessageArray(5, field_names[0], friends_);
      }
      if (sentInvitations_.Count > 0) {
        output.WriteMessageArray(6, field_names[6], sentInvitations_);
      }
      if (receivedInvitations_.Count > 0) {
        output.WriteMessageArray(7, field_names[4], receivedInvitations_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMaxFriends) {
          size += pb::CodedOutputStream.ComputeUInt32Size(1, MaxFriends);
        }
        if (hasMaxReceivedInvitations) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, MaxReceivedInvitations);
        }
        if (hasMaxSentInvitations) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, MaxSentInvitations);
        }
        foreach (global::bnet.protocol.Role element in RoleList) {
          size += pb::CodedOutputStream.ComputeMessageSize(4, element);
        }
        foreach (global::bnet.protocol.friends.Friend element in FriendsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(5, element);
        }
        foreach (global::bnet.protocol.invitation.Invitation element in SentInvitationsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(6, element);
        }
        foreach (global::bnet.protocol.invitation.Invitation element in ReceivedInvitationsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(7, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static SubscribeToFriendsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeToFriendsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToFriendsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SubscribeToFriendsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToFriendsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeToFriendsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SubscribeToFriendsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SubscribeToFriendsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SubscribeToFriendsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SubscribeToFriendsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SubscribeToFriendsResponse MakeReadOnly() {
      role_.MakeReadOnly();
      friends_.MakeReadOnly();
      sentInvitations_.MakeReadOnly();
      receivedInvitations_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SubscribeToFriendsResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<SubscribeToFriendsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SubscribeToFriendsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SubscribeToFriendsResponse result;
      
      private SubscribeToFriendsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          SubscribeToFriendsResponse original = result;
          result = new SubscribeToFriendsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SubscribeToFriendsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.friends.SubscribeToFriendsResponse.Descriptor; }
      }
      
      public override SubscribeToFriendsResponse DefaultInstanceForType {
        get { return global::bnet.protocol.friends.SubscribeToFriendsResponse.DefaultInstance; }
      }
      
      public override SubscribeToFriendsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SubscribeToFriendsResponse) {
          return MergeFrom((SubscribeToFriendsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SubscribeToFriendsResponse other) {
        if (other == global::bnet.protocol.friends.SubscribeToFriendsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMaxFriends) {
          MaxFriends = other.MaxFriends;
        }
        if (other.HasMaxReceivedInvitations) {
          MaxReceivedInvitations = other.MaxReceivedInvitations;
        }
        if (other.HasMaxSentInvitations) {
          MaxSentInvitations = other.MaxSentInvitations;
        }
        if (other.role_.Count != 0) {
          result.role_.Add(other.role_);
        }
        if (other.friends_.Count != 0) {
          result.friends_.Add(other.friends_);
        }
        if (other.sentInvitations_.Count != 0) {
          result.sentInvitations_.Add(other.sentInvitations_);
        }
        if (other.receivedInvitations_.Count != 0) {
          result.receivedInvitations_.Add(other.receivedInvitations_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_subscribeToFriendsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _subscribeToFriendsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMaxFriends = input.ReadUInt32(ref result.maxFriends_);
              break;
            }
            case 16: {
              result.hasMaxReceivedInvitations = input.ReadUInt32(ref result.maxReceivedInvitations_);
              break;
            }
            case 24: {
              result.hasMaxSentInvitations = input.ReadUInt32(ref result.maxSentInvitations_);
              break;
            }
            case 34: {
              input.ReadMessageArray(tag, field_name, result.role_, global::bnet.protocol.Role.DefaultInstance, extensionRegistry);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.friends_, global::bnet.protocol.friends.Friend.DefaultInstance, extensionRegistry);
              break;
            }
            case 50: {
              input.ReadMessageArray(tag, field_name, result.sentInvitations_, global::bnet.protocol.invitation.Invitation.DefaultInstance, extensionRegistry);
              break;
            }
            case 58: {
              input.ReadMessageArray(tag, field_name, result.receivedInvitations_, global::bnet.protocol.invitation.Invitation.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMaxFriends {
        get { return result.hasMaxFriends; }
      }
      public uint MaxFriends {
        get { return result.MaxFriends; }
        set { SetMaxFriends(value); }
      }
      public Builder SetMaxFriends(uint value) {
        PrepareBuilder();
        result.hasMaxFriends = true;
        result.maxFriends_ = value;
        return this;
      }
      public Builder ClearMaxFriends() {
        PrepareBuilder();
        result.hasMaxFriends = false;
        result.maxFriends_ = 0;
        return this;
      }
      
      public bool HasMaxReceivedInvitations {
        get { return result.hasMaxReceivedInvitations; }
      }
      public uint MaxReceivedInvitations {
        get { return result.MaxReceivedInvitations; }
        set { SetMaxReceivedInvitations(value); }
      }
      public Builder SetMaxReceivedInvitations(uint value) {
        PrepareBuilder();
        result.hasMaxReceivedInvitations = true;
        result.maxReceivedInvitations_ = value;
        return this;
      }
      public Builder ClearMaxReceivedInvitations() {
        PrepareBuilder();
        result.hasMaxReceivedInvitations = false;
        result.maxReceivedInvitations_ = 0;
        return this;
      }
      
      public bool HasMaxSentInvitations {
        get { return result.hasMaxSentInvitations; }
      }
      public uint MaxSentInvitations {
        get { return result.MaxSentInvitations; }
        set { SetMaxSentInvitations(value); }
      }
      public Builder SetMaxSentInvitations(uint value) {
        PrepareBuilder();
        result.hasMaxSentInvitations = true;
        result.maxSentInvitations_ = value;
        return this;
      }
      public Builder ClearMaxSentInvitations() {
        PrepareBuilder();
        result.hasMaxSentInvitations = false;
        result.maxSentInvitations_ = 0;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.Role> RoleList {
        get { return PrepareBuilder().role_; }
      }
      public int RoleCount {
        get { return result.RoleCount; }
      }
      public global::bnet.protocol.Role GetRole(int index) {
        return result.GetRole(index);
      }
      public Builder SetRole(int index, global::bnet.protocol.Role value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.role_[index] = value;
        return this;
      }
      public Builder SetRole(int index, global::bnet.protocol.Role.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.role_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRole(global::bnet.protocol.Role value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.role_.Add(value);
        return this;
      }
      public Builder AddRole(global::bnet.protocol.Role.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.role_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRole(scg::IEnumerable<global::bnet.protocol.Role> values) {
        PrepareBuilder();
        result.role_.Add(values);
        return this;
      }
      public Builder ClearRole() {
        PrepareBuilder();
        result.role_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.friends.Friend> FriendsList {
        get { return PrepareBuilder().friends_; }
      }
      public int FriendsCount {
        get { return result.FriendsCount; }
      }
      public global::bnet.protocol.friends.Friend GetFriends(int index) {
        return result.GetFriends(index);
      }
      public Builder SetFriends(int index, global::bnet.protocol.friends.Friend value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.friends_[index] = value;
        return this;
      }
      public Builder SetFriends(int index, global::bnet.protocol.friends.Friend.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.friends_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFriends(global::bnet.protocol.friends.Friend value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.friends_.Add(value);
        return this;
      }
      public Builder AddFriends(global::bnet.protocol.friends.Friend.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.friends_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFriends(scg::IEnumerable<global::bnet.protocol.friends.Friend> values) {
        PrepareBuilder();
        result.friends_.Add(values);
        return this;
      }
      public Builder ClearFriends() {
        PrepareBuilder();
        result.friends_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.invitation.Invitation> SentInvitationsList {
        get { return PrepareBuilder().sentInvitations_; }
      }
      public int SentInvitationsCount {
        get { return result.SentInvitationsCount; }
      }
      public global::bnet.protocol.invitation.Invitation GetSentInvitations(int index) {
        return result.GetSentInvitations(index);
      }
      public Builder SetSentInvitations(int index, global::bnet.protocol.invitation.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.sentInvitations_[index] = value;
        return this;
      }
      public Builder SetSentInvitations(int index, global::bnet.protocol.invitation.Invitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.sentInvitations_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddSentInvitations(global::bnet.protocol.invitation.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.sentInvitations_.Add(value);
        return this;
      }
      public Builder AddSentInvitations(global::bnet.protocol.invitation.Invitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.sentInvitations_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeSentInvitations(scg::IEnumerable<global::bnet.protocol.invitation.Invitation> values) {
        PrepareBuilder();
        result.sentInvitations_.Add(values);
        return this;
      }
      public Builder ClearSentInvitations() {
        PrepareBuilder();
        result.sentInvitations_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.invitation.Invitation> ReceivedInvitationsList {
        get { return PrepareBuilder().receivedInvitations_; }
      }
      public int ReceivedInvitationsCount {
        get { return result.ReceivedInvitationsCount; }
      }
      public global::bnet.protocol.invitation.Invitation GetReceivedInvitations(int index) {
        return result.GetReceivedInvitations(index);
      }
      public Builder SetReceivedInvitations(int index, global::bnet.protocol.invitation.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.receivedInvitations_[index] = value;
        return this;
      }
      public Builder SetReceivedInvitations(int index, global::bnet.protocol.invitation.Invitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.receivedInvitations_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddReceivedInvitations(global::bnet.protocol.invitation.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.receivedInvitations_.Add(value);
        return this;
      }
      public Builder AddReceivedInvitations(global::bnet.protocol.invitation.Invitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.receivedInvitations_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeReceivedInvitations(scg::IEnumerable<global::bnet.protocol.invitation.Invitation> values) {
        PrepareBuilder();
        result.receivedInvitations_.Add(values);
        return this;
      }
      public Builder ClearReceivedInvitations() {
        PrepareBuilder();
        result.receivedInvitations_.Clear();
        return this;
      }
    }
    static SubscribeToFriendsResponse() {
      object.ReferenceEquals(global::bnet.protocol.friends.Proto.FriendsService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UnsubscribeToFriendsRequest : pb::GeneratedMessage<UnsubscribeToFriendsRequest, UnsubscribeToFriendsRequest.Builder> {
    private UnsubscribeToFriendsRequest() { }
    private static readonly UnsubscribeToFriendsRequest defaultInstance = new UnsubscribeToFriendsRequest().MakeReadOnly();
    private static readonly string[] _unsubscribeToFriendsRequestFieldNames = new string[] { "agent_id", "object_id" };
    private static readonly uint[] _unsubscribeToFriendsRequestFieldTags = new uint[] { 10, 16 };
    public static UnsubscribeToFriendsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UnsubscribeToFriendsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UnsubscribeToFriendsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_UnsubscribeToFriendsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UnsubscribeToFriendsRequest, UnsubscribeToFriendsRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_UnsubscribeToFriendsRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ObjectIdFieldNumber = 2;
    private bool hasObjectId;
    private ulong objectId_;
    public bool HasObjectId {
      get { return hasObjectId; }
    }
    public ulong ObjectId {
      get { return objectId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _unsubscribeToFriendsRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasObjectId) {
        output.WriteUInt64(2, field_names[1], ObjectId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasObjectId) {
          size += pb::CodedOutputStream.ComputeUInt64Size(2, ObjectId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UnsubscribeToFriendsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeToFriendsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeToFriendsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UnsubscribeToFriendsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeToFriendsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeToFriendsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UnsubscribeToFriendsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UnsubscribeToFriendsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UnsubscribeToFriendsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UnsubscribeToFriendsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UnsubscribeToFriendsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UnsubscribeToFriendsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UnsubscribeToFriendsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UnsubscribeToFriendsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UnsubscribeToFriendsRequest result;
      
      private UnsubscribeToFriendsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UnsubscribeToFriendsRequest original = result;
          result = new UnsubscribeToFriendsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UnsubscribeToFriendsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.friends.UnsubscribeToFriendsRequest.Descriptor; }
      }
      
      public override UnsubscribeToFriendsRequest DefaultInstanceForType {
        get { return global::bnet.protocol.friends.UnsubscribeToFriendsRequest.DefaultInstance; }
      }
      
      public override UnsubscribeToFriendsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UnsubscribeToFriendsRequest) {
          return MergeFrom((UnsubscribeToFriendsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UnsubscribeToFriendsRequest other) {
        if (other == global::bnet.protocol.friends.UnsubscribeToFriendsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasObjectId) {
          ObjectId = other.ObjectId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_unsubscribeToFriendsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _unsubscribeToFriendsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasObjectId = input.ReadUInt64(ref result.objectId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasObjectId {
        get { return result.hasObjectId; }
      }
      public ulong ObjectId {
        get { return result.ObjectId; }
        set { SetObjectId(value); }
      }
      public Builder SetObjectId(ulong value) {
        PrepareBuilder();
        result.hasObjectId = true;
        result.objectId_ = value;
        return this;
      }
      public Builder ClearObjectId() {
        PrepareBuilder();
        result.hasObjectId = false;
        result.objectId_ = 0UL;
        return this;
      }
    }
    static UnsubscribeToFriendsRequest() {
      object.ReferenceEquals(global::bnet.protocol.friends.Proto.FriendsService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GenericFriendRequest : pb::GeneratedMessage<GenericFriendRequest, GenericFriendRequest.Builder> {
    private GenericFriendRequest() { }
    private static readonly GenericFriendRequest defaultInstance = new GenericFriendRequest().MakeReadOnly();
    private static readonly string[] _genericFriendRequestFieldNames = new string[] { "agent_id", "target_id" };
    private static readonly uint[] _genericFriendRequestFieldTags = new uint[] { 10, 18 };
    public static GenericFriendRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GenericFriendRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GenericFriendRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_GenericFriendRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GenericFriendRequest, GenericFriendRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_GenericFriendRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int TargetIdFieldNumber = 2;
    private bool hasTargetId;
    private global::bnet.protocol.EntityId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bnet.protocol.EntityId TargetId {
      get { return targetId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTargetId) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (!TargetId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _genericFriendRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasTargetId) {
        output.WriteMessage(2, field_names[1], TargetId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, TargetId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GenericFriendRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GenericFriendRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GenericFriendRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GenericFriendRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GenericFriendRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GenericFriendRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GenericFriendRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GenericFriendRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GenericFriendRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GenericFriendRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GenericFriendRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GenericFriendRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GenericFriendRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GenericFriendRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GenericFriendRequest result;
      
      private GenericFriendRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          GenericFriendRequest original = result;
          result = new GenericFriendRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GenericFriendRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.friends.GenericFriendRequest.Descriptor; }
      }
      
      public override GenericFriendRequest DefaultInstanceForType {
        get { return global::bnet.protocol.friends.GenericFriendRequest.DefaultInstance; }
      }
      
      public override GenericFriendRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GenericFriendRequest) {
          return MergeFrom((GenericFriendRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GenericFriendRequest other) {
        if (other == global::bnet.protocol.friends.GenericFriendRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_genericFriendRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _genericFriendRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bnet.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
    }
    static GenericFriendRequest() {
      object.ReferenceEquals(global::bnet.protocol.friends.Proto.FriendsService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class GenericFriendResponse : pb::GeneratedMessage<GenericFriendResponse, GenericFriendResponse.Builder> {
    private GenericFriendResponse() { }
    private static readonly GenericFriendResponse defaultInstance = new GenericFriendResponse().MakeReadOnly();
    private static readonly string[] _genericFriendResponseFieldNames = new string[] { "target_friend" };
    private static readonly uint[] _genericFriendResponseFieldTags = new uint[] { 10 };
    public static GenericFriendResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GenericFriendResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GenericFriendResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_GenericFriendResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GenericFriendResponse, GenericFriendResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_GenericFriendResponse__FieldAccessorTable; }
    }
    
    public const int TargetFriendFieldNumber = 1;
    private bool hasTargetFriend;
    private global::bnet.protocol.friends.Friend targetFriend_;
    public bool HasTargetFriend {
      get { return hasTargetFriend; }
    }
    public global::bnet.protocol.friends.Friend TargetFriend {
      get { return targetFriend_ ?? global::bnet.protocol.friends.Friend.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasTargetFriend) {
          if (!TargetFriend.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _genericFriendResponseFieldNames;
      if (hasTargetFriend) {
        output.WriteMessage(1, field_names[0], TargetFriend);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTargetFriend) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, TargetFriend);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GenericFriendResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GenericFriendResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GenericFriendResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GenericFriendResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GenericFriendResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GenericFriendResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GenericFriendResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GenericFriendResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GenericFriendResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GenericFriendResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GenericFriendResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GenericFriendResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<GenericFriendResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GenericFriendResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GenericFriendResponse result;
      
      private GenericFriendResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          GenericFriendResponse original = result;
          result = new GenericFriendResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GenericFriendResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.friends.GenericFriendResponse.Descriptor; }
      }
      
      public override GenericFriendResponse DefaultInstanceForType {
        get { return global::bnet.protocol.friends.GenericFriendResponse.DefaultInstance; }
      }
      
      public override GenericFriendResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GenericFriendResponse) {
          return MergeFrom((GenericFriendResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GenericFriendResponse other) {
        if (other == global::bnet.protocol.friends.GenericFriendResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTargetFriend) {
          MergeTargetFriend(other.TargetFriend);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_genericFriendResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _genericFriendResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.friends.Friend.Builder subBuilder = global::bnet.protocol.friends.Friend.CreateBuilder();
              if (result.hasTargetFriend) {
                subBuilder.MergeFrom(TargetFriend);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetFriend = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTargetFriend {
       get { return result.hasTargetFriend; }
      }
      public global::bnet.protocol.friends.Friend TargetFriend {
        get { return result.TargetFriend; }
        set { SetTargetFriend(value); }
      }
      public Builder SetTargetFriend(global::bnet.protocol.friends.Friend value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetFriend = true;
        result.targetFriend_ = value;
        return this;
      }
      public Builder SetTargetFriend(global::bnet.protocol.friends.Friend.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetFriend = true;
        result.targetFriend_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetFriend(global::bnet.protocol.friends.Friend value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetFriend &&
            result.targetFriend_ != global::bnet.protocol.friends.Friend.DefaultInstance) {
            result.targetFriend_ = global::bnet.protocol.friends.Friend.CreateBuilder(result.targetFriend_).MergeFrom(value).BuildPartial();
        } else {
          result.targetFriend_ = value;
        }
        result.hasTargetFriend = true;
        return this;
      }
      public Builder ClearTargetFriend() {
        PrepareBuilder();
        result.hasTargetFriend = false;
        result.targetFriend_ = null;
        return this;
      }
    }
    static GenericFriendResponse() {
      object.ReferenceEquals(global::bnet.protocol.friends.Proto.FriendsService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class AssignRoleRequest : pb::GeneratedMessage<AssignRoleRequest, AssignRoleRequest.Builder> {
    private AssignRoleRequest() { }
    private static readonly AssignRoleRequest defaultInstance = new AssignRoleRequest().MakeReadOnly();
    private static readonly string[] _assignRoleRequestFieldNames = new string[] { "agent_id", "role", "target_id" };
    private static readonly uint[] _assignRoleRequestFieldTags = new uint[] { 10, 24, 18 };
    public static AssignRoleRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AssignRoleRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AssignRoleRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_AssignRoleRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AssignRoleRequest, AssignRoleRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_AssignRoleRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int TargetIdFieldNumber = 2;
    private bool hasTargetId;
    private global::bnet.protocol.EntityId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bnet.protocol.EntityId TargetId {
      get { return targetId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int RoleFieldNumber = 3;
    private pbc::PopsicleList<int> role_ = new pbc::PopsicleList<int>();
    public scg::IList<int> RoleList {
      get { return pbc::Lists.AsReadOnly(role_); }
    }
    public int RoleCount {
      get { return role_.Count; }
    }
    public int GetRole(int index) {
      return role_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTargetId) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (!TargetId.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _assignRoleRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasTargetId) {
        output.WriteMessage(2, field_names[2], TargetId);
      }
      if (role_.Count > 0) {
        output.WriteInt32Array(3, field_names[1], role_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, TargetId);
        }
        {
          int dataSize = 0;
          foreach (int element in RoleList) {
            dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
          }
          size += dataSize;
          size += 1 * role_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static AssignRoleRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AssignRoleRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AssignRoleRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AssignRoleRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AssignRoleRequest MakeReadOnly() {
      role_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AssignRoleRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<AssignRoleRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AssignRoleRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AssignRoleRequest result;
      
      private AssignRoleRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          AssignRoleRequest original = result;
          result = new AssignRoleRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AssignRoleRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.friends.AssignRoleRequest.Descriptor; }
      }
      
      public override AssignRoleRequest DefaultInstanceForType {
        get { return global::bnet.protocol.friends.AssignRoleRequest.DefaultInstance; }
      }
      
      public override AssignRoleRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AssignRoleRequest) {
          return MergeFrom((AssignRoleRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AssignRoleRequest other) {
        if (other == global::bnet.protocol.friends.AssignRoleRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        if (other.role_.Count != 0) {
          result.role_.Add(other.role_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_assignRoleRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _assignRoleRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
            case 26:
            case 24: {
              input.ReadInt32Array(tag, field_name, result.role_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bnet.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<int> RoleList {
        get { return PrepareBuilder().role_; }
      }
      public int RoleCount {
        get { return result.RoleCount; }
      }
      public int GetRole(int index) {
        return result.GetRole(index);
      }
      public Builder SetRole(int index, int value) {
        PrepareBuilder();
        result.role_[index] = value;
        return this;
      }
      public Builder AddRole(int value) {
        PrepareBuilder();
        result.role_.Add(value);
        return this;
      }
      public Builder AddRangeRole(scg::IEnumerable<int> values) {
        PrepareBuilder();
        result.role_.Add(values);
        return this;
      }
      public Builder ClearRole() {
        PrepareBuilder();
        result.role_.Clear();
        return this;
      }
    }
    static AssignRoleRequest() {
      object.ReferenceEquals(global::bnet.protocol.friends.Proto.FriendsService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ViewFriendsRequest : pb::GeneratedMessage<ViewFriendsRequest, ViewFriendsRequest.Builder> {
    private ViewFriendsRequest() { }
    private static readonly ViewFriendsRequest defaultInstance = new ViewFriendsRequest().MakeReadOnly();
    private static readonly string[] _viewFriendsRequestFieldNames = new string[] { "agent_id", "filter", "max_results", "start_index", "target_id" };
    private static readonly uint[] _viewFriendsRequestFieldTags = new uint[] { 10, 26, 40, 32, 18 };
    public static ViewFriendsRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ViewFriendsRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ViewFriendsRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_ViewFriendsRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ViewFriendsRequest, ViewFriendsRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_ViewFriendsRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int TargetIdFieldNumber = 2;
    private bool hasTargetId;
    private global::bnet.protocol.EntityId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bnet.protocol.EntityId TargetId {
      get { return targetId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int FilterFieldNumber = 3;
    private bool hasFilter;
    private global::bnet.protocol.attribute.AttributeFilter filter_;
    public bool HasFilter {
      get { return hasFilter; }
    }
    public global::bnet.protocol.attribute.AttributeFilter Filter {
      get { return filter_ ?? global::bnet.protocol.attribute.AttributeFilter.DefaultInstance; }
    }
    
    public const int StartIndexFieldNumber = 4;
    private bool hasStartIndex;
    private uint startIndex_;
    public bool HasStartIndex {
      get { return hasStartIndex; }
    }
    public uint StartIndex {
      get { return startIndex_; }
    }
    
    public const int MaxResultsFieldNumber = 5;
    private bool hasMaxResults;
    private uint maxResults_ = 100;
    public bool HasMaxResults {
      get { return hasMaxResults; }
    }
    public uint MaxResults {
      get { return maxResults_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTargetId) return false;
        if (!hasFilter) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (!TargetId.IsInitialized) return false;
        if (!Filter.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _viewFriendsRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasTargetId) {
        output.WriteMessage(2, field_names[4], TargetId);
      }
      if (hasFilter) {
        output.WriteMessage(3, field_names[1], Filter);
      }
      if (hasStartIndex) {
        output.WriteUInt32(4, field_names[3], StartIndex);
      }
      if (hasMaxResults) {
        output.WriteUInt32(5, field_names[2], MaxResults);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, TargetId);
        }
        if (hasFilter) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, Filter);
        }
        if (hasStartIndex) {
          size += pb::CodedOutputStream.ComputeUInt32Size(4, StartIndex);
        }
        if (hasMaxResults) {
          size += pb::CodedOutputStream.ComputeUInt32Size(5, MaxResults);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ViewFriendsRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ViewFriendsRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ViewFriendsRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ViewFriendsRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ViewFriendsRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ViewFriendsRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ViewFriendsRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ViewFriendsRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ViewFriendsRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ViewFriendsRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ViewFriendsRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ViewFriendsRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ViewFriendsRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ViewFriendsRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ViewFriendsRequest result;
      
      private ViewFriendsRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          ViewFriendsRequest original = result;
          result = new ViewFriendsRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ViewFriendsRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.friends.ViewFriendsRequest.Descriptor; }
      }
      
      public override ViewFriendsRequest DefaultInstanceForType {
        get { return global::bnet.protocol.friends.ViewFriendsRequest.DefaultInstance; }
      }
      
      public override ViewFriendsRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ViewFriendsRequest) {
          return MergeFrom((ViewFriendsRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ViewFriendsRequest other) {
        if (other == global::bnet.protocol.friends.ViewFriendsRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        if (other.HasFilter) {
          MergeFilter(other.Filter);
        }
        if (other.HasStartIndex) {
          StartIndex = other.StartIndex;
        }
        if (other.HasMaxResults) {
          MaxResults = other.MaxResults;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_viewFriendsRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _viewFriendsRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::bnet.protocol.attribute.AttributeFilter.Builder subBuilder = global::bnet.protocol.attribute.AttributeFilter.CreateBuilder();
              if (result.hasFilter) {
                subBuilder.MergeFrom(Filter);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Filter = subBuilder.BuildPartial();
              break;
            }
            case 32: {
              result.hasStartIndex = input.ReadUInt32(ref result.startIndex_);
              break;
            }
            case 40: {
              result.hasMaxResults = input.ReadUInt32(ref result.maxResults_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bnet.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
      
      public bool HasFilter {
       get { return result.hasFilter; }
      }
      public global::bnet.protocol.attribute.AttributeFilter Filter {
        get { return result.Filter; }
        set { SetFilter(value); }
      }
      public Builder SetFilter(global::bnet.protocol.attribute.AttributeFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = value;
        return this;
      }
      public Builder SetFilter(global::bnet.protocol.attribute.AttributeFilter.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasFilter = true;
        result.filter_ = builderForValue.Build();
        return this;
      }
      public Builder MergeFilter(global::bnet.protocol.attribute.AttributeFilter value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasFilter &&
            result.filter_ != global::bnet.protocol.attribute.AttributeFilter.DefaultInstance) {
            result.filter_ = global::bnet.protocol.attribute.AttributeFilter.CreateBuilder(result.filter_).MergeFrom(value).BuildPartial();
        } else {
          result.filter_ = value;
        }
        result.hasFilter = true;
        return this;
      }
      public Builder ClearFilter() {
        PrepareBuilder();
        result.hasFilter = false;
        result.filter_ = null;
        return this;
      }
      
      public bool HasStartIndex {
        get { return result.hasStartIndex; }
      }
      public uint StartIndex {
        get { return result.StartIndex; }
        set { SetStartIndex(value); }
      }
      public Builder SetStartIndex(uint value) {
        PrepareBuilder();
        result.hasStartIndex = true;
        result.startIndex_ = value;
        return this;
      }
      public Builder ClearStartIndex() {
        PrepareBuilder();
        result.hasStartIndex = false;
        result.startIndex_ = 0;
        return this;
      }
      
      public bool HasMaxResults {
        get { return result.hasMaxResults; }
      }
      public uint MaxResults {
        get { return result.MaxResults; }
        set { SetMaxResults(value); }
      }
      public Builder SetMaxResults(uint value) {
        PrepareBuilder();
        result.hasMaxResults = true;
        result.maxResults_ = value;
        return this;
      }
      public Builder ClearMaxResults() {
        PrepareBuilder();
        result.hasMaxResults = false;
        result.maxResults_ = 100;
        return this;
      }
    }
    static ViewFriendsRequest() {
      object.ReferenceEquals(global::bnet.protocol.friends.Proto.FriendsService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ViewFriendsResponse : pb::GeneratedMessage<ViewFriendsResponse, ViewFriendsResponse.Builder> {
    private ViewFriendsResponse() { }
    private static readonly ViewFriendsResponse defaultInstance = new ViewFriendsResponse().MakeReadOnly();
    private static readonly string[] _viewFriendsResponseFieldNames = new string[] { "friends", "total_results" };
    private static readonly uint[] _viewFriendsResponseFieldTags = new uint[] { 10, 16 };
    public static ViewFriendsResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ViewFriendsResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ViewFriendsResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_ViewFriendsResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ViewFriendsResponse, ViewFriendsResponse.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_ViewFriendsResponse__FieldAccessorTable; }
    }
    
    public const int FriendsFieldNumber = 1;
    private pbc::PopsicleList<global::bnet.protocol.friends.Friend> friends_ = new pbc::PopsicleList<global::bnet.protocol.friends.Friend>();
    public scg::IList<global::bnet.protocol.friends.Friend> FriendsList {
      get { return friends_; }
    }
    public int FriendsCount {
      get { return friends_.Count; }
    }
    public global::bnet.protocol.friends.Friend GetFriends(int index) {
      return friends_[index];
    }
    
    public const int TotalResultsFieldNumber = 2;
    private bool hasTotalResults;
    private uint totalResults_;
    public bool HasTotalResults {
      get { return hasTotalResults; }
    }
    public uint TotalResults {
      get { return totalResults_; }
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::bnet.protocol.friends.Friend element in FriendsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _viewFriendsResponseFieldNames;
      if (friends_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], friends_);
      }
      if (hasTotalResults) {
        output.WriteUInt32(2, field_names[1], TotalResults);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::bnet.protocol.friends.Friend element in FriendsList) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        if (hasTotalResults) {
          size += pb::CodedOutputStream.ComputeUInt32Size(2, TotalResults);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ViewFriendsResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ViewFriendsResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ViewFriendsResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ViewFriendsResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ViewFriendsResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ViewFriendsResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ViewFriendsResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ViewFriendsResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ViewFriendsResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ViewFriendsResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ViewFriendsResponse MakeReadOnly() {
      friends_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ViewFriendsResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ViewFriendsResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ViewFriendsResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ViewFriendsResponse result;
      
      private ViewFriendsResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ViewFriendsResponse original = result;
          result = new ViewFriendsResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ViewFriendsResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.friends.ViewFriendsResponse.Descriptor; }
      }
      
      public override ViewFriendsResponse DefaultInstanceForType {
        get { return global::bnet.protocol.friends.ViewFriendsResponse.DefaultInstance; }
      }
      
      public override ViewFriendsResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ViewFriendsResponse) {
          return MergeFrom((ViewFriendsResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ViewFriendsResponse other) {
        if (other == global::bnet.protocol.friends.ViewFriendsResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.friends_.Count != 0) {
          result.friends_.Add(other.friends_);
        }
        if (other.HasTotalResults) {
          TotalResults = other.TotalResults;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_viewFriendsResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _viewFriendsResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.friends_, global::bnet.protocol.friends.Friend.DefaultInstance, extensionRegistry);
              break;
            }
            case 16: {
              result.hasTotalResults = input.ReadUInt32(ref result.totalResults_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::bnet.protocol.friends.Friend> FriendsList {
        get { return PrepareBuilder().friends_; }
      }
      public int FriendsCount {
        get { return result.FriendsCount; }
      }
      public global::bnet.protocol.friends.Friend GetFriends(int index) {
        return result.GetFriends(index);
      }
      public Builder SetFriends(int index, global::bnet.protocol.friends.Friend value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.friends_[index] = value;
        return this;
      }
      public Builder SetFriends(int index, global::bnet.protocol.friends.Friend.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.friends_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFriends(global::bnet.protocol.friends.Friend value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.friends_.Add(value);
        return this;
      }
      public Builder AddFriends(global::bnet.protocol.friends.Friend.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.friends_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFriends(scg::IEnumerable<global::bnet.protocol.friends.Friend> values) {
        PrepareBuilder();
        result.friends_.Add(values);
        return this;
      }
      public Builder ClearFriends() {
        PrepareBuilder();
        result.friends_.Clear();
        return this;
      }
      
      public bool HasTotalResults {
        get { return result.hasTotalResults; }
      }
      public uint TotalResults {
        get { return result.TotalResults; }
        set { SetTotalResults(value); }
      }
      public Builder SetTotalResults(uint value) {
        PrepareBuilder();
        result.hasTotalResults = true;
        result.totalResults_ = value;
        return this;
      }
      public Builder ClearTotalResults() {
        PrepareBuilder();
        result.hasTotalResults = false;
        result.totalResults_ = 0;
        return this;
      }
    }
    static ViewFriendsResponse() {
      object.ReferenceEquals(global::bnet.protocol.friends.Proto.FriendsService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UpdateFriendStateRequest : pb::GeneratedMessage<UpdateFriendStateRequest, UpdateFriendStateRequest.Builder> {
    private UpdateFriendStateRequest() { }
    private static readonly UpdateFriendStateRequest defaultInstance = new UpdateFriendStateRequest().MakeReadOnly();
    private static readonly string[] _updateFriendStateRequestFieldNames = new string[] { "agent_id", "attribute", "attributes_epoch", "target_id" };
    private static readonly uint[] _updateFriendStateRequestFieldTags = new uint[] { 10, 26, 32, 18 };
    public static UpdateFriendStateRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateFriendStateRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateFriendStateRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_UpdateFriendStateRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateFriendStateRequest, UpdateFriendStateRequest.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_UpdateFriendStateRequest__FieldAccessorTable; }
    }
    
    public const int AgentIdFieldNumber = 1;
    private bool hasAgentId;
    private global::bnet.protocol.EntityId agentId_;
    public bool HasAgentId {
      get { return hasAgentId; }
    }
    public global::bnet.protocol.EntityId AgentId {
      get { return agentId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int TargetIdFieldNumber = 2;
    private bool hasTargetId;
    private global::bnet.protocol.EntityId targetId_;
    public bool HasTargetId {
      get { return hasTargetId; }
    }
    public global::bnet.protocol.EntityId TargetId {
      get { return targetId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int AttributeFieldNumber = 3;
    private pbc::PopsicleList<global::bnet.protocol.attribute.Attribute> attribute_ = new pbc::PopsicleList<global::bnet.protocol.attribute.Attribute>();
    public scg::IList<global::bnet.protocol.attribute.Attribute> AttributeList {
      get { return attribute_; }
    }
    public int AttributeCount {
      get { return attribute_.Count; }
    }
    public global::bnet.protocol.attribute.Attribute GetAttribute(int index) {
      return attribute_[index];
    }
    
    public const int AttributesEpochFieldNumber = 4;
    private bool hasAttributesEpoch;
    private ulong attributesEpoch_;
    public bool HasAttributesEpoch {
      get { return hasAttributesEpoch; }
    }
    public ulong AttributesEpoch {
      get { return attributesEpoch_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTargetId) return false;
        if (HasAgentId) {
          if (!AgentId.IsInitialized) return false;
        }
        if (!TargetId.IsInitialized) return false;
        foreach (global::bnet.protocol.attribute.Attribute element in AttributeList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateFriendStateRequestFieldNames;
      if (hasAgentId) {
        output.WriteMessage(1, field_names[0], AgentId);
      }
      if (hasTargetId) {
        output.WriteMessage(2, field_names[3], TargetId);
      }
      if (attribute_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], attribute_);
      }
      if (hasAttributesEpoch) {
        output.WriteUInt64(4, field_names[2], AttributesEpoch);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAgentId) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, AgentId);
        }
        if (hasTargetId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, TargetId);
        }
        foreach (global::bnet.protocol.attribute.Attribute element in AttributeList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        if (hasAttributesEpoch) {
          size += pb::CodedOutputStream.ComputeUInt64Size(4, AttributesEpoch);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateFriendStateRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateFriendStateRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateFriendStateRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateFriendStateRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateFriendStateRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateFriendStateRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateFriendStateRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateFriendStateRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateFriendStateRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateFriendStateRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateFriendStateRequest MakeReadOnly() {
      attribute_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateFriendStateRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateFriendStateRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateFriendStateRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateFriendStateRequest result;
      
      private UpdateFriendStateRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateFriendStateRequest original = result;
          result = new UpdateFriendStateRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateFriendStateRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.friends.UpdateFriendStateRequest.Descriptor; }
      }
      
      public override UpdateFriendStateRequest DefaultInstanceForType {
        get { return global::bnet.protocol.friends.UpdateFriendStateRequest.DefaultInstance; }
      }
      
      public override UpdateFriendStateRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateFriendStateRequest) {
          return MergeFrom((UpdateFriendStateRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateFriendStateRequest other) {
        if (other == global::bnet.protocol.friends.UpdateFriendStateRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAgentId) {
          MergeAgentId(other.AgentId);
        }
        if (other.HasTargetId) {
          MergeTargetId(other.TargetId);
        }
        if (other.attribute_.Count != 0) {
          result.attribute_.Add(other.attribute_);
        }
        if (other.HasAttributesEpoch) {
          AttributesEpoch = other.AttributesEpoch;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateFriendStateRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateFriendStateRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasAgentId) {
                subBuilder.MergeFrom(AgentId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              AgentId = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasTargetId) {
                subBuilder.MergeFrom(TargetId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TargetId = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.attribute_, global::bnet.protocol.attribute.Attribute.DefaultInstance, extensionRegistry);
              break;
            }
            case 32: {
              result.hasAttributesEpoch = input.ReadUInt64(ref result.attributesEpoch_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAgentId {
       get { return result.hasAgentId; }
      }
      public global::bnet.protocol.EntityId AgentId {
        get { return result.AgentId; }
        set { SetAgentId(value); }
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = value;
        return this;
      }
      public Builder SetAgentId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasAgentId = true;
        result.agentId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeAgentId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasAgentId &&
            result.agentId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.agentId_ = global::bnet.protocol.EntityId.CreateBuilder(result.agentId_).MergeFrom(value).BuildPartial();
        } else {
          result.agentId_ = value;
        }
        result.hasAgentId = true;
        return this;
      }
      public Builder ClearAgentId() {
        PrepareBuilder();
        result.hasAgentId = false;
        result.agentId_ = null;
        return this;
      }
      
      public bool HasTargetId {
       get { return result.hasTargetId; }
      }
      public global::bnet.protocol.EntityId TargetId {
        get { return result.TargetId; }
        set { SetTargetId(value); }
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = value;
        return this;
      }
      public Builder SetTargetId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTargetId = true;
        result.targetId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTargetId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTargetId &&
            result.targetId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.targetId_ = global::bnet.protocol.EntityId.CreateBuilder(result.targetId_).MergeFrom(value).BuildPartial();
        } else {
          result.targetId_ = value;
        }
        result.hasTargetId = true;
        return this;
      }
      public Builder ClearTargetId() {
        PrepareBuilder();
        result.hasTargetId = false;
        result.targetId_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::bnet.protocol.attribute.Attribute> AttributeList {
        get { return PrepareBuilder().attribute_; }
      }
      public int AttributeCount {
        get { return result.AttributeCount; }
      }
      public global::bnet.protocol.attribute.Attribute GetAttribute(int index) {
        return result.GetAttribute(index);
      }
      public Builder SetAttribute(int index, global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_[index] = value;
        return this;
      }
      public Builder SetAttribute(int index, global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAttribute(global::bnet.protocol.attribute.Attribute value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.attribute_.Add(value);
        return this;
      }
      public Builder AddAttribute(global::bnet.protocol.attribute.Attribute.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.attribute_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAttribute(scg::IEnumerable<global::bnet.protocol.attribute.Attribute> values) {
        PrepareBuilder();
        result.attribute_.Add(values);
        return this;
      }
      public Builder ClearAttribute() {
        PrepareBuilder();
        result.attribute_.Clear();
        return this;
      }
      
      public bool HasAttributesEpoch {
        get { return result.hasAttributesEpoch; }
      }
      public ulong AttributesEpoch {
        get { return result.AttributesEpoch; }
        set { SetAttributesEpoch(value); }
      }
      public Builder SetAttributesEpoch(ulong value) {
        PrepareBuilder();
        result.hasAttributesEpoch = true;
        result.attributesEpoch_ = value;
        return this;
      }
      public Builder ClearAttributesEpoch() {
        PrepareBuilder();
        result.hasAttributesEpoch = false;
        result.attributesEpoch_ = 0UL;
        return this;
      }
    }
    static UpdateFriendStateRequest() {
      object.ReferenceEquals(global::bnet.protocol.friends.Proto.FriendsService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class FriendNotification : pb::GeneratedMessage<FriendNotification, FriendNotification.Builder> {
    private FriendNotification() { }
    private static readonly FriendNotification defaultInstance = new FriendNotification().MakeReadOnly();
    private static readonly string[] _friendNotificationFieldNames = new string[] { "game_account_id", "target" };
    private static readonly uint[] _friendNotificationFieldTags = new uint[] { 18, 10 };
    public static FriendNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override FriendNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override FriendNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_FriendNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<FriendNotification, FriendNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_FriendNotification__FieldAccessorTable; }
    }
    
    public const int TargetFieldNumber = 1;
    private bool hasTarget;
    private global::bnet.protocol.friends.Friend target_;
    public bool HasTarget {
      get { return hasTarget; }
    }
    public global::bnet.protocol.friends.Friend Target {
      get { return target_ ?? global::bnet.protocol.friends.Friend.DefaultInstance; }
    }
    
    public const int GameAccountIdFieldNumber = 2;
    private bool hasGameAccountId;
    private global::bnet.protocol.EntityId gameAccountId_;
    public bool HasGameAccountId {
      get { return hasGameAccountId; }
    }
    public global::bnet.protocol.EntityId GameAccountId {
      get { return gameAccountId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTarget) return false;
        if (!Target.IsInitialized) return false;
        if (HasGameAccountId) {
          if (!GameAccountId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _friendNotificationFieldNames;
      if (hasTarget) {
        output.WriteMessage(1, field_names[1], Target);
      }
      if (hasGameAccountId) {
        output.WriteMessage(2, field_names[0], GameAccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasTarget) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Target);
        }
        if (hasGameAccountId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, GameAccountId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static FriendNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FriendNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FriendNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static FriendNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static FriendNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FriendNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static FriendNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static FriendNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static FriendNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static FriendNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private FriendNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(FriendNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<FriendNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(FriendNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private FriendNotification result;
      
      private FriendNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          FriendNotification original = result;
          result = new FriendNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override FriendNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.friends.FriendNotification.Descriptor; }
      }
      
      public override FriendNotification DefaultInstanceForType {
        get { return global::bnet.protocol.friends.FriendNotification.DefaultInstance; }
      }
      
      public override FriendNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is FriendNotification) {
          return MergeFrom((FriendNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(FriendNotification other) {
        if (other == global::bnet.protocol.friends.FriendNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTarget) {
          MergeTarget(other.Target);
        }
        if (other.HasGameAccountId) {
          MergeGameAccountId(other.GameAccountId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_friendNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _friendNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.friends.Friend.Builder subBuilder = global::bnet.protocol.friends.Friend.CreateBuilder();
              if (result.hasTarget) {
                subBuilder.MergeFrom(Target);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Target = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasGameAccountId) {
                subBuilder.MergeFrom(GameAccountId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameAccountId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTarget {
       get { return result.hasTarget; }
      }
      public global::bnet.protocol.friends.Friend Target {
        get { return result.Target; }
        set { SetTarget(value); }
      }
      public Builder SetTarget(global::bnet.protocol.friends.Friend value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTarget = true;
        result.target_ = value;
        return this;
      }
      public Builder SetTarget(global::bnet.protocol.friends.Friend.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTarget = true;
        result.target_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTarget(global::bnet.protocol.friends.Friend value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTarget &&
            result.target_ != global::bnet.protocol.friends.Friend.DefaultInstance) {
            result.target_ = global::bnet.protocol.friends.Friend.CreateBuilder(result.target_).MergeFrom(value).BuildPartial();
        } else {
          result.target_ = value;
        }
        result.hasTarget = true;
        return this;
      }
      public Builder ClearTarget() {
        PrepareBuilder();
        result.hasTarget = false;
        result.target_ = null;
        return this;
      }
      
      public bool HasGameAccountId {
       get { return result.hasGameAccountId; }
      }
      public global::bnet.protocol.EntityId GameAccountId {
        get { return result.GameAccountId; }
        set { SetGameAccountId(value); }
      }
      public Builder SetGameAccountId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameAccountId = true;
        result.gameAccountId_ = value;
        return this;
      }
      public Builder SetGameAccountId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameAccountId = true;
        result.gameAccountId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccountId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameAccountId &&
            result.gameAccountId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.gameAccountId_ = global::bnet.protocol.EntityId.CreateBuilder(result.gameAccountId_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccountId_ = value;
        }
        result.hasGameAccountId = true;
        return this;
      }
      public Builder ClearGameAccountId() {
        PrepareBuilder();
        result.hasGameAccountId = false;
        result.gameAccountId_ = null;
        return this;
      }
    }
    static FriendNotification() {
      object.ReferenceEquals(global::bnet.protocol.friends.Proto.FriendsService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class UpdateFriendStateNotification : pb::GeneratedMessage<UpdateFriendStateNotification, UpdateFriendStateNotification.Builder> {
    private UpdateFriendStateNotification() { }
    private static readonly UpdateFriendStateNotification defaultInstance = new UpdateFriendStateNotification().MakeReadOnly();
    private static readonly string[] _updateFriendStateNotificationFieldNames = new string[] { "changed_friend", "game_account_id" };
    private static readonly uint[] _updateFriendStateNotificationFieldTags = new uint[] { 10, 18 };
    public static UpdateFriendStateNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override UpdateFriendStateNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override UpdateFriendStateNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_UpdateFriendStateNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<UpdateFriendStateNotification, UpdateFriendStateNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_UpdateFriendStateNotification__FieldAccessorTable; }
    }
    
    public const int ChangedFriendFieldNumber = 1;
    private bool hasChangedFriend;
    private global::bnet.protocol.friends.Friend changedFriend_;
    public bool HasChangedFriend {
      get { return hasChangedFriend; }
    }
    public global::bnet.protocol.friends.Friend ChangedFriend {
      get { return changedFriend_ ?? global::bnet.protocol.friends.Friend.DefaultInstance; }
    }
    
    public const int GameAccountIdFieldNumber = 2;
    private bool hasGameAccountId;
    private global::bnet.protocol.EntityId gameAccountId_;
    public bool HasGameAccountId {
      get { return hasGameAccountId; }
    }
    public global::bnet.protocol.EntityId GameAccountId {
      get { return gameAccountId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasChangedFriend) return false;
        if (!ChangedFriend.IsInitialized) return false;
        if (HasGameAccountId) {
          if (!GameAccountId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _updateFriendStateNotificationFieldNames;
      if (hasChangedFriend) {
        output.WriteMessage(1, field_names[0], ChangedFriend);
      }
      if (hasGameAccountId) {
        output.WriteMessage(2, field_names[1], GameAccountId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasChangedFriend) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ChangedFriend);
        }
        if (hasGameAccountId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, GameAccountId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static UpdateFriendStateNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateFriendStateNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateFriendStateNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static UpdateFriendStateNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static UpdateFriendStateNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateFriendStateNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static UpdateFriendStateNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static UpdateFriendStateNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static UpdateFriendStateNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static UpdateFriendStateNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private UpdateFriendStateNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(UpdateFriendStateNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<UpdateFriendStateNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(UpdateFriendStateNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private UpdateFriendStateNotification result;
      
      private UpdateFriendStateNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          UpdateFriendStateNotification original = result;
          result = new UpdateFriendStateNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override UpdateFriendStateNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.friends.UpdateFriendStateNotification.Descriptor; }
      }
      
      public override UpdateFriendStateNotification DefaultInstanceForType {
        get { return global::bnet.protocol.friends.UpdateFriendStateNotification.DefaultInstance; }
      }
      
      public override UpdateFriendStateNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is UpdateFriendStateNotification) {
          return MergeFrom((UpdateFriendStateNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(UpdateFriendStateNotification other) {
        if (other == global::bnet.protocol.friends.UpdateFriendStateNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasChangedFriend) {
          MergeChangedFriend(other.ChangedFriend);
        }
        if (other.HasGameAccountId) {
          MergeGameAccountId(other.GameAccountId);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_updateFriendStateNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _updateFriendStateNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.friends.Friend.Builder subBuilder = global::bnet.protocol.friends.Friend.CreateBuilder();
              if (result.hasChangedFriend) {
                subBuilder.MergeFrom(ChangedFriend);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ChangedFriend = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasGameAccountId) {
                subBuilder.MergeFrom(GameAccountId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameAccountId = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasChangedFriend {
       get { return result.hasChangedFriend; }
      }
      public global::bnet.protocol.friends.Friend ChangedFriend {
        get { return result.ChangedFriend; }
        set { SetChangedFriend(value); }
      }
      public Builder SetChangedFriend(global::bnet.protocol.friends.Friend value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasChangedFriend = true;
        result.changedFriend_ = value;
        return this;
      }
      public Builder SetChangedFriend(global::bnet.protocol.friends.Friend.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasChangedFriend = true;
        result.changedFriend_ = builderForValue.Build();
        return this;
      }
      public Builder MergeChangedFriend(global::bnet.protocol.friends.Friend value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasChangedFriend &&
            result.changedFriend_ != global::bnet.protocol.friends.Friend.DefaultInstance) {
            result.changedFriend_ = global::bnet.protocol.friends.Friend.CreateBuilder(result.changedFriend_).MergeFrom(value).BuildPartial();
        } else {
          result.changedFriend_ = value;
        }
        result.hasChangedFriend = true;
        return this;
      }
      public Builder ClearChangedFriend() {
        PrepareBuilder();
        result.hasChangedFriend = false;
        result.changedFriend_ = null;
        return this;
      }
      
      public bool HasGameAccountId {
       get { return result.hasGameAccountId; }
      }
      public global::bnet.protocol.EntityId GameAccountId {
        get { return result.GameAccountId; }
        set { SetGameAccountId(value); }
      }
      public Builder SetGameAccountId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameAccountId = true;
        result.gameAccountId_ = value;
        return this;
      }
      public Builder SetGameAccountId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameAccountId = true;
        result.gameAccountId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccountId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameAccountId &&
            result.gameAccountId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.gameAccountId_ = global::bnet.protocol.EntityId.CreateBuilder(result.gameAccountId_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccountId_ = value;
        }
        result.hasGameAccountId = true;
        return this;
      }
      public Builder ClearGameAccountId() {
        PrepareBuilder();
        result.hasGameAccountId = false;
        result.gameAccountId_ = null;
        return this;
      }
    }
    static UpdateFriendStateNotification() {
      object.ReferenceEquals(global::bnet.protocol.friends.Proto.FriendsService.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class InvitationNotification : pb::GeneratedMessage<InvitationNotification, InvitationNotification.Builder> {
    private InvitationNotification() { }
    private static readonly InvitationNotification defaultInstance = new InvitationNotification().MakeReadOnly();
    private static readonly string[] _invitationNotificationFieldNames = new string[] { "game_account_id", "invitation", "reason" };
    private static readonly uint[] _invitationNotificationFieldTags = new uint[] { 18, 10, 24 };
    public static InvitationNotification DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override InvitationNotification DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override InvitationNotification ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_InvitationNotification__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<InvitationNotification, InvitationNotification.Builder> InternalFieldAccessors {
      get { return global::bnet.protocol.friends.Proto.FriendsService.internal__static_bnet_protocol_friends_InvitationNotification__FieldAccessorTable; }
    }
    
    public const int InvitationFieldNumber = 1;
    private bool hasInvitation;
    private global::bnet.protocol.invitation.Invitation invitation_;
    public bool HasInvitation {
      get { return hasInvitation; }
    }
    public global::bnet.protocol.invitation.Invitation Invitation {
      get { return invitation_ ?? global::bnet.protocol.invitation.Invitation.DefaultInstance; }
    }
    
    public const int GameAccountIdFieldNumber = 2;
    private bool hasGameAccountId;
    private global::bnet.protocol.EntityId gameAccountId_;
    public bool HasGameAccountId {
      get { return hasGameAccountId; }
    }
    public global::bnet.protocol.EntityId GameAccountId {
      get { return gameAccountId_ ?? global::bnet.protocol.EntityId.DefaultInstance; }
    }
    
    public const int ReasonFieldNumber = 3;
    private bool hasReason;
    private uint reason_;
    public bool HasReason {
      get { return hasReason; }
    }
    public uint Reason {
      get { return reason_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasInvitation) return false;
        if (!Invitation.IsInitialized) return false;
        if (HasGameAccountId) {
          if (!GameAccountId.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _invitationNotificationFieldNames;
      if (hasInvitation) {
        output.WriteMessage(1, field_names[1], Invitation);
      }
      if (hasGameAccountId) {
        output.WriteMessage(2, field_names[0], GameAccountId);
      }
      if (hasReason) {
        output.WriteUInt32(3, field_names[2], Reason);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasInvitation) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, Invitation);
        }
        if (hasGameAccountId) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, GameAccountId);
        }
        if (hasReason) {
          size += pb::CodedOutputStream.ComputeUInt32Size(3, Reason);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static InvitationNotification ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InvitationNotification ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InvitationNotification ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static InvitationNotification ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static InvitationNotification ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InvitationNotification ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static InvitationNotification ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static InvitationNotification ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static InvitationNotification ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static InvitationNotification ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private InvitationNotification MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(InvitationNotification prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<InvitationNotification, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(InvitationNotification cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private InvitationNotification result;
      
      private InvitationNotification PrepareBuilder() {
        if (resultIsReadOnly) {
          InvitationNotification original = result;
          result = new InvitationNotification();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override InvitationNotification MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::bnet.protocol.friends.InvitationNotification.Descriptor; }
      }
      
      public override InvitationNotification DefaultInstanceForType {
        get { return global::bnet.protocol.friends.InvitationNotification.DefaultInstance; }
      }
      
      public override InvitationNotification BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is InvitationNotification) {
          return MergeFrom((InvitationNotification) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(InvitationNotification other) {
        if (other == global::bnet.protocol.friends.InvitationNotification.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasInvitation) {
          MergeInvitation(other.Invitation);
        }
        if (other.HasGameAccountId) {
          MergeGameAccountId(other.GameAccountId);
        }
        if (other.HasReason) {
          Reason = other.Reason;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_invitationNotificationFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _invitationNotificationFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::bnet.protocol.invitation.Invitation.Builder subBuilder = global::bnet.protocol.invitation.Invitation.CreateBuilder();
              if (result.hasInvitation) {
                subBuilder.MergeFrom(Invitation);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Invitation = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              global::bnet.protocol.EntityId.Builder subBuilder = global::bnet.protocol.EntityId.CreateBuilder();
              if (result.hasGameAccountId) {
                subBuilder.MergeFrom(GameAccountId);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              GameAccountId = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              result.hasReason = input.ReadUInt32(ref result.reason_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasInvitation {
       get { return result.hasInvitation; }
      }
      public global::bnet.protocol.invitation.Invitation Invitation {
        get { return result.Invitation; }
        set { SetInvitation(value); }
      }
      public Builder SetInvitation(global::bnet.protocol.invitation.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = value;
        return this;
      }
      public Builder SetInvitation(global::bnet.protocol.invitation.Invitation.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasInvitation = true;
        result.invitation_ = builderForValue.Build();
        return this;
      }
      public Builder MergeInvitation(global::bnet.protocol.invitation.Invitation value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasInvitation &&
            result.invitation_ != global::bnet.protocol.invitation.Invitation.DefaultInstance) {
            result.invitation_ = global::bnet.protocol.invitation.Invitation.CreateBuilder(result.invitation_).MergeFrom(value).BuildPartial();
        } else {
          result.invitation_ = value;
        }
        result.hasInvitation = true;
        return this;
      }
      public Builder ClearInvitation() {
        PrepareBuilder();
        result.hasInvitation = false;
        result.invitation_ = null;
        return this;
      }
      
      public bool HasGameAccountId {
       get { return result.hasGameAccountId; }
      }
      public global::bnet.protocol.EntityId GameAccountId {
        get { return result.GameAccountId; }
        set { SetGameAccountId(value); }
      }
      public Builder SetGameAccountId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasGameAccountId = true;
        result.gameAccountId_ = value;
        return this;
      }
      public Builder SetGameAccountId(global::bnet.protocol.EntityId.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasGameAccountId = true;
        result.gameAccountId_ = builderForValue.Build();
        return this;
      }
      public Builder MergeGameAccountId(global::bnet.protocol.EntityId value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasGameAccountId &&
            result.gameAccountId_ != global::bnet.protocol.EntityId.DefaultInstance) {
            result.gameAccountId_ = global::bnet.protocol.EntityId.CreateBuilder(result.gameAccountId_).MergeFrom(value).BuildPartial();
        } else {
          result.gameAccountId_ = value;
        }
        result.hasGameAccountId = true;
        return this;
      }
      public Builder ClearGameAccountId() {
        PrepareBuilder();
        result.hasGameAccountId = false;
        result.gameAccountId_ = null;
        return this;
      }
      
      public bool HasReason {
        get { return result.hasReason; }
      }
      public uint Reason {
        get { return result.Reason; }
        set { SetReason(value); }
      }
      public Builder SetReason(uint value) {
        PrepareBuilder();
        result.hasReason = true;
        result.reason_ = value;
        return this;
      }
      public Builder ClearReason() {
        PrepareBuilder();
        result.hasReason = false;
        result.reason_ = 0;
        return this;
      }
    }
    static InvitationNotification() {
      object.ReferenceEquals(global::bnet.protocol.friends.Proto.FriendsService.Descriptor, null);
    }
  }
  
  #endregion
  
  #region Services
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class FriendsService : pb::IService {
    public abstract void SubscribeToFriends(
        pb::IRpcController controller,
        global::bnet.protocol.friends.SubscribeToFriendsRequest request,
        global::System.Action<global::bnet.protocol.friends.SubscribeToFriendsResponse> done);
    public abstract void SendInvitation(
        pb::IRpcController controller,
        global::bnet.protocol.invitation.SendInvitationRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void AcceptInvitation(
        pb::IRpcController controller,
        global::bnet.protocol.invitation.GenericRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void RevokeInvitation(
        pb::IRpcController controller,
        global::bnet.protocol.invitation.GenericRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void DeclineInvitation(
        pb::IRpcController controller,
        global::bnet.protocol.invitation.GenericRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void IgnoreInvitation(
        pb::IRpcController controller,
        global::bnet.protocol.invitation.GenericRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void AssignRole(
        pb::IRpcController controller,
        global::bnet.protocol.friends.AssignRoleRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void RemoveFriend(
        pb::IRpcController controller,
        global::bnet.protocol.friends.GenericFriendRequest request,
        global::System.Action<global::bnet.protocol.friends.GenericFriendResponse> done);
    public abstract void ViewFriends(
        pb::IRpcController controller,
        global::bnet.protocol.friends.ViewFriendsRequest request,
        global::System.Action<global::bnet.protocol.friends.ViewFriendsResponse> done);
    public abstract void UpdateFriendState(
        pb::IRpcController controller,
        global::bnet.protocol.friends.UpdateFriendStateRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    public abstract void UnsubscribeToFriends(
        pb::IRpcController controller,
        global::bnet.protocol.friends.UnsubscribeToFriendsRequest request,
        global::System.Action<global::bnet.protocol.NoData> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.FriendsService.Descriptor.Services[0]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.SubscribeToFriends(controller, (global::bnet.protocol.friends.SubscribeToFriendsRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.friends.SubscribeToFriendsResponse>(
              done));
          return;
        case 1:
          this.SendInvitation(controller, (global::bnet.protocol.invitation.SendInvitationRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 2:
          this.AcceptInvitation(controller, (global::bnet.protocol.invitation.GenericRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 3:
          this.RevokeInvitation(controller, (global::bnet.protocol.invitation.GenericRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 4:
          this.DeclineInvitation(controller, (global::bnet.protocol.invitation.GenericRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 5:
          this.IgnoreInvitation(controller, (global::bnet.protocol.invitation.GenericRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 6:
          this.AssignRole(controller, (global::bnet.protocol.friends.AssignRoleRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 7:
          this.RemoveFriend(controller, (global::bnet.protocol.friends.GenericFriendRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.friends.GenericFriendResponse>(
              done));
          return;
        case 8:
          this.ViewFriends(controller, (global::bnet.protocol.friends.ViewFriendsRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.friends.ViewFriendsResponse>(
              done));
          return;
        case 9:
          this.UpdateFriendState(controller, (global::bnet.protocol.friends.UpdateFriendStateRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        case 10:
          this.UnsubscribeToFriends(controller, (global::bnet.protocol.friends.UnsubscribeToFriendsRequest) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NoData>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.friends.SubscribeToFriendsRequest.DefaultInstance;
        case 1:
          return global::bnet.protocol.invitation.SendInvitationRequest.DefaultInstance;
        case 2:
          return global::bnet.protocol.invitation.GenericRequest.DefaultInstance;
        case 3:
          return global::bnet.protocol.invitation.GenericRequest.DefaultInstance;
        case 4:
          return global::bnet.protocol.invitation.GenericRequest.DefaultInstance;
        case 5:
          return global::bnet.protocol.invitation.GenericRequest.DefaultInstance;
        case 6:
          return global::bnet.protocol.friends.AssignRoleRequest.DefaultInstance;
        case 7:
          return global::bnet.protocol.friends.GenericFriendRequest.DefaultInstance;
        case 8:
          return global::bnet.protocol.friends.ViewFriendsRequest.DefaultInstance;
        case 9:
          return global::bnet.protocol.friends.UpdateFriendStateRequest.DefaultInstance;
        case 10:
          return global::bnet.protocol.friends.UnsubscribeToFriendsRequest.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.friends.SubscribeToFriendsResponse.DefaultInstance;
        case 1:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 2:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 3:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 4:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 5:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 6:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 7:
          return global::bnet.protocol.friends.GenericFriendResponse.DefaultInstance;
        case 8:
          return global::bnet.protocol.friends.ViewFriendsResponse.DefaultInstance;
        case 9:
          return global::bnet.protocol.NoData.DefaultInstance;
        case 10:
          return global::bnet.protocol.NoData.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bnet.protocol.friends.FriendsService {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void SubscribeToFriends(
          pb::IRpcController controller,
          global::bnet.protocol.friends.SubscribeToFriendsRequest request,
          global::System.Action<global::bnet.protocol.friends.SubscribeToFriendsResponse> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.friends.SubscribeToFriendsResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.friends.SubscribeToFriendsResponse, global::bnet.protocol.friends.SubscribeToFriendsResponse.Builder>(done, global::bnet.protocol.friends.SubscribeToFriendsResponse.DefaultInstance));
      }
      
      public override void SendInvitation(
          pb::IRpcController controller,
          global::bnet.protocol.invitation.SendInvitationRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void AcceptInvitation(
          pb::IRpcController controller,
          global::bnet.protocol.invitation.GenericRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void RevokeInvitation(
          pb::IRpcController controller,
          global::bnet.protocol.invitation.GenericRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void DeclineInvitation(
          pb::IRpcController controller,
          global::bnet.protocol.invitation.GenericRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void IgnoreInvitation(
          pb::IRpcController controller,
          global::bnet.protocol.invitation.GenericRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void AssignRole(
          pb::IRpcController controller,
          global::bnet.protocol.friends.AssignRoleRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void RemoveFriend(
          pb::IRpcController controller,
          global::bnet.protocol.friends.GenericFriendRequest request,
          global::System.Action<global::bnet.protocol.friends.GenericFriendResponse> done) {
        channel.CallMethod(Descriptor.Methods[7],
            controller, request, global::bnet.protocol.friends.GenericFriendResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.friends.GenericFriendResponse, global::bnet.protocol.friends.GenericFriendResponse.Builder>(done, global::bnet.protocol.friends.GenericFriendResponse.DefaultInstance));
      }
      
      public override void ViewFriends(
          pb::IRpcController controller,
          global::bnet.protocol.friends.ViewFriendsRequest request,
          global::System.Action<global::bnet.protocol.friends.ViewFriendsResponse> done) {
        channel.CallMethod(Descriptor.Methods[8],
            controller, request, global::bnet.protocol.friends.ViewFriendsResponse.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.friends.ViewFriendsResponse, global::bnet.protocol.friends.ViewFriendsResponse.Builder>(done, global::bnet.protocol.friends.ViewFriendsResponse.DefaultInstance));
      }
      
      public override void UpdateFriendState(
          pb::IRpcController controller,
          global::bnet.protocol.friends.UpdateFriendStateRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[9],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
      
      public override void UnsubscribeToFriends(
          pb::IRpcController controller,
          global::bnet.protocol.friends.UnsubscribeToFriendsRequest request,
          global::System.Action<global::bnet.protocol.NoData> done) {
        channel.CallMethod(Descriptor.Methods[10],
            controller, request, global::bnet.protocol.NoData.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NoData, global::bnet.protocol.NoData.Builder>(done, global::bnet.protocol.NoData.DefaultInstance));
      }
    }
  }
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public abstract class FriendsNotify : pb::IService {
    public abstract void NotifyFriendAdded(
        pb::IRpcController controller,
        global::bnet.protocol.friends.FriendNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyFriendRemoved(
        pb::IRpcController controller,
        global::bnet.protocol.friends.FriendNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyReceivedInvitationAdded(
        pb::IRpcController controller,
        global::bnet.protocol.friends.InvitationNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyReceivedInvitationRemoved(
        pb::IRpcController controller,
        global::bnet.protocol.friends.InvitationNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifySentInvitationAdded(
        pb::IRpcController controller,
        global::bnet.protocol.friends.InvitationNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifySentInvitationRemoved(
        pb::IRpcController controller,
        global::bnet.protocol.friends.InvitationNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    public abstract void NotifyUpdateFriendState(
        pb::IRpcController controller,
        global::bnet.protocol.friends.UpdateFriendStateNotification request,
        global::System.Action<global::bnet.protocol.NO_RESPONSE> done);
    
    public static pbd::ServiceDescriptor Descriptor {
      get { return Proto.FriendsService.Descriptor.Services[1]; }
    }
    public pbd::ServiceDescriptor DescriptorForType {
      get { return Descriptor; }
    }
    
    public void CallMethod(
        pbd::MethodDescriptor method,
        pb::IRpcController controller,
        pb::IMessage request,
        global::System.Action<pb::IMessage> done) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.CallMethod() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          this.NotifyFriendAdded(controller, (global::bnet.protocol.friends.FriendNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 1:
          this.NotifyFriendRemoved(controller, (global::bnet.protocol.friends.FriendNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 2:
          this.NotifyReceivedInvitationAdded(controller, (global::bnet.protocol.friends.InvitationNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 3:
          this.NotifyReceivedInvitationRemoved(controller, (global::bnet.protocol.friends.InvitationNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 4:
          this.NotifySentInvitationAdded(controller, (global::bnet.protocol.friends.InvitationNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 5:
          this.NotifySentInvitationRemoved(controller, (global::bnet.protocol.friends.InvitationNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        case 6:
          this.NotifyUpdateFriendState(controller, (global::bnet.protocol.friends.UpdateFriendStateNotification) request,
              pb::RpcUtil.SpecializeCallback<global::bnet.protocol.NO_RESPONSE>(
              done));
          return;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetRequestPrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetRequestPrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.friends.FriendNotification.DefaultInstance;
        case 1:
          return global::bnet.protocol.friends.FriendNotification.DefaultInstance;
        case 2:
          return global::bnet.protocol.friends.InvitationNotification.DefaultInstance;
        case 3:
          return global::bnet.protocol.friends.InvitationNotification.DefaultInstance;
        case 4:
          return global::bnet.protocol.friends.InvitationNotification.DefaultInstance;
        case 5:
          return global::bnet.protocol.friends.InvitationNotification.DefaultInstance;
        case 6:
          return global::bnet.protocol.friends.UpdateFriendStateNotification.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public pb::IMessage GetResponsePrototype(pbd::MethodDescriptor method) {
      if (method.Service != Descriptor) {
        throw new global::System.ArgumentException(
            "Service.GetResponsePrototype() given method descriptor for wrong service type.");
      }
      switch(method.Index) {
        case 0:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 1:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 2:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 3:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 4:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 5:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        case 6:
          return global::bnet.protocol.NO_RESPONSE.DefaultInstance;
        default:
          throw new global::System.InvalidOperationException("Can't get here.");
      }
    }
    
    public static Stub CreateStub(pb::IRpcChannel channel) {
      return new Stub(channel);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public class Stub : global::bnet.protocol.friends.FriendsNotify {
      internal Stub(pb::IRpcChannel channel) {
        this.channel = channel;
      }
      
      private readonly pb::IRpcChannel channel;
      
      public pb::IRpcChannel Channel {
        get { return channel; }
      }
      
      public override void NotifyFriendAdded(
          pb::IRpcController controller,
          global::bnet.protocol.friends.FriendNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[0],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyFriendRemoved(
          pb::IRpcController controller,
          global::bnet.protocol.friends.FriendNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[1],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyReceivedInvitationAdded(
          pb::IRpcController controller,
          global::bnet.protocol.friends.InvitationNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[2],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyReceivedInvitationRemoved(
          pb::IRpcController controller,
          global::bnet.protocol.friends.InvitationNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[3],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifySentInvitationAdded(
          pb::IRpcController controller,
          global::bnet.protocol.friends.InvitationNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[4],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifySentInvitationRemoved(
          pb::IRpcController controller,
          global::bnet.protocol.friends.InvitationNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[5],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
      
      public override void NotifyUpdateFriendState(
          pb::IRpcController controller,
          global::bnet.protocol.friends.UpdateFriendStateNotification request,
          global::System.Action<global::bnet.protocol.NO_RESPONSE> done) {
        channel.CallMethod(Descriptor.Methods[6],
            controller, request, global::bnet.protocol.NO_RESPONSE.DefaultInstance,
            pb::RpcUtil.GeneralizeCallback<global::bnet.protocol.NO_RESPONSE, global::bnet.protocol.NO_RESPONSE.Builder>(done, global::bnet.protocol.NO_RESPONSE.DefaultInstance));
      }
    }
  }
  #endregion
  
}

#endregion Designer generated code
