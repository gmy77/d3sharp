import "lib/protocol/attribute.proto";
import "lib/protocol/entity.proto";
import "lib/protocol/invitation.proto";

package bnet.protocol.channel;

message Message
{
    repeated .bnet.protocol.attribute.Attribute attribute = 1;
    optional uint32 role = 2;
    extensions 100 to 10000;
}

message ChannelDescription
{
    required .bnet.protocol.EntityId channel_id = 1;
    optional uint32 current_members = 2;
    optional .bnet.protocol.channel.ChannelState state = 3;
    extensions 100 to 10000;
}

message ChannelInfo
{
    required .bnet.protocol.channel.ChannelDescription description = 1;
    repeated .bnet.protocol.channel.Member member = 2;
    extensions 100 to 10000;
}

message ChannelState
{
    enum PrivacyLevel
    {
        PRIVACY_LEVEL_OPEN = 1;
        PRIVACY_LEVEL_OPEN_INVITATION_AND_FRIEND = 2;
        PRIVACY_LEVEL_OPEN_INVITATION = 3;
        PRIVACY_LEVEL_CLOSED = 4;
    }

    optional uint32 max_members = 1;
    optional uint32 min_members = 2;
    repeated .bnet.protocol.attribute.Attribute attribute = 3;
    repeated .bnet.protocol.invitation.Invitation invitation = 4;
    optional uint32 max_invitations = 5;
    optional uint32 reason = 6;
    optional .bnet.protocol.channel.ChannelState.PrivacyLevel privacy_level = 7 [default = PRIVACY_LEVEL_OPEN];
    optional bool public = 8;
    optional string name = 9;
    optional string delegate_name = 10;
    optional string channel_type = 11 [default = "default"];
    extensions 100 to 10000;
}

message MemberState
{
    repeated .bnet.protocol.attribute.Attribute attribute = 1;
    repeated uint32 role = 2 [packed=true];
    optional uint64 privileges = 3 [default = 0];
    extensions 100 to 10000;
}

message Member
{
    required .bnet.protocol.Identity identity = 1;
    required .bnet.protocol.channel.MemberState state = 2;
}

