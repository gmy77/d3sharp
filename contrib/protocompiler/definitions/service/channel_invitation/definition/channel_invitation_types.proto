import "lib/protocol/invitation.proto";
import "lib/protocol/entity.proto";
import "service/channel/definition/channel_types.proto";

package bnet.protocol.channel_invitation;

message Invitation
{
    required .bnet.protocol.channel.ChannelDescription channel_description = 1;
    optional bool reserved = 2 [default = false];
    optional bool rejoin = 3 [default = false];
    required uint32 service_type = 4;
    extend .bnet.protocol.invitation.Invitation
    {
        optional .bnet.protocol.channel_invitation.Invitation channel_invitation = 105;
    }
}

message SendInvitationRequest
{
    required .bnet.protocol.EntityId channel_id = 1;
    optional bool reserved = 2;
    optional bool rejoin = 3;
    required uint32 service_type = 4;
    extend .bnet.protocol.invitation.SendInvitationRequest
    {
        optional .bnet.protocol.channel_invitation.SendInvitationRequest channel_invitation = 105;
    }
}

message InvitationCollection
{
    optional uint32 service_type = 1;
    optional uint32 max_received_invitations = 2;
    optional uint64 object_id = 3;
    repeated .bnet.protocol.invitation.Invitation received_invitation = 4;
}

